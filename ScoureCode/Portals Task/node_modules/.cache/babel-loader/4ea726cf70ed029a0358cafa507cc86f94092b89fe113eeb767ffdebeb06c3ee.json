{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nvar Transfer = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Transfer, _React$Component);\n  function Transfer(props) {\n    var _this;\n    _classCallCheck(this, Transfer);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transfer).call(this, props));\n    _this.separatedDataSource = null;\n    _this.getLocale = function (transferLocale, renderEmpty) {\n      // Keep old locale props still working.\n      var oldLocale = {\n        notFoundContent: renderEmpty('Transfer')\n      };\n      if ('notFoundContent' in _this.props) {\n        oldLocale.notFoundContent = _this.props.notFoundContent;\n      }\n      if ('searchPlaceholder' in _this.props) {\n        oldLocale.searchPlaceholder = _this.props.searchPlaceholder;\n      }\n      return _extends(_extends(_extends({}, transferLocale), oldLocale), _this.props.locale);\n    };\n    _this.moveTo = function (direction) {\n      var _this$props = _this.props,\n        _this$props$targetKey = _this$props.targetKeys,\n        targetKeys = _this$props$targetKey === void 0 ? [] : _this$props$targetKey,\n        _this$props$dataSourc = _this$props.dataSource,\n        dataSource = _this$props$dataSourc === void 0 ? [] : _this$props$dataSourc,\n        onChange = _this$props.onChange;\n      var _this$state = _this.state,\n        sourceSelectedKeys = _this$state.sourceSelectedKeys,\n        targetSelectedKeys = _this$state.targetSelectedKeys;\n      var moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys; // filter the disabled options\n\n      var newMoveKeys = moveKeys.filter(function (key) {\n        return !dataSource.some(function (data) {\n          return !!(key === data.key && data.disabled);\n        });\n      }); // move items to target box\n\n      var newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(function (targetKey) {\n        return newMoveKeys.indexOf(targetKey) === -1;\n      }); // empty checked keys\n\n      var oppositeDirection = direction === 'right' ? 'left' : 'right';\n      _this.setState(_defineProperty({}, _this.getSelectedKeysName(oppositeDirection), []));\n      _this.handleSelectChange(oppositeDirection, []);\n      if (onChange) {\n        onChange(newTargetKeys, direction, newMoveKeys);\n      }\n    };\n    _this.moveToLeft = function () {\n      return _this.moveTo('left');\n    };\n    _this.moveToRight = function () {\n      return _this.moveTo('right');\n    };\n    _this.onItemSelectAll = function (direction, selectedKeys, checkAll) {\n      var originalSelectedKeys = _this.state[_this.getSelectedKeysName(direction)] || [];\n      var mergedCheckedKeys = [];\n      if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(originalSelectedKeys), _toConsumableArray(selectedKeys))));\n      } else {\n        // Remove current keys from origin keys\n        mergedCheckedKeys = originalSelectedKeys.filter(function (key) {\n          return selectedKeys.indexOf(key) === -1;\n        });\n      }\n      _this.handleSelectChange(direction, mergedCheckedKeys);\n      if (!_this.props.selectedKeys) {\n        _this.setState(_defineProperty({}, _this.getSelectedKeysName(direction), mergedCheckedKeys));\n      }\n    };\n    _this.handleSelectAll = function (direction, filteredDataSource, checkAll) {\n      warning(false, 'Transfer', '`handleSelectAll` will be removed, please use `onSelectAll` instead.');\n      _this.onItemSelectAll(direction, filteredDataSource.map(function (_ref) {\n        var key = _ref.key;\n        return key;\n      }), !checkAll);\n    }; // [Legacy] Old prop `body` pass origin check as arg. It's confusing.\n    // TODO: Remove this in next version.\n\n    _this.handleLeftSelectAll = function (filteredDataSource, checkAll) {\n      return _this.handleSelectAll('left', filteredDataSource, !checkAll);\n    };\n    _this.handleRightSelectAll = function (filteredDataSource, checkAll) {\n      return _this.handleSelectAll('right', filteredDataSource, !checkAll);\n    };\n    _this.onLeftItemSelectAll = function (selectedKeys, checkAll) {\n      return _this.onItemSelectAll('left', selectedKeys, checkAll);\n    };\n    _this.onRightItemSelectAll = function (selectedKeys, checkAll) {\n      return _this.onItemSelectAll('right', selectedKeys, checkAll);\n    };\n    _this.handleFilter = function (direction, e) {\n      var _this$props2 = _this.props,\n        onSearchChange = _this$props2.onSearchChange,\n        onSearch = _this$props2.onSearch;\n      var value = e.target.value;\n      if (onSearchChange) {\n        warning(false, 'Transfer', '`onSearchChange` is deprecated. Please use `onSearch` instead.');\n        onSearchChange(direction, e);\n      }\n      if (onSearch) {\n        onSearch(direction, value);\n      }\n    };\n    _this.handleLeftFilter = function (e) {\n      return _this.handleFilter('left', e);\n    };\n    _this.handleRightFilter = function (e) {\n      return _this.handleFilter('right', e);\n    };\n    _this.handleClear = function (direction) {\n      var onSearch = _this.props.onSearch;\n      if (onSearch) {\n        onSearch(direction, '');\n      }\n    };\n    _this.handleLeftClear = function () {\n      return _this.handleClear('left');\n    };\n    _this.handleRightClear = function () {\n      return _this.handleClear('right');\n    };\n    _this.onItemSelect = function (direction, selectedKey, checked) {\n      var _this$state2 = _this.state,\n        sourceSelectedKeys = _this$state2.sourceSelectedKeys,\n        targetSelectedKeys = _this$state2.targetSelectedKeys;\n      var holder = direction === 'left' ? _toConsumableArray(sourceSelectedKeys) : _toConsumableArray(targetSelectedKeys);\n      var index = holder.indexOf(selectedKey);\n      if (index > -1) {\n        holder.splice(index, 1);\n      }\n      if (checked) {\n        holder.push(selectedKey);\n      }\n      _this.handleSelectChange(direction, holder);\n      if (!_this.props.selectedKeys) {\n        _this.setState(_defineProperty({}, _this.getSelectedKeysName(direction), holder));\n      }\n    };\n    _this.handleSelect = function (direction, selectedItem, checked) {\n      warning(false, 'Transfer', '`handleSelect` will be removed, please use `onSelect` instead.');\n      _this.onItemSelect(direction, selectedItem.key, checked);\n    };\n    _this.handleLeftSelect = function (selectedItem, checked) {\n      return _this.handleSelect('left', selectedItem, checked);\n    };\n    _this.handleRightSelect = function (selectedItem, checked) {\n      return _this.handleSelect('right', selectedItem, checked);\n    };\n    _this.onLeftItemSelect = function (selectedKey, checked) {\n      return _this.onItemSelect('left', selectedKey, checked);\n    };\n    _this.onRightItemSelect = function (selectedKey, checked) {\n      return _this.onItemSelect('right', selectedKey, checked);\n    };\n    _this.handleScroll = function (direction, e) {\n      var onScroll = _this.props.onScroll;\n      if (onScroll) {\n        onScroll(direction, e);\n      }\n    };\n    _this.handleLeftScroll = function (e) {\n      return _this.handleScroll('left', e);\n    };\n    _this.handleRightScroll = function (e) {\n      return _this.handleScroll('right', e);\n    };\n    _this.handleListStyle = function (listStyle, direction) {\n      if (typeof listStyle === 'function') {\n        return listStyle({\n          direction: direction\n        });\n      }\n      return listStyle;\n    };\n    _this.renderTransfer = function (transferLocale) {\n      return React.createElement(ConfigConsumer, null, function (_ref2) {\n        var _classNames;\n        var getPrefixCls = _ref2.getPrefixCls,\n          renderEmpty = _ref2.renderEmpty;\n        var _this$props3 = _this.props,\n          customizePrefixCls = _this$props3.prefixCls,\n          className = _this$props3.className,\n          disabled = _this$props3.disabled,\n          _this$props3$operatio = _this$props3.operations,\n          operations = _this$props3$operatio === void 0 ? [] : _this$props3$operatio,\n          showSearch = _this$props3.showSearch,\n          body = _this$props3.body,\n          footer = _this$props3.footer,\n          style = _this$props3.style,\n          listStyle = _this$props3.listStyle,\n          operationStyle = _this$props3.operationStyle,\n          filterOption = _this$props3.filterOption,\n          render = _this$props3.render,\n          lazy = _this$props3.lazy,\n          children = _this$props3.children,\n          showSelectAll = _this$props3.showSelectAll;\n        var prefixCls = getPrefixCls('transfer', customizePrefixCls);\n        var locale = _this.getLocale(transferLocale, renderEmpty);\n        var _this$state3 = _this.state,\n          sourceSelectedKeys = _this$state3.sourceSelectedKeys,\n          targetSelectedKeys = _this$state3.targetSelectedKeys;\n        var _this$separateDataSou = _this.separateDataSource(),\n          leftDataSource = _this$separateDataSou.leftDataSource,\n          rightDataSource = _this$separateDataSou.rightDataSource;\n        var leftActive = targetSelectedKeys.length > 0;\n        var rightActive = sourceSelectedKeys.length > 0;\n        var cls = classNames(className, prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-customize-list\"), !!children), _classNames));\n        var titles = _this.getTitles(locale);\n        return React.createElement(\"div\", {\n          className: cls,\n          style: style\n        }, React.createElement(List, _extends({\n          prefixCls: \"\".concat(prefixCls, \"-list\"),\n          titleText: titles[0],\n          dataSource: leftDataSource,\n          filterOption: filterOption,\n          style: _this.handleListStyle(listStyle, 'left'),\n          checkedKeys: sourceSelectedKeys,\n          handleFilter: _this.handleLeftFilter,\n          handleClear: _this.handleLeftClear,\n          handleSelect: _this.handleLeftSelect,\n          handleSelectAll: _this.handleLeftSelectAll,\n          onItemSelect: _this.onLeftItemSelect,\n          onItemSelectAll: _this.onLeftItemSelectAll,\n          render: render,\n          showSearch: showSearch,\n          body: body,\n          renderList: children,\n          footer: footer,\n          lazy: lazy,\n          onScroll: _this.handleLeftScroll,\n          disabled: disabled,\n          direction: \"left\",\n          showSelectAll: showSelectAll\n        }, locale)), React.createElement(Operation, {\n          className: \"\".concat(prefixCls, \"-operation\"),\n          rightActive: rightActive,\n          rightArrowText: operations[0],\n          moveToRight: _this.moveToRight,\n          leftActive: leftActive,\n          leftArrowText: operations[1],\n          moveToLeft: _this.moveToLeft,\n          style: operationStyle,\n          disabled: disabled\n        }), React.createElement(List, _extends({\n          prefixCls: \"\".concat(prefixCls, \"-list\"),\n          titleText: titles[1],\n          dataSource: rightDataSource,\n          filterOption: filterOption,\n          style: _this.handleListStyle(listStyle, 'right'),\n          checkedKeys: targetSelectedKeys,\n          handleFilter: _this.handleRightFilter,\n          handleClear: _this.handleRightClear,\n          handleSelect: _this.handleRightSelect,\n          handleSelectAll: _this.handleRightSelectAll,\n          onItemSelect: _this.onRightItemSelect,\n          onItemSelectAll: _this.onRightItemSelectAll,\n          render: render,\n          showSearch: showSearch,\n          body: body,\n          renderList: children,\n          footer: footer,\n          lazy: lazy,\n          onScroll: _this.handleRightScroll,\n          disabled: disabled,\n          direction: \"right\",\n          showSelectAll: showSelectAll\n        }, locale)));\n      });\n    };\n    warning(!('notFoundContent' in props || 'searchPlaceholder' in props), 'Transfer', '`notFoundContent` and `searchPlaceholder` will be removed, ' + 'please use `locale` instead.');\n    warning(!('body' in props), 'Transfer', '`body` is internal usage and will bre removed, please use `children` instead.');\n    var _props$selectedKeys = props.selectedKeys,\n      selectedKeys = _props$selectedKeys === void 0 ? [] : _props$selectedKeys,\n      _props$targetKeys = props.targetKeys,\n      targetKeys = _props$targetKeys === void 0 ? [] : _props$targetKeys;\n    _this.state = {\n      sourceSelectedKeys: selectedKeys.filter(function (key) {\n        return targetKeys.indexOf(key) === -1;\n      }),\n      targetSelectedKeys: selectedKeys.filter(function (key) {\n        return targetKeys.indexOf(key) > -1;\n      })\n    };\n    return _this;\n  }\n  _createClass(Transfer, [{\n    key: \"getSelectedKeysName\",\n    // eslint-disable-next-line\n    value: function getSelectedKeysName(direction) {\n      return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n  }, {\n    key: \"getTitles\",\n    value: function getTitles(transferLocale) {\n      var props = this.props;\n      if (props.titles) {\n        return props.titles;\n      }\n      return transferLocale.titles;\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(direction, holder) {\n      var _this$state4 = this.state,\n        sourceSelectedKeys = _this$state4.sourceSelectedKeys,\n        targetSelectedKeys = _this$state4.targetSelectedKeys;\n      var onSelectChange = this.props.onSelectChange;\n      if (!onSelectChange) {\n        return;\n      }\n      if (direction === 'left') {\n        onSelectChange(holder, targetSelectedKeys);\n      } else {\n        onSelectChange(sourceSelectedKeys, holder);\n      }\n    }\n  }, {\n    key: \"separateDataSource\",\n    value: function separateDataSource() {\n      var _this$props4 = this.props,\n        dataSource = _this$props4.dataSource,\n        rowKey = _this$props4.rowKey,\n        _this$props4$targetKe = _this$props4.targetKeys,\n        targetKeys = _this$props4$targetKe === void 0 ? [] : _this$props4$targetKe;\n      var leftDataSource = [];\n      var rightDataSource = new Array(targetKeys.length);\n      dataSource.forEach(function (record) {\n        if (rowKey) {\n          record.key = rowKey(record);\n        } // rightDataSource should be ordered by targetKeys\n        // leftDataSource should be ordered by dataSource\n\n        var indexOfKey = targetKeys.indexOf(record.key);\n        if (indexOfKey !== -1) {\n          rightDataSource[indexOfKey] = record;\n        } else {\n          leftDataSource.push(record);\n        }\n      });\n      return {\n        leftDataSource: leftDataSource,\n        rightDataSource: rightDataSource\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LocaleReceiver, {\n        componentName: \"Transfer\",\n        defaultLocale: defaultLocale.Transfer\n      }, this.renderTransfer);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.selectedKeys) {\n        var targetKeys = nextProps.targetKeys || [];\n        return {\n          sourceSelectedKeys: nextProps.selectedKeys.filter(function (key) {\n            return !targetKeys.includes(key);\n          }),\n          targetSelectedKeys: nextProps.selectedKeys.filter(function (key) {\n            return targetKeys.includes(key);\n          })\n        };\n      }\n      return null;\n    }\n  }]);\n  return Transfer;\n}(React.Component); // For high-level customized Transfer @dqaria\n\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n  dataSource: [],\n  locale: {},\n  showSearch: false,\n  listStyle: function listStyle() {}\n};\nTransfer.propTypes = {\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  dataSource: PropTypes.array,\n  render: PropTypes.func,\n  targetKeys: PropTypes.array,\n  onChange: PropTypes.func,\n  height: PropTypes.number,\n  style: PropTypes.object,\n  listStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  operationStyle: PropTypes.object,\n  className: PropTypes.string,\n  titles: PropTypes.array,\n  operations: PropTypes.array,\n  showSearch: PropTypes.bool,\n  filterOption: PropTypes.func,\n  searchPlaceholder: PropTypes.string,\n  notFoundContent: PropTypes.node,\n  locale: PropTypes.object,\n  body: PropTypes.func,\n  footer: PropTypes.func,\n  rowKey: PropTypes.func,\n  lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n};\npolyfill(Transfer);\nexport default Transfer;","map":{"version":3,"mappings":"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","names":["React","PropTypes","classNames","polyfill","List","Operation","Search","warning","LocaleReceiver","defaultLocale","ConfigConsumer","Transfer","props","_classCallCheck","_this","separatedDataSource","getLocale","transferLocale","renderEmpty","oldLocale","notFoundContent","searchPlaceholder","_extends","locale","moveTo","direction","_this$props$targetKey","targetKeys","_this$props$dataSourc","dataSource","onChange","state","sourceSelectedKeys","targetSelectedKeys","moveKeys","newMoveKeys","filter","key","some","data","disabled","newTargetKeys","concat","indexOf","targetKey","oppositeDirection","setState","getSelectedKeysName","handleSelectChange","moveToLeft","moveToRight","onItemSelectAll","selectedKeys","checkAll","originalSelectedKeys","mergedCheckedKeys","Array","from","Set","handleSelectAll","filteredDataSource","map","handleLeftSelectAll","handleRightSelectAll","onLeftItemSelectAll","onRightItemSelectAll","handleFilter","e","onSearchChange","onSearch","value","target","handleLeftFilter","handleRightFilter","handleClear","handleLeftClear","handleRightClear","onItemSelect","selectedKey","checked","holder","index","splice","push","handleSelect","selectedItem","handleLeftSelect","handleRightSelect","onLeftItemSelect","onRightItemSelect","handleScroll","onScroll","handleLeftScroll","handleRightScroll","handleListStyle","listStyle","renderTransfer","getPrefixCls","customizePrefixCls","prefixCls","className","_this$props3$operatio","operations","showSearch","body","footer","style","operationStyle","filterOption","render","lazy","children","showSelectAll","separateDataSource","leftDataSource","rightDataSource","leftActive","length","rightActive","cls","titles","getTitles","titleText","checkedKeys","renderList","rightArrowText","leftArrowText","_props$targetKeys","onSelectChange","rowKey","_this$props4$targetKe","forEach","record","indexOfKey","componentName","nextProps","includes","Component","defaultProps","propTypes","string","bool","array","func","height","number","object","oneOfType","node"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\transfer\\transfer\\index.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nclass Transfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.separatedDataSource = null;\n        this.getLocale = (transferLocale, renderEmpty) => {\n            // Keep old locale props still working.\n            const oldLocale = {\n                notFoundContent: renderEmpty('Transfer'),\n            };\n            if ('notFoundContent' in this.props) {\n                oldLocale.notFoundContent = this.props.notFoundContent;\n            }\n            if ('searchPlaceholder' in this.props) {\n                oldLocale.searchPlaceholder = this.props.searchPlaceholder;\n            }\n            return Object.assign(Object.assign(Object.assign({}, transferLocale), oldLocale), this.props.locale);\n        };\n        this.moveTo = (direction) => {\n            const { targetKeys = [], dataSource = [], onChange } = this.props;\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n            // filter the disabled options\n            const newMoveKeys = moveKeys.filter((key) => !dataSource.some(data => !!(key === data.key && data.disabled)));\n            // move items to target box\n            const newTargetKeys = direction === 'right'\n                ? newMoveKeys.concat(targetKeys)\n                : targetKeys.filter(targetKey => newMoveKeys.indexOf(targetKey) === -1);\n            // empty checked keys\n            const oppositeDirection = direction === 'right' ? 'left' : 'right';\n            this.setState({\n                [this.getSelectedKeysName(oppositeDirection)]: [],\n            });\n            this.handleSelectChange(oppositeDirection, []);\n            if (onChange) {\n                onChange(newTargetKeys, direction, newMoveKeys);\n            }\n        };\n        this.moveToLeft = () => this.moveTo('left');\n        this.moveToRight = () => this.moveTo('right');\n        this.onItemSelectAll = (direction, selectedKeys, checkAll) => {\n            const originalSelectedKeys = this.state[this.getSelectedKeysName(direction)] || [];\n            let mergedCheckedKeys = [];\n            if (checkAll) {\n                // Merge current keys with origin key\n                mergedCheckedKeys = Array.from(new Set([...originalSelectedKeys, ...selectedKeys]));\n            }\n            else {\n                // Remove current keys from origin keys\n                mergedCheckedKeys = originalSelectedKeys.filter((key) => selectedKeys.indexOf(key) === -1);\n            }\n            this.handleSelectChange(direction, mergedCheckedKeys);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: mergedCheckedKeys,\n                });\n            }\n        };\n        this.handleSelectAll = (direction, filteredDataSource, checkAll) => {\n            warning(false, 'Transfer', '`handleSelectAll` will be removed, please use `onSelectAll` instead.');\n            this.onItemSelectAll(direction, filteredDataSource.map(({ key }) => key), !checkAll);\n        };\n        // [Legacy] Old prop `body` pass origin check as arg. It's confusing.\n        // TODO: Remove this in next version.\n        this.handleLeftSelectAll = (filteredDataSource, checkAll) => this.handleSelectAll('left', filteredDataSource, !checkAll);\n        this.handleRightSelectAll = (filteredDataSource, checkAll) => this.handleSelectAll('right', filteredDataSource, !checkAll);\n        this.onLeftItemSelectAll = (selectedKeys, checkAll) => this.onItemSelectAll('left', selectedKeys, checkAll);\n        this.onRightItemSelectAll = (selectedKeys, checkAll) => this.onItemSelectAll('right', selectedKeys, checkAll);\n        this.handleFilter = (direction, e) => {\n            const { onSearchChange, onSearch } = this.props;\n            const { value } = e.target;\n            if (onSearchChange) {\n                warning(false, 'Transfer', '`onSearchChange` is deprecated. Please use `onSearch` instead.');\n                onSearchChange(direction, e);\n            }\n            if (onSearch) {\n                onSearch(direction, value);\n            }\n        };\n        this.handleLeftFilter = (e) => this.handleFilter('left', e);\n        this.handleRightFilter = (e) => this.handleFilter('right', e);\n        this.handleClear = (direction) => {\n            const { onSearch } = this.props;\n            if (onSearch) {\n                onSearch(direction, '');\n            }\n        };\n        this.handleLeftClear = () => this.handleClear('left');\n        this.handleRightClear = () => this.handleClear('right');\n        this.onItemSelect = (direction, selectedKey, checked) => {\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const holder = direction === 'left' ? [...sourceSelectedKeys] : [...targetSelectedKeys];\n            const index = holder.indexOf(selectedKey);\n            if (index > -1) {\n                holder.splice(index, 1);\n            }\n            if (checked) {\n                holder.push(selectedKey);\n            }\n            this.handleSelectChange(direction, holder);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: holder,\n                });\n            }\n        };\n        this.handleSelect = (direction, selectedItem, checked) => {\n            warning(false, 'Transfer', '`handleSelect` will be removed, please use `onSelect` instead.');\n            this.onItemSelect(direction, selectedItem.key, checked);\n        };\n        this.handleLeftSelect = (selectedItem, checked) => this.handleSelect('left', selectedItem, checked);\n        this.handleRightSelect = (selectedItem, checked) => this.handleSelect('right', selectedItem, checked);\n        this.onLeftItemSelect = (selectedKey, checked) => this.onItemSelect('left', selectedKey, checked);\n        this.onRightItemSelect = (selectedKey, checked) => this.onItemSelect('right', selectedKey, checked);\n        this.handleScroll = (direction, e) => {\n            const { onScroll } = this.props;\n            if (onScroll) {\n                onScroll(direction, e);\n            }\n        };\n        this.handleLeftScroll = (e) => this.handleScroll('left', e);\n        this.handleRightScroll = (e) => this.handleScroll('right', e);\n        this.handleListStyle = (listStyle, direction) => {\n            if (typeof listStyle === 'function') {\n                return listStyle({ direction });\n            }\n            return listStyle;\n        };\n        this.renderTransfer = (transferLocale) => (<ConfigConsumer>\n      {({ getPrefixCls, renderEmpty }) => {\n            const { prefixCls: customizePrefixCls, className, disabled, operations = [], showSearch, body, footer, style, listStyle, operationStyle, filterOption, render, lazy, children, showSelectAll, } = this.props;\n            const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n            const locale = this.getLocale(transferLocale, renderEmpty);\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const { leftDataSource, rightDataSource } = this.separateDataSource();\n            const leftActive = targetSelectedKeys.length > 0;\n            const rightActive = sourceSelectedKeys.length > 0;\n            const cls = classNames(className, prefixCls, {\n                [`${prefixCls}-disabled`]: disabled,\n                [`${prefixCls}-customize-list`]: !!children,\n            });\n            const titles = this.getTitles(locale);\n            return (<div className={cls} style={style}>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[0]} dataSource={leftDataSource} filterOption={filterOption} style={this.handleListStyle(listStyle, 'left')} checkedKeys={sourceSelectedKeys} handleFilter={this.handleLeftFilter} handleClear={this.handleLeftClear} handleSelect={this.handleLeftSelect} handleSelectAll={this.handleLeftSelectAll} onItemSelect={this.onLeftItemSelect} onItemSelectAll={this.onLeftItemSelectAll} render={render} showSearch={showSearch} body={body} renderList={children} footer={footer} lazy={lazy} onScroll={this.handleLeftScroll} disabled={disabled} direction=\"left\" showSelectAll={showSelectAll} {...locale}/>\n            <Operation className={`${prefixCls}-operation`} rightActive={rightActive} rightArrowText={operations[0]} moveToRight={this.moveToRight} leftActive={leftActive} leftArrowText={operations[1]} moveToLeft={this.moveToLeft} style={operationStyle} disabled={disabled}/>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[1]} dataSource={rightDataSource} filterOption={filterOption} style={this.handleListStyle(listStyle, 'right')} checkedKeys={targetSelectedKeys} handleFilter={this.handleRightFilter} handleClear={this.handleRightClear} handleSelect={this.handleRightSelect} handleSelectAll={this.handleRightSelectAll} onItemSelect={this.onRightItemSelect} onItemSelectAll={this.onRightItemSelectAll} render={render} showSearch={showSearch} body={body} renderList={children} footer={footer} lazy={lazy} onScroll={this.handleRightScroll} disabled={disabled} direction=\"right\" showSelectAll={showSelectAll} {...locale}/>\n          </div>);\n        }}\n    </ConfigConsumer>);\n        warning(!('notFoundContent' in props || 'searchPlaceholder' in props), 'Transfer', '`notFoundContent` and `searchPlaceholder` will be removed, ' +\n            'please use `locale` instead.');\n        warning(!('body' in props), 'Transfer', '`body` is internal usage and will bre removed, please use `children` instead.');\n        const { selectedKeys = [], targetKeys = [] } = props;\n        this.state = {\n            sourceSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) === -1),\n            targetSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) > -1),\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.selectedKeys) {\n            const targetKeys = nextProps.targetKeys || [];\n            return {\n                sourceSelectedKeys: nextProps.selectedKeys.filter(key => !targetKeys.includes(key)),\n                targetSelectedKeys: nextProps.selectedKeys.filter(key => targetKeys.includes(key)),\n            };\n        }\n        return null;\n    }\n    // eslint-disable-next-line\n    getSelectedKeysName(direction) {\n        return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n    getTitles(transferLocale) {\n        const { props } = this;\n        if (props.titles) {\n            return props.titles;\n        }\n        return transferLocale.titles;\n    }\n    handleSelectChange(direction, holder) {\n        const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n        const { onSelectChange } = this.props;\n        if (!onSelectChange) {\n            return;\n        }\n        if (direction === 'left') {\n            onSelectChange(holder, targetSelectedKeys);\n        }\n        else {\n            onSelectChange(sourceSelectedKeys, holder);\n        }\n    }\n    separateDataSource() {\n        const { dataSource, rowKey, targetKeys = [] } = this.props;\n        const leftDataSource = [];\n        const rightDataSource = new Array(targetKeys.length);\n        dataSource.forEach(record => {\n            if (rowKey) {\n                record.key = rowKey(record);\n            }\n            // rightDataSource should be ordered by targetKeys\n            // leftDataSource should be ordered by dataSource\n            const indexOfKey = targetKeys.indexOf(record.key);\n            if (indexOfKey !== -1) {\n                rightDataSource[indexOfKey] = record;\n            }\n            else {\n                leftDataSource.push(record);\n            }\n        });\n        return {\n            leftDataSource,\n            rightDataSource,\n        };\n    }\n    render() {\n        return (<LocaleReceiver componentName=\"Transfer\" defaultLocale={defaultLocale.Transfer}>\n        {this.renderTransfer}\n      </LocaleReceiver>);\n    }\n}\n// For high-level customized Transfer @dqaria\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n    dataSource: [],\n    locale: {},\n    showSearch: false,\n    listStyle: () => { },\n};\nTransfer.propTypes = {\n    prefixCls: PropTypes.string,\n    disabled: PropTypes.bool,\n    dataSource: PropTypes.array,\n    render: PropTypes.func,\n    targetKeys: PropTypes.array,\n    onChange: PropTypes.func,\n    height: PropTypes.number,\n    style: PropTypes.object,\n    listStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    operationStyle: PropTypes.object,\n    className: PropTypes.string,\n    titles: PropTypes.array,\n    operations: PropTypes.array,\n    showSearch: PropTypes.bool,\n    filterOption: PropTypes.func,\n    searchPlaceholder: PropTypes.string,\n    notFoundContent: PropTypes.node,\n    locale: PropTypes.object,\n    body: PropTypes.func,\n    footer: PropTypes.func,\n    rowKey: PropTypes.func,\n    lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\npolyfill(Transfer);\nexport default Transfer;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}