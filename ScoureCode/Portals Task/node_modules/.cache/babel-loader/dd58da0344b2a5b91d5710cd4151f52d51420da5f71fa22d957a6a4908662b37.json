{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Checkbox from '../checkbox';\nimport Dropdown from '../dropdown';\nimport Menu from '../menu';\nimport Icon from '../icon';\nfunction checkSelection(_ref) {\n  var store = _ref.store,\n    getCheckboxPropsByItem = _ref.getCheckboxPropsByItem,\n    getRecordKey = _ref.getRecordKey,\n    data = _ref.data,\n    type = _ref.type,\n    byDefaultChecked = _ref.byDefaultChecked;\n  return byDefaultChecked ? data[type](function (item, i) {\n    return getCheckboxPropsByItem(item, i).defaultChecked;\n  }) : data[type](function (item, i) {\n    return store.getState().selectedRowKeys.indexOf(getRecordKey(item, i)) >= 0;\n  });\n}\nfunction getIndeterminateState(props) {\n  var store = props.store,\n    data = props.data;\n  if (!data.length) {\n    return false;\n  }\n  var someCheckedNotByDefaultChecked = checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'some',\n    byDefaultChecked: false\n  })) && !checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'every',\n    byDefaultChecked: false\n  }));\n  var someCheckedByDefaultChecked = checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'some',\n    byDefaultChecked: true\n  })) && !checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'every',\n    byDefaultChecked: true\n  }));\n  if (store.getState().selectionDirty) {\n    return someCheckedNotByDefaultChecked;\n  }\n  return someCheckedNotByDefaultChecked || someCheckedByDefaultChecked;\n}\nfunction getCheckState(props) {\n  var store = props.store,\n    data = props.data;\n  if (!data.length) {\n    return false;\n  }\n  if (store.getState().selectionDirty) {\n    return checkSelection(_extends(_extends({}, props), {\n      data: data,\n      type: 'every',\n      byDefaultChecked: false\n    }));\n  }\n  return checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'every',\n    byDefaultChecked: false\n  })) || checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'every',\n    byDefaultChecked: true\n  }));\n}\nvar SelectionCheckboxAll = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectionCheckboxAll, _React$Component);\n  function SelectionCheckboxAll(props) {\n    var _this;\n    _classCallCheck(this, SelectionCheckboxAll);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectionCheckboxAll).call(this, props));\n    _this.state = {\n      checked: false,\n      indeterminate: false\n    };\n    _this.handleSelectAllChange = function (e) {\n      var checked = e.target.checked;\n      _this.props.onSelect(checked ? 'all' : 'removeAll', 0, null);\n    };\n    _this.defaultSelections = props.hideDefaultSelections ? [] : [{\n      key: 'all',\n      text: props.locale.selectAll\n    }, {\n      key: 'invert',\n      text: props.locale.selectInvert\n    }];\n    return _this;\n  }\n  _createClass(SelectionCheckboxAll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.subscribe();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n  }, {\n    key: \"setCheckState\",\n    value: function setCheckState(props) {\n      var checked = getCheckState(props);\n      var indeterminate = getIndeterminateState(props);\n      this.setState(function (prevState) {\n        var newState = {};\n        if (indeterminate !== prevState.indeterminate) {\n          newState.indeterminate = indeterminate;\n        }\n        if (checked !== prevState.checked) {\n          newState.checked = checked;\n        }\n        return newState;\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      var _this2 = this;\n      var store = this.props.store;\n      this.unsubscribe = store.subscribe(function () {\n        _this2.setCheckState(_this2.props);\n      });\n    }\n  }, {\n    key: \"renderMenus\",\n    value: function renderMenus(selections) {\n      var _this3 = this;\n      return selections.map(function (selection, index) {\n        return React.createElement(Menu.Item, {\n          key: selection.key || index\n        }, React.createElement(\"div\", {\n          onClick: function onClick() {\n            _this3.props.onSelect(selection.key, index, selection.onSelect);\n          }\n        }, selection.text));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        disabled = _this$props.disabled,\n        prefixCls = _this$props.prefixCls,\n        selections = _this$props.selections,\n        getPopupContainer = _this$props.getPopupContainer;\n      var _this$state = this.state,\n        checked = _this$state.checked,\n        indeterminate = _this$state.indeterminate;\n      var selectionPrefixCls = \"\".concat(prefixCls, \"-selection\");\n      var customSelections = null;\n      if (selections) {\n        var newSelections = Array.isArray(selections) ? this.defaultSelections.concat(selections) : this.defaultSelections;\n        var menu = React.createElement(Menu, {\n          className: \"\".concat(selectionPrefixCls, \"-menu\"),\n          selectedKeys: []\n        }, this.renderMenus(newSelections));\n        customSelections = newSelections.length > 0 ? React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, React.createElement(\"div\", {\n          className: \"\".concat(selectionPrefixCls, \"-down\")\n        }, React.createElement(Icon, {\n          type: \"down\"\n        }))) : null;\n      }\n      return React.createElement(\"div\", {\n        className: selectionPrefixCls\n      }, React.createElement(Checkbox, {\n        className: classNames(_defineProperty({}, \"\".concat(selectionPrefixCls, \"-select-all-custom\"), customSelections)),\n        checked: checked,\n        indeterminate: indeterminate,\n        disabled: disabled,\n        onChange: this.handleSelectAllChange\n      }), customSelections);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var checked = getCheckState(props);\n      var indeterminate = getIndeterminateState(props);\n      var newState = {};\n      if (indeterminate !== state.indeterminate) {\n        newState.indeterminate = indeterminate;\n      }\n      if (checked !== state.checked) {\n        newState.checked = checked;\n      }\n      return newState;\n    }\n  }]);\n  return SelectionCheckboxAll;\n}(React.Component);\npolyfill(SelectionCheckboxAll);\nexport default SelectionCheckboxAll;","map":{"version":3,"mappings":"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","names":["React","classNames","polyfill","Checkbox","Dropdown","Menu","Icon","checkSelection","store","getCheckboxPropsByItem","getRecordKey","data","type","byDefaultChecked","item","i","defaultChecked","getState","selectedRowKeys","indexOf","getIndeterminateState","props","length","someCheckedNotByDefaultChecked","_extends","someCheckedByDefaultChecked","selectionDirty","getCheckState","SelectionCheckboxAll","_classCallCheck","_this","state","checked","indeterminate","handleSelectAllChange","e","target","onSelect","defaultSelections","hideDefaultSelections","key","text","locale","selectAll","selectInvert","subscribe","unsubscribe","setState","newState","prevState","_this2","setCheckState","selections","map","selection","index","Item","onClick","_this3","disabled","prefixCls","getPopupContainer","selectionPrefixCls","customSelections","newSelections","Array","isArray","concat","menu","className","selectedKeys","renderMenus","overlay","onChange","Component"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\table\\table\\SelectionCheckboxAll.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Checkbox from '../checkbox';\nimport Dropdown from '../dropdown';\nimport Menu from '../menu';\nimport Icon from '../icon';\nfunction checkSelection({ store, getCheckboxPropsByItem, getRecordKey, data, type, byDefaultChecked, }) {\n    return byDefaultChecked\n        ? data[type]((item, i) => getCheckboxPropsByItem(item, i).defaultChecked)\n        : data[type]((item, i) => store.getState().selectedRowKeys.indexOf(getRecordKey(item, i)) >= 0);\n}\nfunction getIndeterminateState(props) {\n    const { store, data } = props;\n    if (!data.length) {\n        return false;\n    }\n    const someCheckedNotByDefaultChecked = checkSelection(Object.assign(Object.assign({}, props), { data, type: 'some', byDefaultChecked: false })) &&\n        !checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false }));\n    const someCheckedByDefaultChecked = checkSelection(Object.assign(Object.assign({}, props), { data, type: 'some', byDefaultChecked: true })) &&\n        !checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: true }));\n    if (store.getState().selectionDirty) {\n        return someCheckedNotByDefaultChecked;\n    }\n    return someCheckedNotByDefaultChecked || someCheckedByDefaultChecked;\n}\nfunction getCheckState(props) {\n    const { store, data } = props;\n    if (!data.length) {\n        return false;\n    }\n    if (store.getState().selectionDirty) {\n        return checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false }));\n    }\n    return (checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false })) ||\n        checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: true })));\n}\nclass SelectionCheckboxAll extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n            indeterminate: false,\n        };\n        this.handleSelectAllChange = (e) => {\n            const { checked } = e.target;\n            this.props.onSelect(checked ? 'all' : 'removeAll', 0, null);\n        };\n        this.defaultSelections = props.hideDefaultSelections\n            ? []\n            : [\n                {\n                    key: 'all',\n                    text: props.locale.selectAll,\n                },\n                {\n                    key: 'invert',\n                    text: props.locale.selectInvert,\n                },\n            ];\n    }\n    static getDerivedStateFromProps(props, state) {\n        const checked = getCheckState(props);\n        const indeterminate = getIndeterminateState(props);\n        const newState = {};\n        if (indeterminate !== state.indeterminate) {\n            newState.indeterminate = indeterminate;\n        }\n        if (checked !== state.checked) {\n            newState.checked = checked;\n        }\n        return newState;\n    }\n    componentDidMount() {\n        this.subscribe();\n    }\n    componentWillUnmount() {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n        }\n    }\n    setCheckState(props) {\n        const checked = getCheckState(props);\n        const indeterminate = getIndeterminateState(props);\n        this.setState(prevState => {\n            const newState = {};\n            if (indeterminate !== prevState.indeterminate) {\n                newState.indeterminate = indeterminate;\n            }\n            if (checked !== prevState.checked) {\n                newState.checked = checked;\n            }\n            return newState;\n        });\n    }\n    subscribe() {\n        const { store } = this.props;\n        this.unsubscribe = store.subscribe(() => {\n            this.setCheckState(this.props);\n        });\n    }\n    renderMenus(selections) {\n        return selections.map((selection, index) => {\n            return (<Menu.Item key={selection.key || index}>\n          <div onClick={() => {\n                this.props.onSelect(selection.key, index, selection.onSelect);\n            }}>\n            {selection.text}\n          </div>\n        </Menu.Item>);\n        });\n    }\n    render() {\n        const { disabled, prefixCls, selections, getPopupContainer } = this.props;\n        const { checked, indeterminate } = this.state;\n        const selectionPrefixCls = `${prefixCls}-selection`;\n        let customSelections = null;\n        if (selections) {\n            const newSelections = Array.isArray(selections)\n                ? this.defaultSelections.concat(selections)\n                : this.defaultSelections;\n            const menu = (<Menu className={`${selectionPrefixCls}-menu`} selectedKeys={[]}>\n          {this.renderMenus(newSelections)}\n        </Menu>);\n            customSelections =\n                newSelections.length > 0 ? (<Dropdown overlay={menu} getPopupContainer={getPopupContainer}>\n            <div className={`${selectionPrefixCls}-down`}>\n              <Icon type=\"down\"/>\n            </div>\n          </Dropdown>) : null;\n        }\n        return (<div className={selectionPrefixCls}>\n        <Checkbox className={classNames({ [`${selectionPrefixCls}-select-all-custom`]: customSelections })} checked={checked} indeterminate={indeterminate} disabled={disabled} onChange={this.handleSelectAllChange}/>\n        {customSelections}\n      </div>);\n    }\n}\npolyfill(SelectionCheckboxAll);\nexport default SelectionCheckboxAll;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}