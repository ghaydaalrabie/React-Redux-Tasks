{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport createReactContext from '@ant-design/create-react-context';\nimport defaultRenderEmpty from './renderEmpty';\nexport var ConfigContext = createReactContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n    if (customizePrefixCls) return customizePrefixCls;\n    return \"ant-\".concat(suffixCls);\n  },\n  renderEmpty: defaultRenderEmpty\n});\nexport var ConfigConsumer = ConfigContext.Consumer;\nexport function withConfigConsumer(config) {\n  return function withConfigConsumerFunc(Component) {\n    // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods\n    var SFC = function SFC(props) {\n      return React.createElement(ConfigConsumer, null, function (configProps) {\n        var basicPrefixCls = config.prefixCls;\n        var getPrefixCls = configProps.getPrefixCls;\n        var customizePrefixCls = props.prefixCls;\n        var prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);\n        return React.createElement(Component, _extends({}, configProps, props, {\n          prefixCls: prefixCls\n        }));\n      });\n    };\n    var cons = Component.constructor;\n    var name = cons && cons.displayName || Component.name || 'Component';\n    SFC.displayName = \"withConfigConsumer(\".concat(name, \")\");\n    return SFC;\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,kBAAP,MAA+B,eAA/B;AACA,OAAO,IAAMC,aAAa,GAAGF,kBAAkB,CAAC;EAC5C;EACAG,YAAY,EAAE,sBAACC,SAAD,EAAYC,kBAAZ,EAAmC;IAC7C,IAAIA,kBAAJ,EACI,OAAOA,kBAAP;IACJ,qBAAcD,SAAd;EACH,CAN2C;EAO5CE,WAAW,EAAEL;AAP+B,CAAD,CAAxC;AASP,OAAO,IAAMM,cAAc,GAAGL,aAAa,CAACM,QAArC;AACP,OAAO,SAASC,kBAAT,CAA4BC,MAA5B,EAAoC;EACvC,OAAO,SAASC,sBAAT,CAAgCC,SAAhC,EAA2C;IAC9C;IACA,IAAMC,GAAG,GAAI,SAAPA,GAAO,CAACC,KAAD;MAAA,OAAYf,oBAACQ,cAAD,QACxB,UAACQ,WAAD,EAAiB;QAAA,IACKC,cADL,GACwBN,MADxB,CACNO,SADM;QAAA,IAENd,YAFM,GAEWY,WAFX,CAENZ,YAFM;QAAA,IAGKE,kBAHL,GAG4BS,KAH5B,CAGNG,SAHM;QAId,IAAMA,SAAS,GAAGd,YAAY,CAACa,cAAD,EAAiBX,kBAAjB,CAA9B;QACA,OAAON,oBAACa,SAAD,eAAeG,WAAf,EAAgCD,KAAhC;UAAuCG,SAAS,EAAEA;QAAlD,GAAP;MACH,CAPwB,CAAZ;IAAA,CAAb;IASA,IAAMC,IAAI,GAAGN,SAAS,CAACO,WAAvB;IACA,IAAMC,IAAI,GAAIF,IAAI,IAAIA,IAAI,CAACG,WAAd,IAA8BT,SAAS,CAACQ,IAAxC,IAAgD,WAA7D;IACAP,GAAG,CAACQ,WAAJ,gCAAwCD,IAAxC;IACA,OAAOP,GAAP;EACH,CAfD;AAgBH","names":["React","createReactContext","defaultRenderEmpty","ConfigContext","getPrefixCls","suffixCls","customizePrefixCls","renderEmpty","ConfigConsumer","Consumer","withConfigConsumer","config","withConfigConsumerFunc","Component","SFC","props","configProps","basicPrefixCls","prefixCls","cons","constructor","name","displayName"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\config-provider\\config-provider\\context.jsx"],"sourcesContent":["import * as React from 'react';\nimport createReactContext from '@ant-design/create-react-context';\nimport defaultRenderEmpty from './renderEmpty';\nexport const ConfigContext = createReactContext({\n    // We provide a default function for Context without provider\n    getPrefixCls: (suffixCls, customizePrefixCls) => {\n        if (customizePrefixCls)\n            return customizePrefixCls;\n        return `ant-${suffixCls}`;\n    },\n    renderEmpty: defaultRenderEmpty,\n});\nexport const ConfigConsumer = ConfigContext.Consumer;\nexport function withConfigConsumer(config) {\n    return function withConfigConsumerFunc(Component) {\n        // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods\n        const SFC = ((props) => (<ConfigConsumer>\n        {(configProps) => {\n            const { prefixCls: basicPrefixCls } = config;\n            const { getPrefixCls } = configProps;\n            const { prefixCls: customizePrefixCls } = props;\n            const prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);\n            return <Component {...configProps} {...props} prefixCls={prefixCls}/>;\n        }}\n      </ConfigConsumer>));\n        const cons = Component.constructor;\n        const name = (cons && cons.displayName) || Component.name || 'Component';\n        SFC.displayName = `withConfigConsumer(${name})`;\n        return SFC;\n    };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}