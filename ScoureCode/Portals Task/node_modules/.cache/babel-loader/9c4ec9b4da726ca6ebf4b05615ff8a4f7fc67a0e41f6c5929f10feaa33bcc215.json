{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ConfigConsumer } from '../config-provider';\nfunction getNumberArray(num) {\n  return num ? num.toString().split('').reverse().map(function (i) {\n    var current = Number(i);\n    return isNaN(current) ? i : current;\n  }) : [];\n}\nfunction renderNumberList(position) {\n  var childrenToReturn = [];\n  for (var i = 0; i < 30; i++) {\n    var currentClassName = position === i ? 'current' : '';\n    childrenToReturn.push(React.createElement(\"p\", {\n      key: i.toString(),\n      className: currentClassName\n    }, i % 10));\n  }\n  return childrenToReturn;\n}\nvar ScrollNumber = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScrollNumber, _React$Component);\n  function ScrollNumber(props) {\n    var _this;\n    _classCallCheck(this, ScrollNumber);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollNumber).call(this, props));\n    _this.onAnimated = function () {\n      var onAnimated = _this.props.onAnimated;\n      if (onAnimated) {\n        onAnimated();\n      }\n    };\n    _this.renderScrollNumber = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n        customizePrefixCls = _this$props.prefixCls,\n        className = _this$props.className,\n        style = _this$props.style,\n        title = _this$props.title,\n        _this$props$component = _this$props.component,\n        component = _this$props$component === void 0 ? 'sup' : _this$props$component,\n        displayComponent = _this$props.displayComponent; // fix https://fb.me/react-unknown-prop\n\n      var restProps = omit(_this.props, ['count', 'onAnimated', 'component', 'prefixCls', 'displayComponent']);\n      var prefixCls = getPrefixCls('scroll-number', customizePrefixCls);\n      var newProps = _extends(_extends({}, restProps), {\n        className: classNames(prefixCls, className),\n        title: title\n      }); // allow specify the border\n      // mock border-color by box-shadow for compatible with old usage:\n      // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n\n      if (style && style.borderColor) {\n        newProps.style = _extends(_extends({}, style), {\n          boxShadow: \"0 0 0 1px \".concat(style.borderColor, \" inset\")\n        });\n      }\n      if (displayComponent) {\n        return React.cloneElement(displayComponent, {\n          className: classNames(\"\".concat(prefixCls, \"-custom-component\"), displayComponent.props && displayComponent.props.className)\n        });\n      }\n      return React.createElement(component, newProps, _this.renderNumberElement(prefixCls));\n    };\n    _this.state = {\n      animateStarted: true,\n      count: props.count\n    };\n    return _this;\n  }\n  _createClass(ScrollNumber, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_, prevState) {\n      this.lastCount = prevState.count;\n      var animateStarted = this.state.animateStarted;\n      if (animateStarted) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState(function (__, props) {\n          return {\n            animateStarted: false,\n            count: props.count\n          };\n        }, this.onAnimated);\n      }\n    }\n  }, {\n    key: \"getPositionByNum\",\n    value: function getPositionByNum(num, i) {\n      var count = this.state.count;\n      var currentCount = Math.abs(Number(count));\n      var lastCount = Math.abs(Number(this.lastCount));\n      var currentDigit = Math.abs(getNumberArray(this.state.count)[i]);\n      var lastDigit = Math.abs(getNumberArray(this.lastCount)[i]);\n      if (this.state.animateStarted) {\n        return 10 + num;\n      } // 同方向则在同一侧切换数字\n\n      if (currentCount > lastCount) {\n        if (currentDigit >= lastDigit) {\n          return 10 + num;\n        }\n        return 20 + num;\n      }\n      if (currentDigit <= lastDigit) {\n        return 10 + num;\n      }\n      return num;\n    }\n  }, {\n    key: \"renderCurrentNumber\",\n    value: function renderCurrentNumber(prefixCls, num, i) {\n      if (typeof num === 'number') {\n        var position = this.getPositionByNum(num, i);\n        var removeTransition = this.state.animateStarted || getNumberArray(this.lastCount)[i] === undefined;\n        return React.createElement('span', {\n          className: \"\".concat(prefixCls, \"-only\"),\n          style: {\n            transition: removeTransition ? 'none' : undefined,\n            msTransform: \"translateY(\".concat(-position * 100, \"%)\"),\n            WebkitTransform: \"translateY(\".concat(-position * 100, \"%)\"),\n            transform: \"translateY(\".concat(-position * 100, \"%)\")\n          },\n          key: i\n        }, renderNumberList(position));\n      }\n      return React.createElement(\"span\", {\n        key: \"symbol\",\n        className: \"\".concat(prefixCls, \"-symbol\")\n      }, num);\n    }\n  }, {\n    key: \"renderNumberElement\",\n    value: function renderNumberElement(prefixCls) {\n      var _this2 = this;\n      var count = this.state.count;\n      if (count && Number(count) % 1 === 0) {\n        return getNumberArray(count).map(function (num, i) {\n          return _this2.renderCurrentNumber(prefixCls, num, i);\n        }).reverse();\n      }\n      return count;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderScrollNumber);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, nextState) {\n      if ('count' in nextProps) {\n        if (nextState.count === nextProps.count) {\n          return null;\n        }\n        return {\n          animateStarted: true\n        };\n      }\n      return null;\n    }\n  }]);\n  return ScrollNumber;\n}(React.Component);\nScrollNumber.defaultProps = {\n  count: null,\n  onAnimated: function onAnimated() {}\n};\npolyfill(ScrollNumber);\nexport default ScrollNumber;","map":{"version":3,"mappings":"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","names":["React","omit","classNames","polyfill","ConfigConsumer","getNumberArray","num","toString","split","reverse","map","current","Number","i","isNaN","renderNumberList","position","childrenToReturn","currentClassName","push","key","className","ScrollNumber","props","_classCallCheck","_this","onAnimated","renderScrollNumber","getPrefixCls","customizePrefixCls","prefixCls","style","title","_this$props$component","component","displayComponent","restProps","newProps","_extends","borderColor","boxShadow","cloneElement","createElement","renderNumberElement","state","animateStarted","count","_","prevState","lastCount","setState","__","currentCount","Math","abs","currentDigit","lastDigit","getPositionByNum","removeTransition","undefined","transition","msTransform","WebkitTransform","transform","_this2","renderCurrentNumber","nextProps","nextState","Component","defaultProps"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\badge\\badge\\ScrollNumber.jsx"],"sourcesContent":["import * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ConfigConsumer } from '../config-provider';\nfunction getNumberArray(num) {\n    return num\n        ? num\n            .toString()\n            .split('')\n            .reverse()\n            .map(i => {\n            const current = Number(i);\n            return isNaN(current) ? i : current;\n        })\n        : [];\n}\nfunction renderNumberList(position) {\n    const childrenToReturn = [];\n    for (let i = 0; i < 30; i++) {\n        const currentClassName = position === i ? 'current' : '';\n        childrenToReturn.push(<p key={i.toString()} className={currentClassName}>\n        {i % 10}\n      </p>);\n    }\n    return childrenToReturn;\n}\nclass ScrollNumber extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onAnimated = () => {\n            const { onAnimated } = this.props;\n            if (onAnimated) {\n                onAnimated();\n            }\n        };\n        this.renderScrollNumber = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className, style, title, component = 'sup', displayComponent, } = this.props;\n            // fix https://fb.me/react-unknown-prop\n            const restProps = omit(this.props, [\n                'count',\n                'onAnimated',\n                'component',\n                'prefixCls',\n                'displayComponent',\n            ]);\n            const prefixCls = getPrefixCls('scroll-number', customizePrefixCls);\n            const newProps = Object.assign(Object.assign({}, restProps), { className: classNames(prefixCls, className), title: title });\n            // allow specify the border\n            // mock border-color by box-shadow for compatible with old usage:\n            // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n            if (style && style.borderColor) {\n                newProps.style = Object.assign(Object.assign({}, style), { boxShadow: `0 0 0 1px ${style.borderColor} inset` });\n            }\n            if (displayComponent) {\n                return React.cloneElement(displayComponent, {\n                    className: classNames(`${prefixCls}-custom-component`, displayComponent.props && displayComponent.props.className),\n                });\n            }\n            return React.createElement(component, newProps, this.renderNumberElement(prefixCls));\n        };\n        this.state = {\n            animateStarted: true,\n            count: props.count,\n        };\n    }\n    static getDerivedStateFromProps(nextProps, nextState) {\n        if ('count' in nextProps) {\n            if (nextState.count === nextProps.count) {\n                return null;\n            }\n            return {\n                animateStarted: true,\n            };\n        }\n        return null;\n    }\n    componentDidUpdate(_, prevState) {\n        this.lastCount = prevState.count;\n        const { animateStarted } = this.state;\n        if (animateStarted) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState((__, props) => ({\n                animateStarted: false,\n                count: props.count,\n            }), this.onAnimated);\n        }\n    }\n    getPositionByNum(num, i) {\n        const { count } = this.state;\n        const currentCount = Math.abs(Number(count));\n        const lastCount = Math.abs(Number(this.lastCount));\n        const currentDigit = Math.abs(getNumberArray(this.state.count)[i]);\n        const lastDigit = Math.abs(getNumberArray(this.lastCount)[i]);\n        if (this.state.animateStarted) {\n            return 10 + num;\n        }\n        // 同方向则在同一侧切换数字\n        if (currentCount > lastCount) {\n            if (currentDigit >= lastDigit) {\n                return 10 + num;\n            }\n            return 20 + num;\n        }\n        if (currentDigit <= lastDigit) {\n            return 10 + num;\n        }\n        return num;\n    }\n    renderCurrentNumber(prefixCls, num, i) {\n        if (typeof num === 'number') {\n            const position = this.getPositionByNum(num, i);\n            const removeTransition = this.state.animateStarted || getNumberArray(this.lastCount)[i] === undefined;\n            return React.createElement('span', {\n                className: `${prefixCls}-only`,\n                style: {\n                    transition: removeTransition ? 'none' : undefined,\n                    msTransform: `translateY(${-position * 100}%)`,\n                    WebkitTransform: `translateY(${-position * 100}%)`,\n                    transform: `translateY(${-position * 100}%)`,\n                },\n                key: i,\n            }, renderNumberList(position));\n        }\n        return (<span key=\"symbol\" className={`${prefixCls}-symbol`}>\n        {num}\n      </span>);\n    }\n    renderNumberElement(prefixCls) {\n        const { count } = this.state;\n        if (count && Number(count) % 1 === 0) {\n            return getNumberArray(count)\n                .map((num, i) => this.renderCurrentNumber(prefixCls, num, i))\n                .reverse();\n        }\n        return count;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderScrollNumber}</ConfigConsumer>;\n    }\n}\nScrollNumber.defaultProps = {\n    count: null,\n    onAnimated() { },\n};\npolyfill(ScrollNumber);\nexport default ScrollNumber;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}