{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport findIndex from 'lodash/findIndex';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nvar Upload = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Upload, _React$Component);\n  function Upload(props) {\n    var _this;\n    _classCallCheck(this, Upload);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n    _this.saveUpload = function (node) {\n      _this.upload = node;\n    };\n    _this.onStart = function (file) {\n      var fileList = _this.state.fileList;\n      var targetItem = fileToObject(file);\n      targetItem.status = 'uploading';\n      var nextFileList = fileList.concat();\n      var fileIndex = findIndex(nextFileList, function (_ref) {\n        var uid = _ref.uid;\n        return uid === targetItem.uid;\n      });\n      if (fileIndex === -1) {\n        nextFileList.push(targetItem);\n      } else {\n        nextFileList[fileIndex] = targetItem;\n      }\n      _this.onChange({\n        file: targetItem,\n        fileList: nextFileList\n      }); // fix ie progress\n\n      if (!window.File || process.env.TEST_IE) {\n        _this.autoUpdateProgress(0, targetItem);\n      }\n    };\n    _this.onSuccess = function (response, file, xhr) {\n      _this.clearProgressTimer();\n      try {\n        if (typeof response === 'string') {\n          response = JSON.parse(response);\n        }\n      } catch (e) {\n        /* do nothing */\n      }\n      var fileList = _this.state.fileList;\n      var targetItem = getFileItem(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n      targetItem.status = 'done';\n      targetItem.response = response;\n      targetItem.xhr = xhr;\n      _this.onChange({\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    };\n    _this.onProgress = function (e, file) {\n      var fileList = _this.state.fileList;\n      var targetItem = getFileItem(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n      targetItem.percent = e.percent;\n      _this.onChange({\n        event: e,\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    };\n    _this.onError = function (error, response, file) {\n      _this.clearProgressTimer();\n      var fileList = _this.state.fileList;\n      var targetItem = getFileItem(file, fileList); // removed\n\n      if (!targetItem) {\n        return;\n      }\n      targetItem.error = error;\n      targetItem.response = response;\n      targetItem.status = 'error';\n      _this.onChange({\n        file: _extends({}, targetItem),\n        fileList: fileList\n      });\n    };\n    _this.handleRemove = function (file) {\n      var onRemove = _this.props.onRemove;\n      var fileList = _this.state.fileList;\n      Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n        // Prevent removing file\n        if (ret === false) {\n          return;\n        }\n        var removedFileList = removeFileItem(file, fileList);\n        if (removedFileList) {\n          file.status = 'removed'; // eslint-disable-line\n\n          if (_this.upload) {\n            _this.upload.abort(file);\n          }\n          _this.onChange({\n            file: file,\n            fileList: removedFileList\n          });\n        }\n      });\n    };\n    _this.onChange = function (info) {\n      if (!('fileList' in _this.props)) {\n        _this.setState({\n          fileList: info.fileList\n        });\n      }\n      var onChange = _this.props.onChange;\n      if (onChange) {\n        onChange(info);\n      }\n    };\n    _this.onFileDrop = function (e) {\n      _this.setState({\n        dragState: e.type\n      });\n    };\n    _this.beforeUpload = function (file, fileList) {\n      var beforeUpload = _this.props.beforeUpload;\n      var stateFileList = _this.state.fileList;\n      if (!beforeUpload) {\n        return true;\n      }\n      var result = beforeUpload(file, fileList);\n      if (result === false) {\n        _this.onChange({\n          file: file,\n          fileList: uniqBy(stateFileList.concat(fileList.map(fileToObject)), function (item) {\n            return item.uid;\n          })\n        });\n        return false;\n      }\n      if (result && result.then) {\n        return result;\n      }\n      return true;\n    };\n    _this.renderUploadList = function (locale) {\n      var _this$props = _this.props,\n        showUploadList = _this$props.showUploadList,\n        listType = _this$props.listType,\n        onPreview = _this$props.onPreview,\n        onDownload = _this$props.onDownload,\n        previewFile = _this$props.previewFile,\n        disabled = _this$props.disabled,\n        propLocale = _this$props.locale;\n      var showRemoveIcon = showUploadList.showRemoveIcon,\n        showPreviewIcon = showUploadList.showPreviewIcon,\n        showDownloadIcon = showUploadList.showDownloadIcon;\n      var fileList = _this.state.fileList;\n      return React.createElement(UploadList, {\n        listType: listType,\n        items: fileList,\n        previewFile: previewFile,\n        onPreview: onPreview,\n        onDownload: onDownload,\n        onRemove: _this.handleRemove,\n        showRemoveIcon: !disabled && showRemoveIcon,\n        showPreviewIcon: showPreviewIcon,\n        showDownloadIcon: showDownloadIcon,\n        locale: _extends(_extends({}, locale), propLocale)\n      });\n    };\n    _this.renderUpload = function (_ref2) {\n      var _classNames2;\n      var getPrefixCls = _ref2.getPrefixCls;\n      var _this$props2 = _this.props,\n        customizePrefixCls = _this$props2.prefixCls,\n        className = _this$props2.className,\n        showUploadList = _this$props2.showUploadList,\n        listType = _this$props2.listType,\n        type = _this$props2.type,\n        disabled = _this$props2.disabled,\n        children = _this$props2.children,\n        style = _this$props2.style;\n      var _this$state = _this.state,\n        fileList = _this$state.fileList,\n        dragState = _this$state.dragState;\n      var prefixCls = getPrefixCls('upload', customizePrefixCls);\n      var rcUploadProps = _extends(_extends({\n        onStart: _this.onStart,\n        onError: _this.onError,\n        onProgress: _this.onProgress,\n        onSuccess: _this.onSuccess\n      }, _this.props), {\n        prefixCls: prefixCls,\n        beforeUpload: _this.beforeUpload\n      });\n      delete rcUploadProps.className;\n      delete rcUploadProps.style;\n      var uploadList = showUploadList ? React.createElement(LocaleReceiver, {\n        componentName: \"Upload\",\n        defaultLocale: defaultLocale.Upload\n      }, _this.renderUploadList) : null;\n      if (type === 'drag') {\n        var _classNames;\n        var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-uploading\"), fileList.some(function (file) {\n          return file.status === 'uploading';\n        })), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-hover\"), dragState === 'dragover'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames), className);\n        return React.createElement(\"span\", null, React.createElement(\"div\", {\n          className: dragCls,\n          onDrop: _this.onFileDrop,\n          onDragOver: _this.onFileDrop,\n          onDragLeave: _this.onFileDrop,\n          style: style\n        }, React.createElement(RcUpload, _extends({}, rcUploadProps, {\n          ref: _this.saveUpload,\n          className: \"\".concat(prefixCls, \"-btn\")\n        }), React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-drag-container\")\n        }, children))), uploadList);\n      }\n      var uploadButtonCls = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select-\").concat(listType), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames2)); // Remove id to avoid open by label when trigger is hidden\n      // https://github.com/ant-design/ant-design/issues/14298\n      // https://github.com/ant-design/ant-design/issues/16478\n\n      if (!children || disabled) {\n        delete rcUploadProps.id;\n      }\n      var uploadButton = React.createElement(\"div\", {\n        className: uploadButtonCls,\n        style: children ? undefined : {\n          display: 'none'\n        }\n      }, React.createElement(RcUpload, _extends({}, rcUploadProps, {\n        ref: _this.saveUpload\n      })));\n      if (listType === 'picture-card') {\n        return React.createElement(\"span\", {\n          className: classNames(className, \"\".concat(prefixCls, \"-picture-card-wrapper\"))\n        }, uploadList, uploadButton);\n      }\n      return React.createElement(\"span\", {\n        className: className\n      }, uploadButton, uploadList);\n    };\n    _this.state = {\n      fileList: props.fileList || props.defaultFileList || [],\n      dragState: 'drop'\n    };\n    warning('fileList' in props || !('value' in props), 'Upload', '`value` is not validate prop, do you mean `fileList`?');\n    return _this;\n  }\n  _createClass(Upload, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearProgressTimer();\n    }\n  }, {\n    key: \"clearProgressTimer\",\n    value: function clearProgressTimer() {\n      clearInterval(this.progressTimer);\n    }\n  }, {\n    key: \"autoUpdateProgress\",\n    value: function autoUpdateProgress(_, file) {\n      var _this2 = this;\n      var getPercent = genPercentAdd();\n      var curPercent = 0;\n      this.clearProgressTimer();\n      this.progressTimer = setInterval(function () {\n        curPercent = getPercent(curPercent);\n        _this2.onProgress({\n          percent: curPercent * 100\n        }, file);\n      }, 200);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderUpload);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('fileList' in nextProps) {\n        return {\n          fileList: nextProps.fileList || []\n        };\n      }\n      return null;\n    }\n  }]);\n  return Upload;\n}(React.Component);\nUpload.defaultProps = {\n  type: 'select',\n  multiple: false,\n  action: '',\n  data: {},\n  accept: '',\n  beforeUpload: T,\n  showUploadList: true,\n  listType: 'text',\n  className: '',\n  disabled: false,\n  supportServerRender: true\n};\npolyfill(Upload);\nexport default Upload;","map":{"version":3,"mappings":"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","names":["React","polyfill","RcUpload","classNames","uniqBy","findIndex","UploadList","T","fileToObject","genPercentAdd","getFileItem","removeFileItem","LocaleReceiver","defaultLocale","ConfigConsumer","warning","Upload","props","_classCallCheck","_this","saveUpload","node","upload","onStart","file","fileList","state","targetItem","status","nextFileList","concat","fileIndex","uid","push","onChange","window","File","process","env","TEST_IE","autoUpdateProgress","onSuccess","response","xhr","clearProgressTimer","JSON","parse","e","_extends","onProgress","percent","event","onError","error","handleRemove","onRemove","Promise","resolve","then","ret","removedFileList","abort","info","setState","onFileDrop","dragState","type","beforeUpload","stateFileList","result","map","item","renderUploadList","locale","showUploadList","listType","onPreview","onDownload","previewFile","disabled","propLocale","showRemoveIcon","showPreviewIcon","showDownloadIcon","items","renderUpload","getPrefixCls","customizePrefixCls","prefixCls","className","children","style","rcUploadProps","uploadList","componentName","dragCls","some","onDrop","onDragOver","onDragLeave","ref","uploadButtonCls","id","uploadButton","undefined","display","defaultFileList","clearInterval","progressTimer","_","getPercent","curPercent","setInterval","_this2","nextProps","Component","defaultProps","multiple","action","data","accept","supportServerRender"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\upload\\upload\\Upload.jsx"],"sourcesContent":["import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport findIndex from 'lodash/findIndex';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveUpload = (node) => {\n            this.upload = node;\n        };\n        this.onStart = (file) => {\n            const { fileList } = this.state;\n            const targetItem = fileToObject(file);\n            targetItem.status = 'uploading';\n            const nextFileList = fileList.concat();\n            const fileIndex = findIndex(nextFileList, ({ uid }) => uid === targetItem.uid);\n            if (fileIndex === -1) {\n                nextFileList.push(targetItem);\n            }\n            else {\n                nextFileList[fileIndex] = targetItem;\n            }\n            this.onChange({\n                file: targetItem,\n                fileList: nextFileList,\n            });\n            // fix ie progress\n            if (!window.File || process.env.TEST_IE) {\n                this.autoUpdateProgress(0, targetItem);\n            }\n        };\n        this.onSuccess = (response, file, xhr) => {\n            this.clearProgressTimer();\n            try {\n                if (typeof response === 'string') {\n                    response = JSON.parse(response);\n                }\n            }\n            catch (e) {\n                /* do nothing */\n            }\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.status = 'done';\n            targetItem.response = response;\n            targetItem.xhr = xhr;\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onProgress = (e, file) => {\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.percent = e.percent;\n            this.onChange({\n                event: e,\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onError = (error, response, file) => {\n            this.clearProgressTimer();\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.error = error;\n            targetItem.response = response;\n            targetItem.status = 'error';\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.handleRemove = (file) => {\n            const { onRemove } = this.props;\n            const { fileList } = this.state;\n            Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n                // Prevent removing file\n                if (ret === false) {\n                    return;\n                }\n                const removedFileList = removeFileItem(file, fileList);\n                if (removedFileList) {\n                    file.status = 'removed'; // eslint-disable-line\n                    if (this.upload) {\n                        this.upload.abort(file);\n                    }\n                    this.onChange({\n                        file,\n                        fileList: removedFileList,\n                    });\n                }\n            });\n        };\n        this.onChange = (info) => {\n            if (!('fileList' in this.props)) {\n                this.setState({ fileList: info.fileList });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(info);\n            }\n        };\n        this.onFileDrop = (e) => {\n            this.setState({\n                dragState: e.type,\n            });\n        };\n        this.beforeUpload = (file, fileList) => {\n            const { beforeUpload } = this.props;\n            const { fileList: stateFileList } = this.state;\n            if (!beforeUpload) {\n                return true;\n            }\n            const result = beforeUpload(file, fileList);\n            if (result === false) {\n                this.onChange({\n                    file,\n                    fileList: uniqBy(stateFileList.concat(fileList.map(fileToObject)), (item) => item.uid),\n                });\n                return false;\n            }\n            if (result && result.then) {\n                return result;\n            }\n            return true;\n        };\n        this.renderUploadList = (locale) => {\n            const { showUploadList, listType, onPreview, onDownload, previewFile, disabled, locale: propLocale, } = this.props;\n            const { showRemoveIcon, showPreviewIcon, showDownloadIcon } = showUploadList;\n            const { fileList } = this.state;\n            return (<UploadList listType={listType} items={fileList} previewFile={previewFile} onPreview={onPreview} onDownload={onDownload} onRemove={this.handleRemove} showRemoveIcon={!disabled && showRemoveIcon} showPreviewIcon={showPreviewIcon} showDownloadIcon={showDownloadIcon} locale={Object.assign(Object.assign({}, locale), propLocale)}/>);\n        };\n        this.renderUpload = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className, showUploadList, listType, type, disabled, children, style, } = this.props;\n            const { fileList, dragState } = this.state;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const rcUploadProps = Object.assign(Object.assign({ onStart: this.onStart, onError: this.onError, onProgress: this.onProgress, onSuccess: this.onSuccess }, this.props), { prefixCls, beforeUpload: this.beforeUpload });\n            delete rcUploadProps.className;\n            delete rcUploadProps.style;\n            const uploadList = showUploadList ? (<LocaleReceiver componentName=\"Upload\" defaultLocale={defaultLocale.Upload}>\n        {this.renderUploadList}\n      </LocaleReceiver>) : null;\n            if (type === 'drag') {\n                const dragCls = classNames(prefixCls, {\n                    [`${prefixCls}-drag`]: true,\n                    [`${prefixCls}-drag-uploading`]: fileList.some(file => file.status === 'uploading'),\n                    [`${prefixCls}-drag-hover`]: dragState === 'dragover',\n                    [`${prefixCls}-disabled`]: disabled,\n                }, className);\n                return (<span>\n          <div className={dragCls} onDrop={this.onFileDrop} onDragOver={this.onFileDrop} onDragLeave={this.onFileDrop} style={style}>\n            <RcUpload {...rcUploadProps} ref={this.saveUpload} className={`${prefixCls}-btn`}>\n              <div className={`${prefixCls}-drag-container`}>{children}</div>\n            </RcUpload>\n          </div>\n          {uploadList}\n        </span>);\n            }\n            const uploadButtonCls = classNames(prefixCls, {\n                [`${prefixCls}-select`]: true,\n                [`${prefixCls}-select-${listType}`]: true,\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            // Remove id to avoid open by label when trigger is hidden\n            // https://github.com/ant-design/ant-design/issues/14298\n            // https://github.com/ant-design/ant-design/issues/16478\n            if (!children || disabled) {\n                delete rcUploadProps.id;\n            }\n            const uploadButton = (<div className={uploadButtonCls} style={children ? undefined : { display: 'none' }}>\n        <RcUpload {...rcUploadProps} ref={this.saveUpload}/>\n      </div>);\n            if (listType === 'picture-card') {\n                return (<span className={classNames(className, `${prefixCls}-picture-card-wrapper`)}>\n          {uploadList}\n          {uploadButton}\n        </span>);\n            }\n            return (<span className={className}>\n        {uploadButton}\n        {uploadList}\n      </span>);\n        };\n        this.state = {\n            fileList: props.fileList || props.defaultFileList || [],\n            dragState: 'drop',\n        };\n        warning('fileList' in props || !('value' in props), 'Upload', '`value` is not validate prop, do you mean `fileList`?');\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('fileList' in nextProps) {\n            return {\n                fileList: nextProps.fileList || [],\n            };\n        }\n        return null;\n    }\n    componentWillUnmount() {\n        this.clearProgressTimer();\n    }\n    clearProgressTimer() {\n        clearInterval(this.progressTimer);\n    }\n    autoUpdateProgress(_, file) {\n        const getPercent = genPercentAdd();\n        let curPercent = 0;\n        this.clearProgressTimer();\n        this.progressTimer = setInterval(() => {\n            curPercent = getPercent(curPercent);\n            this.onProgress({\n                percent: curPercent * 100,\n            }, file);\n        }, 200);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUpload}</ConfigConsumer>;\n    }\n}\nUpload.defaultProps = {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text',\n    className: '',\n    disabled: false,\n    supportServerRender: true,\n};\npolyfill(Upload);\nexport default Upload;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}