{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { composeRef } from '../_util/ref';\nvar Typography = function Typography(_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n    _a$component = _a.component,\n    component = _a$component === void 0 ? 'article' : _a$component,\n    className = _a.className,\n    ariaLabel = _a['aria-label'],\n    setContentRef = _a.setContentRef,\n    children = _a.children,\n    restProps = __rest(_a, [\"prefixCls\", \"component\", \"className\", 'aria-label', \"setContentRef\", \"children\"]);\n  var mergedRef = ref;\n  if (setContentRef) {\n    warning(false, 'Typography', '`setContentRef` is deprecated. Please use `ref` instead.');\n    mergedRef = composeRef(ref, setContentRef);\n  }\n  return React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var Component = component;\n    var prefixCls = getPrefixCls('typography', customizePrefixCls);\n    return React.createElement(Component, _extends({\n      className: classNames(prefixCls, className),\n      \"aria-label\": ariaLabel,\n      ref: mergedRef\n    }, restProps), children);\n  });\n};\nvar RefTypography;\nif (React.forwardRef) {\n  RefTypography = React.forwardRef(Typography);\n  RefTypography.displayName = 'Typography';\n} else {\n  var TypographyWrapper = /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(TypographyWrapper, _React$Component);\n    function TypographyWrapper() {\n      var _this;\n      _classCallCheck(this, TypographyWrapper);\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(TypographyWrapper).apply(this, arguments));\n      _this.state = {};\n      return _this;\n    }\n    _createClass(TypographyWrapper, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(Typography, this.props);\n      }\n    }]);\n    return TypographyWrapper;\n  }(React.Component);\n  RefTypography = TypographyWrapper;\n} // es default export should use const instead of let\n\nvar ExportTypography = RefTypography;\nexport default ExportTypography;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","ConfigConsumer","warning","composeRef","Typography","_a","ref","customizePrefixCls","prefixCls","_a$component","component","className","ariaLabel","setContentRef","children","restProps","mergedRef","getPrefixCls","Component","RefTypography","forwardRef","displayName","TypographyWrapper","_inherits","_classCallCheck","_this","arguments","state","_createClass","key","value","props","ExportTypography"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\typography\\typography\\Typography.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { composeRef } from '../_util/ref';\nconst Typography = (_a, ref) => {\n    var { prefixCls: customizePrefixCls, component = 'article', className, 'aria-label': ariaLabel, setContentRef, children } = _a, restProps = __rest(_a, [\"prefixCls\", \"component\", \"className\", 'aria-label', \"setContentRef\", \"children\"]);\n    let mergedRef = ref;\n    if (setContentRef) {\n        warning(false, 'Typography', '`setContentRef` is deprecated. Please use `ref` instead.');\n        mergedRef = composeRef(ref, setContentRef);\n    }\n    return (<ConfigConsumer>\n      {({ getPrefixCls }) => {\n        const Component = component;\n        const prefixCls = getPrefixCls('typography', customizePrefixCls);\n        return (<Component className={classNames(prefixCls, className)} aria-label={ariaLabel} ref={mergedRef} {...restProps}>\n            {children}\n          </Component>);\n    }}\n    </ConfigConsumer>);\n};\nlet RefTypography;\nif (React.forwardRef) {\n    RefTypography = React.forwardRef(Typography);\n    RefTypography.displayName = 'Typography';\n}\nelse {\n    class TypographyWrapper extends React.Component {\n        constructor() {\n            super(...arguments);\n            this.state = {};\n        }\n        render() {\n            return <Typography {...this.props}/>;\n        }\n    }\n    RefTypography = TypographyWrapper;\n}\n// es default export should use const instead of let\nconst ExportTypography = RefTypography;\nexport default ExportTypography;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}