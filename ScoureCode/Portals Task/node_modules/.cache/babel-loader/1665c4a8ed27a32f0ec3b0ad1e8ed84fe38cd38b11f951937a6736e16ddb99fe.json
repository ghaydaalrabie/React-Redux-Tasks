{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n    messageInstance = instance;\n    callback(instance);\n  });\n}\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var iconType = {\n    info: 'info-circle',\n    success: 'check-circle',\n    error: 'close-circle',\n    warning: 'exclamation-circle',\n    loading: 'loading'\n  }[args.type];\n  var target = args.key || key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n      return resolve(true);\n    };\n    getMessageInstance(function (instance) {\n      var iconNode = React.createElement(Icon, {\n        type: iconType,\n        theme: iconType === 'loading' ? 'outlined' : 'filled'\n      });\n      var switchIconNode = iconType ? iconNode : '';\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon ? args.icon : switchIconNode, React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n  result.promise = closePromise;\n  return result;\n}\nfunction isArgsProps(content) {\n  return _typeof(content) === 'object' && !!content.content;\n}\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return api.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nexport default api;","map":{"version":3,"mappings":"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","names":["React","Notification","Icon","defaultDuration","defaultTop","messageInstance","key","prefixCls","transitionName","getContainer","maxCount","getMessageInstance","callback","newInstance","style","top","instance","notice","args","duration","undefined","iconType","info","success","error","warning","loading","type","target","closePromise","Promise","onClose","resolve","iconNode","theme","switchIconNode","content","className","icon","result","removeNotice","then","filled","rejected","promise","isArgsProps","_typeof","api","open","config","options","destroy","forEach","_extends","warn"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\message\\message\\index.jsx"],"sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nlet defaultDuration = 3;\nlet defaultTop;\nlet messageInstance;\nlet key = 1;\nlet prefixCls = 'ant-message';\nlet transitionName = 'move-up';\nlet getContainer;\nlet maxCount;\nfunction getMessageInstance(callback) {\n    if (messageInstance) {\n        callback(messageInstance);\n        return;\n    }\n    Notification.newInstance({\n        prefixCls,\n        transitionName,\n        style: { top: defaultTop },\n        getContainer,\n        maxCount,\n    }, (instance) => {\n        if (messageInstance) {\n            callback(messageInstance);\n            return;\n        }\n        messageInstance = instance;\n        callback(instance);\n    });\n}\nfunction notice(args) {\n    const duration = args.duration !== undefined ? args.duration : defaultDuration;\n    const iconType = {\n        info: 'info-circle',\n        success: 'check-circle',\n        error: 'close-circle',\n        warning: 'exclamation-circle',\n        loading: 'loading',\n    }[args.type];\n    const target = args.key || key++;\n    const closePromise = new Promise(resolve => {\n        const callback = () => {\n            if (typeof args.onClose === 'function') {\n                args.onClose();\n            }\n            return resolve(true);\n        };\n        getMessageInstance(instance => {\n            const iconNode = (<Icon type={iconType} theme={iconType === 'loading' ? 'outlined' : 'filled'}/>);\n            const switchIconNode = iconType ? iconNode : '';\n            instance.notice({\n                key: target,\n                duration,\n                style: {},\n                content: (<div className={`${prefixCls}-custom-content${args.type ? ` ${prefixCls}-${args.type}` : ''}`}>\n            {args.icon ? args.icon : switchIconNode}\n            <span>{args.content}</span>\n          </div>),\n                onClose: callback,\n            });\n        });\n    });\n    const result = () => {\n        if (messageInstance) {\n            messageInstance.removeNotice(target);\n        }\n    };\n    result.then = (filled, rejected) => closePromise.then(filled, rejected);\n    result.promise = closePromise;\n    return result;\n}\nfunction isArgsProps(content) {\n    return typeof content === 'object' && !!content.content;\n}\nconst api = {\n    open: notice,\n    config(options) {\n        if (options.top !== undefined) {\n            defaultTop = options.top;\n            messageInstance = null; // delete messageInstance for new defaultTop\n        }\n        if (options.duration !== undefined) {\n            defaultDuration = options.duration;\n        }\n        if (options.prefixCls !== undefined) {\n            prefixCls = options.prefixCls;\n        }\n        if (options.getContainer !== undefined) {\n            getContainer = options.getContainer;\n        }\n        if (options.transitionName !== undefined) {\n            transitionName = options.transitionName;\n            messageInstance = null; // delete messageInstance for new transitionName\n        }\n        if (options.maxCount !== undefined) {\n            maxCount = options.maxCount;\n            messageInstance = null;\n        }\n    },\n    destroy() {\n        if (messageInstance) {\n            messageInstance.destroy();\n            messageInstance = null;\n        }\n    },\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(type => {\n    api[type] = (content, duration, onClose) => {\n        if (isArgsProps(content)) {\n            return api.open(Object.assign(Object.assign({}, content), { type }));\n        }\n        if (typeof duration === 'function') {\n            onClose = duration;\n            duration = undefined;\n        }\n        return api.open({ content, duration, type, onClose });\n    };\n});\napi.warn = api.warning;\nexport default api;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}