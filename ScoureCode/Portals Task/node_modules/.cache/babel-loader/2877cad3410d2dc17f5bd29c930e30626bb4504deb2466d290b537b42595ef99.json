{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport * as moment from 'moment';\nimport interopDefault from '../_util/interopDefault';\nimport Statistic from './Statistic';\nimport { formatCountdown } from './utils';\nvar REFRESH_INTERVAL = 1000 / 30;\nfunction getTime(value) {\n  return interopDefault(moment)(value).valueOf();\n}\nvar Countdown = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Countdown, _React$Component);\n  function Countdown() {\n    var _this;\n    _classCallCheck(this, Countdown);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Countdown).apply(this, arguments));\n    _this.syncTimer = function () {\n      var value = _this.props.value;\n      var timestamp = getTime(value);\n      if (timestamp >= Date.now()) {\n        _this.startTimer();\n      } else {\n        _this.stopTimer();\n      }\n    };\n    _this.startTimer = function () {\n      if (_this.countdownId) return;\n      _this.countdownId = window.setInterval(function () {\n        _this.forceUpdate();\n      }, REFRESH_INTERVAL);\n    };\n    _this.stopTimer = function () {\n      var _this$props = _this.props,\n        onFinish = _this$props.onFinish,\n        value = _this$props.value;\n      if (_this.countdownId) {\n        clearInterval(_this.countdownId);\n        _this.countdownId = undefined;\n        var timestamp = getTime(value);\n        if (onFinish && timestamp < Date.now()) {\n          onFinish();\n        }\n      }\n    };\n    _this.formatCountdown = function (value, config) {\n      var format = _this.props.format;\n      return formatCountdown(value, _extends(_extends({}, config), {\n        format: format\n      }));\n    }; // Countdown do not need display the timestamp\n\n    _this.valueRender = function (node) {\n      return React.cloneElement(node, {\n        title: undefined\n      });\n    };\n    return _this;\n  }\n  _createClass(Countdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.syncTimer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.syncTimer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stopTimer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Statistic, _extends({\n        valueRender: this.valueRender\n      }, this.props, {\n        formatter: this.formatCountdown\n      }));\n    }\n  }]);\n  return Countdown;\n}(React.Component);\nCountdown.defaultProps = {\n  format: 'HH:mm:ss'\n};\npolyfill(Countdown);\nexport default Countdown;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,IAAMC,gBAAgB,GAAG,OAAO,EAAhC;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACpB,OAAOL,cAAc,CAACD,MAAD,CAAd,CAAuBM,KAAvB,EAA8BC,OAA9B,EAAP;AACH;IACKC,S;;;EACF,qBAAc;IAAA;IAAAC;IACVC,gFAASC,SAAT;IACAD,MAAKE,SAAL,GAAiB,YAAM;MAAA,IACXN,KADW,GACDI,MAAKG,KADJ,CACXP,KADW;MAEnB,IAAMQ,SAAS,GAAGT,OAAO,CAACC,KAAD,CAAzB;MACA,IAAIQ,SAAS,IAAIC,IAAI,CAACC,GAAL,EAAjB,EAA6B;QACzBN,MAAKO,UAAL;MACH,CAFD,MAGK;QACDP,MAAKQ,SAAL;MACH;IACJ,CATD;IAUAR,MAAKO,UAAL,GAAkB,YAAM;MACpB,IAAIP,MAAKS,WAAT,EACI;MACJT,MAAKS,WAAL,GAAmBC,MAAM,CAACC,WAAP,CAAmB,YAAM;QACxCX,MAAKY,WAAL;MACH,CAFkB,EAEhBlB,gBAFgB,CAAnB;IAGH,CAND;IAOAM,MAAKQ,SAAL,GAAiB,YAAM;MAAA,kBACSR,MAAKG,KADd;QACXU,QADW,eACXA,QADW;QACDjB,KADC,eACDA,KADC;MAEnB,IAAII,MAAKS,WAAT,EAAsB;QAClBK,aAAa,CAACd,MAAKS,WAAN,CAAb;QACAT,MAAKS,WAAL,GAAmBM,SAAnB;QACA,IAAMX,SAAS,GAAGT,OAAO,CAACC,KAAD,CAAzB;QACA,IAAIiB,QAAQ,IAAIT,SAAS,GAAGC,IAAI,CAACC,GAAL,EAA5B,EAAwC;UACpCO,QAAQ;QACX;MACJ;IACJ,CAVD;IAWAb,MAAKP,eAAL,GAAuB,UAACG,KAAD,EAAQoB,MAAR,EAAmB;MAAA,IAC9BC,MAD8B,GACnBjB,MAAKG,KADc,CAC9Bc,MAD8B;MAEtC,OAAOxB,eAAe,CAACG,KAAD,EAAQsB,SAAcA,SAAc,EAAd,EAAkBF,MAAlB,CAAd,EAAyC;QAAEC,MAAM,EAANA;MAAF,CAAzC,CAAR,CAAtB;IACH,CAHD,CA9BU,CAkCV;;IACAjB,MAAKmB,WAAL,GAAmB,UAACC,IAAD;MAAA,OAAUhC,KAAK,CAACiC,YAAN,CAAmBD,IAAnB,EAAyB;QAClDE,KAAK,EAAEP;MAD2C,CAAzB,CAAV;IAAA,CAAnB;IAnCU;EAsCb;;;wCACmB;MAChB,KAAKb,SAAL;IACH;;;yCACoB;MACjB,KAAKA,SAAL;IACH;;;2CACsB;MACnB,KAAKM,SAAL;IACH;;;6BACQ;MACL,OAAQpB,oBAACI,SAAD;QAAW2B,WAAW,EAAE,KAAKA;MAA7B,GAA8C,KAAKhB,KAAnD;QAA0DoB,SAAS,EAAE,KAAK9B;MAA1E,GAAR;IACH;;;EAnDmBL,KAAK,CAACoC,S;AAqD9B1B,SAAS,CAAC2B,YAAV,GAAyB;EACrBR,MAAM,EAAE;AADa,CAAzB;AAGA5B,QAAQ,CAACS,SAAD,CAAR;AACA,eAAeA,SAAf","names":["React","polyfill","moment","interopDefault","Statistic","formatCountdown","REFRESH_INTERVAL","getTime","value","valueOf","Countdown","_classCallCheck","_this","arguments","syncTimer","props","timestamp","Date","now","startTimer","stopTimer","countdownId","window","setInterval","forceUpdate","onFinish","clearInterval","undefined","config","format","_extends","valueRender","node","cloneElement","title","formatter","Component","defaultProps"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\statistic\\statistic\\Countdown.jsx"],"sourcesContent":["import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport * as moment from 'moment';\nimport interopDefault from '../_util/interopDefault';\nimport Statistic from './Statistic';\nimport { formatCountdown } from './utils';\nconst REFRESH_INTERVAL = 1000 / 30;\nfunction getTime(value) {\n    return interopDefault(moment)(value).valueOf();\n}\nclass Countdown extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.syncTimer = () => {\n            const { value } = this.props;\n            const timestamp = getTime(value);\n            if (timestamp >= Date.now()) {\n                this.startTimer();\n            }\n            else {\n                this.stopTimer();\n            }\n        };\n        this.startTimer = () => {\n            if (this.countdownId)\n                return;\n            this.countdownId = window.setInterval(() => {\n                this.forceUpdate();\n            }, REFRESH_INTERVAL);\n        };\n        this.stopTimer = () => {\n            const { onFinish, value } = this.props;\n            if (this.countdownId) {\n                clearInterval(this.countdownId);\n                this.countdownId = undefined;\n                const timestamp = getTime(value);\n                if (onFinish && timestamp < Date.now()) {\n                    onFinish();\n                }\n            }\n        };\n        this.formatCountdown = (value, config) => {\n            const { format } = this.props;\n            return formatCountdown(value, Object.assign(Object.assign({}, config), { format }));\n        };\n        // Countdown do not need display the timestamp\n        this.valueRender = (node) => React.cloneElement(node, {\n            title: undefined,\n        });\n    }\n    componentDidMount() {\n        this.syncTimer();\n    }\n    componentDidUpdate() {\n        this.syncTimer();\n    }\n    componentWillUnmount() {\n        this.stopTimer();\n    }\n    render() {\n        return (<Statistic valueRender={this.valueRender} {...this.props} formatter={this.formatCountdown}/>);\n    }\n}\nCountdown.defaultProps = {\n    format: 'HH:mm:ss',\n};\npolyfill(Countdown);\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}