{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { tuple } from '../_util/type';\nimport ClearableLabeledInput, { hasPrefixSuffix } from './ClearableLabeledInput';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nexport var InputSizes = tuple('small', 'default', 'large');\nexport function fixControlledValue(value) {\n  if (typeof value === 'undefined' || value === null) {\n    return '';\n  }\n  return value;\n}\nexport function resolveOnChange(target, e, onChange) {\n  if (onChange) {\n    var event = e;\n    if (e.type === 'click') {\n      // click clear icon\n      event = Object.create(e);\n      event.target = target;\n      event.currentTarget = target;\n      var originalInputValue = target.value; // change target ref value cause e.target.value should be '' when clear input\n\n      target.value = '';\n      onChange(event); // reset target ref value\n\n      target.value = originalInputValue;\n      return;\n    }\n    onChange(event);\n  }\n}\nexport function getInputClassName(prefixCls, size, disabled) {\n  var _classNames;\n  return classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n}\nvar Input = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Input, _React$Component);\n  function Input(props) {\n    var _this;\n    _classCallCheck(this, Input);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input).call(this, props));\n    _this.saveClearableInput = function (input) {\n      _this.clearableInput = input;\n    };\n    _this.saveInput = function (input) {\n      _this.input = input;\n    };\n    _this.handleReset = function (e) {\n      _this.setValue('', function () {\n        _this.focus();\n      });\n      resolveOnChange(_this.input, e, _this.props.onChange);\n    };\n    _this.renderInput = function (prefixCls) {\n      var _this$props = _this.props,\n        className = _this$props.className,\n        addonBefore = _this$props.addonBefore,\n        addonAfter = _this$props.addonAfter,\n        size = _this$props.size,\n        disabled = _this$props.disabled; // Fix https://fb.me/react-unknown-prop\n\n      var otherProps = omit(_this.props, ['prefixCls', 'onPressEnter', 'addonBefore', 'addonAfter', 'prefix', 'suffix', 'allowClear',\n      // Input elements must be either controlled or uncontrolled,\n      // specify either the value prop, or the defaultValue prop, but not both.\n      'defaultValue', 'size', 'inputType']);\n      return React.createElement(\"input\", _extends({}, otherProps, {\n        onChange: _this.handleChange,\n        onKeyDown: _this.handleKeyDown,\n        className: classNames(getInputClassName(prefixCls, size, disabled), _defineProperty({}, className, className && !addonBefore && !addonAfter)),\n        ref: _this.saveInput\n      }));\n    };\n    _this.handleChange = function (e) {\n      _this.setValue(e.target.value);\n      resolveOnChange(_this.input, e, _this.props.onChange);\n    };\n    _this.handleKeyDown = function (e) {\n      var _this$props2 = _this.props,\n        onPressEnter = _this$props2.onPressEnter,\n        onKeyDown = _this$props2.onKeyDown;\n      if (e.keyCode === 13 && onPressEnter) {\n        onPressEnter(e);\n      }\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    };\n    _this.renderComponent = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var value = _this.state.value;\n      var customizePrefixCls = _this.props.prefixCls;\n      var prefixCls = getPrefixCls('input', customizePrefixCls);\n      return React.createElement(ClearableLabeledInput, _extends({}, _this.props, {\n        prefixCls: prefixCls,\n        inputType: \"input\",\n        value: fixControlledValue(value),\n        element: _this.renderInput(prefixCls),\n        handleReset: _this.handleReset,\n        ref: _this.saveClearableInput\n      }));\n    };\n    var value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n    _this.state = {\n      value: value\n    };\n    return _this;\n  }\n  _createClass(Input, [{\n    key: \"componentDidUpdate\",\n    // Since polyfill `getSnapshotBeforeUpdate` need work with `componentDidUpdate`.\n    // We keep an empty function here.\n    value: function componentDidUpdate() {}\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps) {\n      if (hasPrefixSuffix(prevProps) !== hasPrefixSuffix(this.props)) {\n        warning(this.input !== document.activeElement, 'Input', \"When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ\");\n      }\n      return null;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      this.input.select();\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, callback) {\n      if (!('value' in this.props)) {\n        this.setState({\n          value: value\n        }, callback);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderComponent);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('value' in nextProps) {\n        return {\n          value: nextProps.value\n        };\n      }\n      return null;\n    }\n  }]);\n  return Input;\n}(React.Component);\nInput.defaultProps = {\n  type: 'text'\n};\nInput.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  size: PropTypes.oneOf(InputSizes),\n  maxLength: PropTypes.number,\n  disabled: PropTypes.bool,\n  value: PropTypes.any,\n  defaultValue: PropTypes.any,\n  className: PropTypes.string,\n  addonBefore: PropTypes.node,\n  addonAfter: PropTypes.node,\n  prefixCls: PropTypes.string,\n  onPressEnter: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  prefix: PropTypes.node,\n  suffix: PropTypes.node,\n  allowClear: PropTypes.bool\n};\npolyfill(Input);\nexport default Input;","map":{"version":3,"mappings":"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","names":["React","PropTypes","polyfill","classNames","omit","tuple","ClearableLabeledInput","hasPrefixSuffix","ConfigConsumer","warning","InputSizes","fixControlledValue","value","resolveOnChange","target","e","onChange","event","type","Object","create","currentTarget","originalInputValue","getInputClassName","prefixCls","size","disabled","Input","props","_classCallCheck","_this","saveClearableInput","input","clearableInput","saveInput","handleReset","setValue","focus","renderInput","className","addonBefore","addonAfter","otherProps","handleChange","onKeyDown","handleKeyDown","ref","onPressEnter","keyCode","renderComponent","getPrefixCls","state","customizePrefixCls","inputType","element","defaultValue","prevProps","document","activeElement","blur","select","callback","setState","nextProps","Component","defaultProps","propTypes","string","id","oneOf","maxLength","number","bool","any","node","func","onKeyUp","onFocus","onBlur","prefix","suffix","allowClear"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\input\\input\\Input.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { tuple } from '../_util/type';\nimport ClearableLabeledInput, { hasPrefixSuffix } from './ClearableLabeledInput';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nexport const InputSizes = tuple('small', 'default', 'large');\nexport function fixControlledValue(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return '';\n    }\n    return value;\n}\nexport function resolveOnChange(target, e, onChange) {\n    if (onChange) {\n        let event = e;\n        if (e.type === 'click') {\n            // click clear icon\n            event = Object.create(e);\n            event.target = target;\n            event.currentTarget = target;\n            const originalInputValue = target.value;\n            // change target ref value cause e.target.value should be '' when clear input\n            target.value = '';\n            onChange(event);\n            // reset target ref value\n            target.value = originalInputValue;\n            return;\n        }\n        onChange(event);\n    }\n}\nexport function getInputClassName(prefixCls, size, disabled) {\n    return classNames(prefixCls, {\n        [`${prefixCls}-sm`]: size === 'small',\n        [`${prefixCls}-lg`]: size === 'large',\n        [`${prefixCls}-disabled`]: disabled,\n    });\n}\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveClearableInput = (input) => {\n            this.clearableInput = input;\n        };\n        this.saveInput = (input) => {\n            this.input = input;\n        };\n        this.handleReset = (e) => {\n            this.setValue('', () => {\n                this.focus();\n            });\n            resolveOnChange(this.input, e, this.props.onChange);\n        };\n        this.renderInput = (prefixCls) => {\n            const { className, addonBefore, addonAfter, size, disabled } = this.props;\n            // Fix https://fb.me/react-unknown-prop\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'addonBefore',\n                'addonAfter',\n                'prefix',\n                'suffix',\n                'allowClear',\n                // Input elements must be either controlled or uncontrolled,\n                // specify either the value prop, or the defaultValue prop, but not both.\n                'defaultValue',\n                'size',\n                'inputType',\n            ]);\n            return (<input {...otherProps} onChange={this.handleChange} onKeyDown={this.handleKeyDown} className={classNames(getInputClassName(prefixCls, size, disabled), {\n                [className]: className && !addonBefore && !addonAfter,\n            })} ref={this.saveInput}/>);\n        };\n        this.handleChange = (e) => {\n            this.setValue(e.target.value);\n            resolveOnChange(this.input, e, this.props.onChange);\n        };\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.renderComponent = ({ getPrefixCls }) => {\n            const { value } = this.state;\n            const { prefixCls: customizePrefixCls } = this.props;\n            const prefixCls = getPrefixCls('input', customizePrefixCls);\n            return (<ClearableLabeledInput {...this.props} prefixCls={prefixCls} inputType=\"input\" value={fixControlledValue(value)} element={this.renderInput(prefixCls)} handleReset={this.handleReset} ref={this.saveClearableInput}/>);\n        };\n        const value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        return null;\n    }\n    // Since polyfill `getSnapshotBeforeUpdate` need work with `componentDidUpdate`.\n    // We keep an empty function here.\n    componentDidUpdate() { }\n    getSnapshotBeforeUpdate(prevProps) {\n        if (hasPrefixSuffix(prevProps) !== hasPrefixSuffix(this.props)) {\n            warning(this.input !== document.activeElement, 'Input', `When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ`);\n        }\n        return null;\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    select() {\n        this.input.select();\n    }\n    setValue(value, callback) {\n        if (!('value' in this.props)) {\n            this.setState({ value }, callback);\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nInput.defaultProps = {\n    type: 'text',\n};\nInput.propTypes = {\n    type: PropTypes.string,\n    id: PropTypes.string,\n    size: PropTypes.oneOf(InputSizes),\n    maxLength: PropTypes.number,\n    disabled: PropTypes.bool,\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    className: PropTypes.string,\n    addonBefore: PropTypes.node,\n    addonAfter: PropTypes.node,\n    prefixCls: PropTypes.string,\n    onPressEnter: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    prefix: PropTypes.node,\n    suffix: PropTypes.node,\n    allowClear: PropTypes.bool,\n};\npolyfill(Input);\nexport default Input;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}