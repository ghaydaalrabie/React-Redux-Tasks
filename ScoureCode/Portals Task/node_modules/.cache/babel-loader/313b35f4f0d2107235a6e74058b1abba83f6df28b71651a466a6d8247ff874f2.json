{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nimport { ConfigConsumer } from '../config-provider';\nvar Option = Select.Option;\nfunction getMonthsLocale(value) {\n  var current = value.clone();\n  var localeData = value.localeData();\n  var months = [];\n  for (var i = 0; i < 12; i++) {\n    current.month(i);\n    months.push(localeData.monthsShort(current));\n  }\n  return months;\n}\nvar Header = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n  function Header() {\n    var _this;\n    _classCallCheck(this, Header);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).apply(this, arguments));\n    _this.onYearChange = function (year) {\n      var _this$props = _this.props,\n        value = _this$props.value,\n        validRange = _this$props.validRange;\n      var newValue = value.clone();\n      newValue.year(parseInt(year, 10)); // switch the month so that it remains within range when year changes\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n          start = _validRange[0],\n          end = _validRange[1];\n        var newYear = newValue.get('year');\n        var newMonth = newValue.get('month');\n        if (newYear === end.get('year') && newMonth > end.get('month')) {\n          newValue.month(end.get('month'));\n        }\n        if (newYear === start.get('year') && newMonth < start.get('month')) {\n          newValue.month(start.get('month'));\n        }\n      }\n      var onValueChange = _this.props.onValueChange;\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n    _this.onMonthChange = function (month) {\n      var newValue = _this.props.value.clone();\n      newValue.month(parseInt(month, 10));\n      var onValueChange = _this.props.onValueChange;\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n    _this.onInternalTypeChange = function (e) {\n      _this.onTypeChange(e.target.value);\n    };\n    _this.onTypeChange = function (type) {\n      var onTypeChange = _this.props.onTypeChange;\n      if (onTypeChange) {\n        onTypeChange(type);\n      }\n    };\n    _this.getCalenderHeaderNode = function (node) {\n      _this.calenderHeaderNode = node;\n    };\n    _this.getMonthYearSelections = function (getPrefixCls) {\n      var _this$props2 = _this.props,\n        customizePrefixCls = _this$props2.prefixCls,\n        type = _this$props2.type,\n        value = _this$props2.value;\n      var prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n      var yearReactNode = _this.getYearSelectElement(prefixCls, value.year());\n      var monthReactNode = type === 'month' ? _this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value)) : null;\n      return {\n        yearReactNode: yearReactNode,\n        monthReactNode: monthReactNode\n      };\n    };\n    _this.getTypeSwitch = function () {\n      var _this$props3 = _this.props,\n        _this$props3$locale = _this$props3.locale,\n        locale = _this$props3$locale === void 0 ? {} : _this$props3$locale,\n        type = _this$props3.type,\n        fullscreen = _this$props3.fullscreen;\n      var size = fullscreen ? 'default' : 'small';\n      return React.createElement(Group, {\n        onChange: _this.onInternalTypeChange,\n        value: type,\n        size: size\n      }, React.createElement(Button, {\n        value: \"month\"\n      }, locale.month), React.createElement(Button, {\n        value: \"year\"\n      }, locale.year));\n    };\n    _this.headerRenderCustom = function (headerRender) {\n      var _this$props4 = _this.props,\n        type = _this$props4.type,\n        onValueChange = _this$props4.onValueChange,\n        value = _this$props4.value;\n      return headerRender({\n        value: value,\n        type: type || 'month',\n        onChange: onValueChange,\n        onTypeChange: _this.onTypeChange\n      });\n    };\n    _this.renderHeader = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props5 = _this.props,\n        prefixCls = _this$props5.prefixCls,\n        headerRender = _this$props5.headerRender;\n      var typeSwitch = _this.getTypeSwitch();\n      var _this$getMonthYearSel = _this.getMonthYearSelections(getPrefixCls),\n        yearReactNode = _this$getMonthYearSel.yearReactNode,\n        monthReactNode = _this$getMonthYearSel.monthReactNode;\n      return headerRender ? _this.headerRenderCustom(headerRender) : React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\"),\n        ref: _this.getCalenderHeaderNode\n      }, yearReactNode, monthReactNode, typeSwitch);\n    };\n    return _this;\n  }\n  _createClass(Header, [{\n    key: \"getYearSelectElement\",\n    value: function getYearSelectElement(prefixCls, year) {\n      var _this2 = this;\n      var _this$props6 = this.props,\n        yearSelectOffset = _this$props6.yearSelectOffset,\n        yearSelectTotal = _this$props6.yearSelectTotal,\n        _this$props6$locale = _this$props6.locale,\n        locale = _this$props6$locale === void 0 ? {} : _this$props6$locale,\n        fullscreen = _this$props6.fullscreen,\n        validRange = _this$props6.validRange;\n      var start = year - yearSelectOffset;\n      var end = start + yearSelectTotal;\n      if (validRange) {\n        start = validRange[0].get('year');\n        end = validRange[1].get('year') + 1;\n      }\n      var suffix = locale.year === '年' ? '年' : '';\n      var options = [];\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, {\n          key: \"\".concat(index)\n        }, index + suffix));\n      }\n      return React.createElement(Select, {\n        size: fullscreen ? 'default' : 'small',\n        dropdownMatchSelectWidth: false,\n        className: \"\".concat(prefixCls, \"-year-select\"),\n        onChange: this.onYearChange,\n        value: String(year),\n        getPopupContainer: function getPopupContainer() {\n          return _this2.calenderHeaderNode;\n        }\n      }, options);\n    }\n  }, {\n    key: \"getMonthSelectElement\",\n    value: function getMonthSelectElement(prefixCls, month, months) {\n      var _this3 = this;\n      var _this$props7 = this.props,\n        fullscreen = _this$props7.fullscreen,\n        validRange = _this$props7.validRange,\n        value = _this$props7.value;\n      var options = [];\n      var start = 0;\n      var end = 12;\n      if (validRange) {\n        var _validRange2 = _slicedToArray(validRange, 2),\n          rangeStart = _validRange2[0],\n          rangeEnd = _validRange2[1];\n        var currentYear = value.get('year');\n        if (rangeEnd.get('year') === currentYear) {\n          end = rangeEnd.get('month') + 1;\n        }\n        if (rangeStart.get('year') === currentYear) {\n          start = rangeStart.get('month');\n        }\n      }\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, {\n          key: \"\".concat(index)\n        }, months[index]));\n      }\n      return React.createElement(Select, {\n        size: fullscreen ? 'default' : 'small',\n        dropdownMatchSelectWidth: false,\n        className: \"\".concat(prefixCls, \"-month-select\"),\n        value: String(month),\n        onChange: this.onMonthChange,\n        getPopupContainer: function getPopupContainer() {\n          return _this3.calenderHeaderNode;\n        }\n      }, options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderHeader);\n    }\n  }]);\n  return Header;\n}(React.Component);\nexport { Header as default };\nHeader.defaultProps = {\n  yearSelectOffset: 10,\n  yearSelectTotal: 20\n};","map":{"version":3,"mappings":"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","names":["React","Select","Group","Button","ConfigConsumer","Option","getMonthsLocale","value","current","clone","localeData","months","i","month","push","monthsShort","Header","_classCallCheck","_this","arguments","onYearChange","year","props","validRange","newValue","parseInt","start","end","newYear","get","newMonth","onValueChange","onMonthChange","onInternalTypeChange","e","onTypeChange","target","type","getCalenderHeaderNode","node","calenderHeaderNode","getMonthYearSelections","getPrefixCls","customizePrefixCls","prefixCls","yearReactNode","getYearSelectElement","monthReactNode","getMonthSelectElement","getTypeSwitch","_this$props3$locale","locale","fullscreen","size","onChange","headerRenderCustom","headerRender","renderHeader","typeSwitch","className","ref","yearSelectOffset","yearSelectTotal","_this$props6$locale","suffix","options","index","key","dropdownMatchSelectWidth","String","getPopupContainer","_this2","rangeStart","rangeEnd","currentYear","_this3","Component","defaultProps"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\calendar\\calendar\\Header.jsx"],"sourcesContent":["import * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nimport { ConfigConsumer } from '../config-provider';\nconst { Option } = Select;\nfunction getMonthsLocale(value) {\n    const current = value.clone();\n    const localeData = value.localeData();\n    const months = [];\n    for (let i = 0; i < 12; i++) {\n        current.month(i);\n        months.push(localeData.monthsShort(current));\n    }\n    return months;\n}\nexport default class Header extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onYearChange = (year) => {\n            const { value, validRange } = this.props;\n            const newValue = value.clone();\n            newValue.year(parseInt(year, 10));\n            // switch the month so that it remains within range when year changes\n            if (validRange) {\n                const [start, end] = validRange;\n                const newYear = newValue.get('year');\n                const newMonth = newValue.get('month');\n                if (newYear === end.get('year') && newMonth > end.get('month')) {\n                    newValue.month(end.get('month'));\n                }\n                if (newYear === start.get('year') && newMonth < start.get('month')) {\n                    newValue.month(start.get('month'));\n                }\n            }\n            const { onValueChange } = this.props;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        this.onMonthChange = (month) => {\n            const newValue = this.props.value.clone();\n            newValue.month(parseInt(month, 10));\n            const { onValueChange } = this.props;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        this.onInternalTypeChange = (e) => {\n            this.onTypeChange(e.target.value);\n        };\n        this.onTypeChange = (type) => {\n            const { onTypeChange } = this.props;\n            if (onTypeChange) {\n                onTypeChange(type);\n            }\n        };\n        this.getCalenderHeaderNode = (node) => {\n            this.calenderHeaderNode = node;\n        };\n        this.getMonthYearSelections = (getPrefixCls) => {\n            const { prefixCls: customizePrefixCls, type, value } = this.props;\n            const prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n            const yearReactNode = this.getYearSelectElement(prefixCls, value.year());\n            const monthReactNode = type === 'month'\n                ? this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value))\n                : null;\n            return {\n                yearReactNode,\n                monthReactNode,\n            };\n        };\n        this.getTypeSwitch = () => {\n            const { locale = {}, type, fullscreen } = this.props;\n            const size = fullscreen ? 'default' : 'small';\n            return (<Group onChange={this.onInternalTypeChange} value={type} size={size}>\n        <Button value=\"month\">{locale.month}</Button>\n        <Button value=\"year\">{locale.year}</Button>\n      </Group>);\n        };\n        this.headerRenderCustom = (headerRender) => {\n            const { type, onValueChange, value } = this.props;\n            return headerRender({\n                value,\n                type: type || 'month',\n                onChange: onValueChange,\n                onTypeChange: this.onTypeChange,\n            });\n        };\n        this.renderHeader = ({ getPrefixCls }) => {\n            const { prefixCls, headerRender } = this.props;\n            const typeSwitch = this.getTypeSwitch();\n            const { yearReactNode, monthReactNode } = this.getMonthYearSelections(getPrefixCls);\n            return headerRender ? (this.headerRenderCustom(headerRender)) : (<div className={`${prefixCls}-header`} ref={this.getCalenderHeaderNode}>\n        {yearReactNode}\n        {monthReactNode}\n        {typeSwitch}\n      </div>);\n        };\n    }\n    getYearSelectElement(prefixCls, year) {\n        const { yearSelectOffset, yearSelectTotal, locale = {}, fullscreen, validRange } = this.props;\n        let start = year - yearSelectOffset;\n        let end = start + yearSelectTotal;\n        if (validRange) {\n            start = validRange[0].get('year');\n            end = validRange[1].get('year') + 1;\n        }\n        const suffix = locale.year === '年' ? '年' : '';\n        const options = [];\n        for (let index = start; index < end; index++) {\n            options.push(<Option key={`${index}`}>{index + suffix}</Option>);\n        }\n        return (<Select size={fullscreen ? 'default' : 'small'} dropdownMatchSelectWidth={false} className={`${prefixCls}-year-select`} onChange={this.onYearChange} value={String(year)} getPopupContainer={() => this.calenderHeaderNode}>\n        {options}\n      </Select>);\n    }\n    getMonthSelectElement(prefixCls, month, months) {\n        const { fullscreen, validRange, value } = this.props;\n        const options = [];\n        let start = 0;\n        let end = 12;\n        if (validRange) {\n            const [rangeStart, rangeEnd] = validRange;\n            const currentYear = value.get('year');\n            if (rangeEnd.get('year') === currentYear) {\n                end = rangeEnd.get('month') + 1;\n            }\n            if (rangeStart.get('year') === currentYear) {\n                start = rangeStart.get('month');\n            }\n        }\n        for (let index = start; index < end; index++) {\n            options.push(<Option key={`${index}`}>{months[index]}</Option>);\n        }\n        return (<Select size={fullscreen ? 'default' : 'small'} dropdownMatchSelectWidth={false} className={`${prefixCls}-month-select`} value={String(month)} onChange={this.onMonthChange} getPopupContainer={() => this.calenderHeaderNode}>\n        {options}\n      </Select>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderHeader}</ConfigConsumer>;\n    }\n}\nHeader.defaultProps = {\n    yearSelectOffset: 10,\n    yearSelectTotal: 20,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}