{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n// TODO: remove this lint\n// SFC has specified a displayName, but not worked.\n\n/* eslint-disable react/display-name */\nimport * as React from 'react';\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nexport { ConfigConsumer };\nexport var configConsumerProps = ['getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader'];\nvar ConfigProvider = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConfigProvider, _React$Component);\n  function ConfigProvider() {\n    var _this;\n    _classCallCheck(this, ConfigProvider);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConfigProvider).apply(this, arguments));\n    _this.getPrefixCls = function (suffixCls, customizePrefixCls) {\n      var _this$props$prefixCls = _this.props.prefixCls,\n        prefixCls = _this$props$prefixCls === void 0 ? 'ant' : _this$props$prefixCls;\n      if (customizePrefixCls) return customizePrefixCls;\n      return suffixCls ? \"\".concat(prefixCls, \"-\").concat(suffixCls) : prefixCls;\n    };\n    _this.renderProvider = function (context, legacyLocale) {\n      var _this$props = _this.props,\n        children = _this$props.children,\n        getPopupContainer = _this$props.getPopupContainer,\n        renderEmpty = _this$props.renderEmpty,\n        csp = _this$props.csp,\n        autoInsertSpaceInButton = _this$props.autoInsertSpaceInButton,\n        locale = _this$props.locale,\n        pageHeader = _this$props.pageHeader;\n      var config = _extends(_extends({}, context), {\n        getPrefixCls: _this.getPrefixCls,\n        csp: csp,\n        autoInsertSpaceInButton: autoInsertSpaceInButton\n      });\n      if (getPopupContainer) {\n        config.getPopupContainer = getPopupContainer;\n      }\n      if (renderEmpty) {\n        config.renderEmpty = renderEmpty;\n      }\n      if (pageHeader) {\n        config.pageHeader = pageHeader;\n      }\n      return React.createElement(ConfigContext.Provider, {\n        value: config\n      }, React.createElement(LocaleProvider, {\n        locale: locale || legacyLocale,\n        _ANT_MARK__: ANT_MARK\n      }, children));\n    };\n    return _this;\n  }\n  _createClass(ConfigProvider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return React.createElement(LocaleReceiver, null, function (_, __, legacyLocale) {\n        return React.createElement(ConfigConsumer, null, function (context) {\n          return _this2.renderProvider(context, legacyLocale);\n        });\n      });\n    }\n  }]);\n  return ConfigProvider;\n}(React.Component);\nexport default ConfigProvider;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,IAAyBC,QAAzB,QAAyC,oBAAzC;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,WAA9C;AACA,SAASD,cAAT;AACA,OAAO,IAAME,mBAAmB,GAAG,CAC/B,mBAD+B,EAE/B,eAF+B,EAG/B,cAH+B,EAI/B,aAJ+B,EAK/B,KAL+B,EAM/B,yBAN+B,EAO/B,QAP+B,EAQ/B,YAR+B,CAA5B;IAUDC,c;;;EACF,0BAAc;IAAA;IAAAC;IACVC,qFAASC,SAAT;IACAD,MAAKE,YAAL,GAAoB,UAACC,SAAD,EAAYC,kBAAZ,EAAmC;MAAA,4BACrBJ,MAAKK,KADgB,CAC3CC,SAD2C;QAC3CA,SAD2C,sCAC/B,KAD+B;MAEnD,IAAIF,kBAAJ,EACI,OAAOA,kBAAP;MACJ,OAAOD,SAAS,aAAMG,SAAN,cAAmBH,SAAnB,IAAiCG,SAAjD;IACH,CALD;IAMAN,MAAKO,cAAL,GAAsB,UAACC,OAAD,EAAUC,YAAV,EAA2B;MAAA,kBAC2DT,MAAKK,KADhE;QACrCK,QADqC,eACrCA,QADqC;QAC3BC,iBAD2B,eAC3BA,iBAD2B;QACRC,WADQ,eACRA,WADQ;QACKC,GADL,eACKA,GADL;QACUC,uBADV,eACUA,uBADV;QACmCC,MADnC,eACmCA,MADnC;QAC2CC,UAD3C,eAC2CA,UAD3C;MAE7C,IAAMC,MAAM,GAAGC,SAAcA,SAAc,EAAd,EAAkBV,OAAlB,CAAd,EAA0C;QAAEN,YAAY,EAAEF,MAAKE,YAArB;QAAmCW,GAAG,EAAHA,GAAnC;QACrDC,uBAAuB,EAAvBA;MADqD,CAA1C,CAAf;MAEA,IAAIH,iBAAJ,EAAuB;QACnBM,MAAM,CAACN,iBAAP,GAA2BA,iBAA3B;MACH;MACD,IAAIC,WAAJ,EAAiB;QACbK,MAAM,CAACL,WAAP,GAAqBA,WAArB;MACH;MACD,IAAII,UAAJ,EAAgB;QACZC,MAAM,CAACD,UAAP,GAAoBA,UAApB;MACH;MACD,OAAQzB,oBAACK,aAAD,CAAeuB,QAAf;QAAwBC,KAAK,EAAEH;MAA/B,GACZ1B,oBAACC,cAAD;QAAgBuB,MAAM,EAAEA,MAAM,IAAIN,YAAlC;QAAgDY,WAAW,EAAE5B;MAA7D,GACGiB,QADH,CADY,CAAR;IAKH,CAlBD;IARU;EA2Bb;;;6BACQ;MAAA;MACL,OAAQnB,oBAACG,cAAD,QACP,UAAC4B,CAAD,EAAIC,EAAJ,EAAQd,YAAR;QAAA,OAA0BlB,oBAACI,cAAD,QACtB,iBAAO;UAAA,OAAI6B,MAAI,CAACjB,cAAL,CAAoBC,OAApB,EAA6BC,YAA7B,CAAJ;QAAA,CADe,CAA1B;MAAA,CADO,CAAR;IAKH;;;EAnCwBlB,KAAK,CAACkC,S;AAqCnC,eAAe3B,cAAf","names":["React","LocaleProvider","ANT_MARK","LocaleReceiver","ConfigConsumer","ConfigContext","configConsumerProps","ConfigProvider","_classCallCheck","_this","arguments","getPrefixCls","suffixCls","customizePrefixCls","props","prefixCls","renderProvider","context","legacyLocale","children","getPopupContainer","renderEmpty","csp","autoInsertSpaceInButton","locale","pageHeader","config","_extends","Provider","value","_ANT_MARK__","_","__","_this2","Component"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\config-provider\\config-provider\\index.jsx"],"sourcesContent":["// TODO: remove this lint\n// SFC has specified a displayName, but not worked.\n/* eslint-disable react/display-name */\nimport * as React from 'react';\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nexport { ConfigConsumer };\nexport const configConsumerProps = [\n    'getPopupContainer',\n    'rootPrefixCls',\n    'getPrefixCls',\n    'renderEmpty',\n    'csp',\n    'autoInsertSpaceInButton',\n    'locale',\n    'pageHeader',\n];\nclass ConfigProvider extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getPrefixCls = (suffixCls, customizePrefixCls) => {\n            const { prefixCls = 'ant' } = this.props;\n            if (customizePrefixCls)\n                return customizePrefixCls;\n            return suffixCls ? `${prefixCls}-${suffixCls}` : prefixCls;\n        };\n        this.renderProvider = (context, legacyLocale) => {\n            const { children, getPopupContainer, renderEmpty, csp, autoInsertSpaceInButton, locale, pageHeader, } = this.props;\n            const config = Object.assign(Object.assign({}, context), { getPrefixCls: this.getPrefixCls, csp,\n                autoInsertSpaceInButton });\n            if (getPopupContainer) {\n                config.getPopupContainer = getPopupContainer;\n            }\n            if (renderEmpty) {\n                config.renderEmpty = renderEmpty;\n            }\n            if (pageHeader) {\n                config.pageHeader = pageHeader;\n            }\n            return (<ConfigContext.Provider value={config}>\n        <LocaleProvider locale={locale || legacyLocale} _ANT_MARK__={ANT_MARK}>\n          {children}\n        </LocaleProvider>\n      </ConfigContext.Provider>);\n        };\n    }\n    render() {\n        return (<LocaleReceiver>\n        {(_, __, legacyLocale) => (<ConfigConsumer>\n            {context => this.renderProvider(context, legacyLocale)}\n          </ConfigConsumer>)}\n      </LocaleReceiver>);\n    }\n}\nexport default ConfigProvider;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}