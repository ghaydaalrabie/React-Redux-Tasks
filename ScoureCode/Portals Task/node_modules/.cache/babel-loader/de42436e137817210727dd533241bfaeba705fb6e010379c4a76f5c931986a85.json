{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport omit from 'omit.js';\nimport Row from '../grid/row';\nimport Col from '../grid/col';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { tuple } from '../_util/type';\nimport { FIELD_META_PROP, FIELD_DATA_PROP } from './constants';\nimport FormContext from './context';\nvar ValidateStatuses = tuple('success', 'warning', 'error', 'validating', '');\nvar FormLabelAligns = tuple('left', 'right');\nfunction intersperseSpace(list) {\n  return list.reduce(function (current, item) {\n    return [].concat(_toConsumableArray(current), [' ', item]);\n  }, []).slice(1);\n}\nvar FormItem = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormItem, _React$Component);\n  function FormItem() {\n    var _this;\n    _classCallCheck(this, FormItem);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormItem).apply(this, arguments));\n    _this.helpShow = false; // Resolve duplicated ids bug between different forms\n    // https://github.com/ant-design/ant-design/issues/7351\n\n    _this.onLabelClick = function () {\n      var id = _this.props.id || _this.getId();\n      if (!id) {\n        return;\n      }\n      var formItemNode = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n      var control = formItemNode.querySelector(\"[id=\\\"\".concat(id, \"\\\"]\"));\n      if (control && control.focus) {\n        control.focus();\n      }\n    };\n    _this.onHelpAnimEnd = function (_key, helpShow) {\n      _this.helpShow = helpShow;\n      if (!helpShow) {\n        _this.setState({});\n      }\n    };\n    _this.renderFormItem = function (_ref) {\n      var _itemClassName;\n      var getPrefixCls = _ref.getPrefixCls;\n      var _a = _this.props,\n        customizePrefixCls = _a.prefixCls,\n        style = _a.style,\n        className = _a.className,\n        restProps = __rest(_a, [\"prefixCls\", \"style\", \"className\"]);\n      var prefixCls = getPrefixCls('form', customizePrefixCls);\n      var children = _this.renderChildren(prefixCls);\n      var itemClassName = (_itemClassName = {}, _defineProperty(_itemClassName, \"\".concat(prefixCls, \"-item\"), true), _defineProperty(_itemClassName, \"\".concat(prefixCls, \"-item-with-help\"), _this.helpShow), _defineProperty(_itemClassName, \"\".concat(className), !!className), _itemClassName);\n      return React.createElement(Row, _extends({\n        className: classNames(itemClassName),\n        style: style\n      }, omit(restProps, ['id', 'htmlFor', 'label', 'labelAlign', 'labelCol', 'wrapperCol', 'help', 'extra', 'validateStatus', 'hasFeedback', 'required', 'colon']), {\n        key: \"row\"\n      }), children);\n    };\n    return _this;\n  }\n  _createClass(FormItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        help = _this$props.help,\n        validateStatus = _this$props.validateStatus,\n        id = _this$props.id;\n      warning(this.getControls(children, true).length <= 1 || help !== undefined || validateStatus !== undefined, 'Form.Item', 'Cannot generate `validateStatus` and `help` automatically, ' + 'while there are more than one `getFieldDecorator` in it.');\n      warning(!id, 'Form.Item', '`id` is deprecated for its label `htmlFor`. Please use `htmlFor` directly.');\n    }\n  }, {\n    key: \"getHelpMessage\",\n    value: function getHelpMessage() {\n      var help = this.props.help;\n      if (help === undefined && this.getOnlyControl()) {\n        var _this$getField = this.getField(),\n          errors = _this$getField.errors;\n        if (errors) {\n          return intersperseSpace(errors.map(function (e, index) {\n            var node = null;\n            if (React.isValidElement(e)) {\n              node = e;\n            } else if (React.isValidElement(e.message)) {\n              node = e.message;\n            } // eslint-disable-next-line react/no-array-index-key\n\n            return node ? React.cloneElement(node, {\n              key: index\n            }) : e.message;\n          }));\n        }\n        return '';\n      }\n      return help;\n    }\n  }, {\n    key: \"getControls\",\n    value: function getControls(children, recursively) {\n      var controls = [];\n      var childrenArray = React.Children.toArray(children);\n      for (var i = 0; i < childrenArray.length; i++) {\n        if (!recursively && controls.length > 0) {\n          break;\n        }\n        var child = childrenArray[i];\n        if (child.type && (child.type === FormItem || child.type.displayName === 'FormItem')) {\n          continue;\n        }\n        if (!child.props) {\n          continue;\n        }\n        if (FIELD_META_PROP in child.props) {\n          // And means FIELD_DATA_PROP in child.props, too.\n          controls.push(child);\n        } else if (child.props.children) {\n          controls = controls.concat(this.getControls(child.props.children, recursively));\n        }\n      }\n      return controls;\n    }\n  }, {\n    key: \"getOnlyControl\",\n    value: function getOnlyControl() {\n      var child = this.getControls(this.props.children, false)[0];\n      return child !== undefined ? child : null;\n    }\n  }, {\n    key: \"getChildProp\",\n    value: function getChildProp(prop) {\n      var child = this.getOnlyControl();\n      return child && child.props && child.props[prop];\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.getChildProp('id');\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.getChildProp(FIELD_META_PROP);\n    }\n  }, {\n    key: \"getField\",\n    value: function getField() {\n      return this.getChildProp(FIELD_DATA_PROP);\n    }\n  }, {\n    key: \"getValidateStatus\",\n    value: function getValidateStatus() {\n      var onlyControl = this.getOnlyControl();\n      if (!onlyControl) {\n        return '';\n      }\n      var field = this.getField();\n      if (field.validating) {\n        return 'validating';\n      }\n      if (field.errors) {\n        return 'error';\n      }\n      var fieldValue = 'value' in field ? field.value : this.getMeta().initialValue;\n      if (fieldValue !== undefined && fieldValue !== null && fieldValue !== '') {\n        return 'success';\n      }\n      return '';\n    }\n  }, {\n    key: \"isRequired\",\n    value: function isRequired() {\n      var required = this.props.required;\n      if (required !== undefined) {\n        return required;\n      }\n      if (this.getOnlyControl()) {\n        var meta = this.getMeta() || {};\n        var validate = meta.validate || [];\n        return validate.filter(function (item) {\n          return !!item.rules;\n        }).some(function (item) {\n          return item.rules.some(function (rule) {\n            return rule.required;\n          });\n        });\n      }\n      return false;\n    }\n  }, {\n    key: \"renderHelp\",\n    value: function renderHelp(prefixCls) {\n      var help = this.getHelpMessage();\n      var children = help ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-explain\"),\n        key: \"help\"\n      }, help) : null;\n      if (children) {\n        this.helpShow = !!children;\n      }\n      return React.createElement(Animate, {\n        transitionName: \"show-help\",\n        component: \"\",\n        transitionAppear: true,\n        key: \"help\",\n        onEnd: this.onHelpAnimEnd\n      }, children);\n    }\n  }, {\n    key: \"renderExtra\",\n    value: function renderExtra(prefixCls) {\n      var extra = this.props.extra;\n      return extra ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-extra\")\n      }, extra) : null;\n    }\n  }, {\n    key: \"renderValidateWrapper\",\n    value: function renderValidateWrapper(prefixCls, c1, c2, c3) {\n      var props = this.props;\n      var onlyControl = this.getOnlyControl;\n      var validateStatus = props.validateStatus === undefined && onlyControl ? this.getValidateStatus() : props.validateStatus;\n      var classes = \"\".concat(prefixCls, \"-item-control\");\n      if (validateStatus) {\n        classes = classNames(\"\".concat(prefixCls, \"-item-control\"), {\n          'has-feedback': props.hasFeedback || validateStatus === 'validating',\n          'has-success': validateStatus === 'success',\n          'has-warning': validateStatus === 'warning',\n          'has-error': validateStatus === 'error',\n          'is-validating': validateStatus === 'validating'\n        });\n      }\n      var iconType = '';\n      switch (validateStatus) {\n        case 'success':\n          iconType = 'check-circle';\n          break;\n        case 'warning':\n          iconType = 'exclamation-circle';\n          break;\n        case 'error':\n          iconType = 'close-circle';\n          break;\n        case 'validating':\n          iconType = 'loading';\n          break;\n        default:\n          iconType = '';\n          break;\n      }\n      var icon = props.hasFeedback && iconType ? React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-item-children-icon\")\n      }, React.createElement(Icon, {\n        type: iconType,\n        theme: iconType === 'loading' ? 'outlined' : 'filled'\n      })) : null;\n      return React.createElement(\"div\", {\n        className: classes\n      }, React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-item-children\")\n      }, c1, icon), c2, c3);\n    }\n  }, {\n    key: \"renderWrapper\",\n    value: function renderWrapper(prefixCls, children) {\n      var _this2 = this;\n      return React.createElement(FormContext.Consumer, {\n        key: \"wrapper\"\n      }, function (_ref2) {\n        var contextWrapperCol = _ref2.wrapperCol,\n          vertical = _ref2.vertical;\n        var wrapperCol = _this2.props.wrapperCol;\n        var mergedWrapperCol = ('wrapperCol' in _this2.props ? wrapperCol : contextWrapperCol) || {};\n        var className = classNames(\"\".concat(prefixCls, \"-item-control-wrapper\"), mergedWrapperCol.className); // No pass FormContext since it's useless\n\n        return React.createElement(FormContext.Provider, {\n          value: {\n            vertical: vertical\n          }\n        }, React.createElement(Col, _extends({}, mergedWrapperCol, {\n          className: className\n        }), children));\n      });\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(prefixCls) {\n      var _this3 = this;\n      return React.createElement(FormContext.Consumer, {\n        key: \"label\"\n      }, function (_ref3) {\n        var _classNames;\n        var vertical = _ref3.vertical,\n          contextLabelAlign = _ref3.labelAlign,\n          contextLabelCol = _ref3.labelCol,\n          contextColon = _ref3.colon;\n        var _this3$props = _this3.props,\n          label = _this3$props.label,\n          labelCol = _this3$props.labelCol,\n          labelAlign = _this3$props.labelAlign,\n          colon = _this3$props.colon,\n          id = _this3$props.id,\n          htmlFor = _this3$props.htmlFor;\n        var required = _this3.isRequired();\n        var mergedLabelCol = ('labelCol' in _this3.props ? labelCol : contextLabelCol) || {};\n        var mergedLabelAlign = 'labelAlign' in _this3.props ? labelAlign : contextLabelAlign;\n        var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n        var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.className);\n        var labelChildren = label; // Keep label is original where there should have no colon\n\n        var computedColon = colon === true || contextColon !== false && colon !== false;\n        var haveColon = computedColon && !vertical; // Remove duplicated user input colon\n\n        if (haveColon && typeof label === 'string' && label.trim() !== '') {\n          labelChildren = label.replace(/[：:]\\s*$/, '');\n        }\n        var labelClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames));\n        return label ? React.createElement(Col, _extends({}, mergedLabelCol, {\n          className: labelColClassName\n        }), React.createElement(\"label\", {\n          htmlFor: htmlFor || id || _this3.getId(),\n          className: labelClassName,\n          title: typeof label === 'string' ? label : '',\n          onClick: _this3.onLabelClick\n        }, labelChildren)) : null;\n      });\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren(prefixCls) {\n      var children = this.props.children;\n      return [this.renderLabel(prefixCls), this.renderWrapper(prefixCls, this.renderValidateWrapper(prefixCls, children, this.renderHelp(prefixCls), this.renderExtra(prefixCls)))];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderFormItem);\n    }\n  }]);\n  return FormItem;\n}(React.Component);\nexport { FormItem as default };\nFormItem.defaultProps = {\n  hasFeedback: false\n};\nFormItem.propTypes = {\n  prefixCls: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  labelCol: PropTypes.object,\n  help: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n  validateStatus: PropTypes.oneOf(ValidateStatuses),\n  hasFeedback: PropTypes.bool,\n  wrapperCol: PropTypes.object,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  children: PropTypes.node,\n  colon: PropTypes.bool\n};","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","ReactDOM","PropTypes","classNames","Animate","omit","Row","Col","Icon","ConfigConsumer","warning","tuple","FIELD_META_PROP","FIELD_DATA_PROP","FormContext","ValidateStatuses","FormLabelAligns","intersperseSpace","list","reduce","current","item","slice","FormItem","_classCallCheck","_this","arguments","helpShow","onLabelClick","id","props","getId","formItemNode","findDOMNode","control","querySelector","focus","onHelpAnimEnd","_key","setState","renderFormItem","getPrefixCls","customizePrefixCls","_a","prefixCls","style","className","restProps","children","renderChildren","itemClassName","key","help","validateStatus","getControls","undefined","getOnlyControl","getField","errors","map","index","node","isValidElement","message","cloneElement","recursively","controls","childrenArray","Children","toArray","child","type","displayName","push","concat","prop","getChildProp","onlyControl","field","validating","fieldValue","value","getMeta","initialValue","required","meta","validate","filter","rules","some","rule","getHelpMessage","transitionName","component","transitionAppear","onEnd","extra","c1","c2","c3","getValidateStatus","classes","hasFeedback","iconType","icon","theme","Consumer","contextWrapperCol","wrapperCol","vertical","_this2","mergedWrapperCol","Provider","contextLabelAlign","labelAlign","contextLabelCol","labelCol","contextColon","colon","_this3","label","htmlFor","isRequired","mergedLabelCol","mergedLabelAlign","labelClsBasic","labelColClassName","labelChildren","computedColon","haveColon","trim","replace","labelClassName","title","onClick","renderLabel","renderWrapper","renderValidateWrapper","renderHelp","renderExtra","Component","defaultProps","propTypes","string","oneOfType","object","bool","oneOf"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\form\\form\\FormItem.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport omit from 'omit.js';\nimport Row from '../grid/row';\nimport Col from '../grid/col';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { tuple } from '../_util/type';\nimport { FIELD_META_PROP, FIELD_DATA_PROP } from './constants';\nimport FormContext from './context';\nconst ValidateStatuses = tuple('success', 'warning', 'error', 'validating', '');\nconst FormLabelAligns = tuple('left', 'right');\nfunction intersperseSpace(list) {\n    return list.reduce((current, item) => [...current, ' ', item], []).slice(1);\n}\nexport default class FormItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.helpShow = false;\n        // Resolve duplicated ids bug between different forms\n        // https://github.com/ant-design/ant-design/issues/7351\n        this.onLabelClick = () => {\n            const id = this.props.id || this.getId();\n            if (!id) {\n                return;\n            }\n            const formItemNode = ReactDOM.findDOMNode(this);\n            const control = formItemNode.querySelector(`[id=\"${id}\"]`);\n            if (control && control.focus) {\n                control.focus();\n            }\n        };\n        this.onHelpAnimEnd = (_key, helpShow) => {\n            this.helpShow = helpShow;\n            if (!helpShow) {\n                this.setState({});\n            }\n        };\n        this.renderFormItem = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, style, className } = _a, restProps = __rest(_a, [\"prefixCls\", \"style\", \"className\"]);\n            const prefixCls = getPrefixCls('form', customizePrefixCls);\n            const children = this.renderChildren(prefixCls);\n            const itemClassName = {\n                [`${prefixCls}-item`]: true,\n                [`${prefixCls}-item-with-help`]: this.helpShow,\n                [`${className}`]: !!className,\n            };\n            return (<Row className={classNames(itemClassName)} style={style} {...omit(restProps, [\n                'id',\n                'htmlFor',\n                'label',\n                'labelAlign',\n                'labelCol',\n                'wrapperCol',\n                'help',\n                'extra',\n                'validateStatus',\n                'hasFeedback',\n                'required',\n                'colon',\n            ])} key=\"row\">\n        {children}\n      </Row>);\n        };\n    }\n    componentDidMount() {\n        const { children, help, validateStatus, id } = this.props;\n        warning(this.getControls(children, true).length <= 1 ||\n            help !== undefined ||\n            validateStatus !== undefined, 'Form.Item', 'Cannot generate `validateStatus` and `help` automatically, ' +\n            'while there are more than one `getFieldDecorator` in it.');\n        warning(!id, 'Form.Item', '`id` is deprecated for its label `htmlFor`. Please use `htmlFor` directly.');\n    }\n    getHelpMessage() {\n        const { help } = this.props;\n        if (help === undefined && this.getOnlyControl()) {\n            const { errors } = this.getField();\n            if (errors) {\n                return intersperseSpace(errors.map((e, index) => {\n                    let node = null;\n                    if (React.isValidElement(e)) {\n                        node = e;\n                    }\n                    else if (React.isValidElement(e.message)) {\n                        node = e.message;\n                    }\n                    // eslint-disable-next-line react/no-array-index-key\n                    return node ? React.cloneElement(node, { key: index }) : e.message;\n                }));\n            }\n            return '';\n        }\n        return help;\n    }\n    getControls(children, recursively) {\n        let controls = [];\n        const childrenArray = React.Children.toArray(children);\n        for (let i = 0; i < childrenArray.length; i++) {\n            if (!recursively && controls.length > 0) {\n                break;\n            }\n            const child = childrenArray[i];\n            if (child.type &&\n                (child.type === FormItem || child.type.displayName === 'FormItem')) {\n                continue;\n            }\n            if (!child.props) {\n                continue;\n            }\n            if (FIELD_META_PROP in child.props) {\n                // And means FIELD_DATA_PROP in child.props, too.\n                controls.push(child);\n            }\n            else if (child.props.children) {\n                controls = controls.concat(this.getControls(child.props.children, recursively));\n            }\n        }\n        return controls;\n    }\n    getOnlyControl() {\n        const child = this.getControls(this.props.children, false)[0];\n        return child !== undefined ? child : null;\n    }\n    getChildProp(prop) {\n        const child = this.getOnlyControl();\n        return child && child.props && child.props[prop];\n    }\n    getId() {\n        return this.getChildProp('id');\n    }\n    getMeta() {\n        return this.getChildProp(FIELD_META_PROP);\n    }\n    getField() {\n        return this.getChildProp(FIELD_DATA_PROP);\n    }\n    getValidateStatus() {\n        const onlyControl = this.getOnlyControl();\n        if (!onlyControl) {\n            return '';\n        }\n        const field = this.getField();\n        if (field.validating) {\n            return 'validating';\n        }\n        if (field.errors) {\n            return 'error';\n        }\n        const fieldValue = 'value' in field ? field.value : this.getMeta().initialValue;\n        if (fieldValue !== undefined && fieldValue !== null && fieldValue !== '') {\n            return 'success';\n        }\n        return '';\n    }\n    isRequired() {\n        const { required } = this.props;\n        if (required !== undefined) {\n            return required;\n        }\n        if (this.getOnlyControl()) {\n            const meta = this.getMeta() || {};\n            const validate = meta.validate || [];\n            return validate\n                .filter((item) => !!item.rules)\n                .some((item) => {\n                return item.rules.some((rule) => rule.required);\n            });\n        }\n        return false;\n    }\n    renderHelp(prefixCls) {\n        const help = this.getHelpMessage();\n        const children = help ? (<div className={`${prefixCls}-explain`} key=\"help\">\n        {help}\n      </div>) : null;\n        if (children) {\n            this.helpShow = !!children;\n        }\n        return (<Animate transitionName=\"show-help\" component=\"\" transitionAppear key=\"help\" onEnd={this.onHelpAnimEnd}>\n        {children}\n      </Animate>);\n    }\n    renderExtra(prefixCls) {\n        const { extra } = this.props;\n        return extra ? <div className={`${prefixCls}-extra`}>{extra}</div> : null;\n    }\n    renderValidateWrapper(prefixCls, c1, c2, c3) {\n        const { props } = this;\n        const onlyControl = this.getOnlyControl;\n        const validateStatus = props.validateStatus === undefined && onlyControl\n            ? this.getValidateStatus()\n            : props.validateStatus;\n        let classes = `${prefixCls}-item-control`;\n        if (validateStatus) {\n            classes = classNames(`${prefixCls}-item-control`, {\n                'has-feedback': props.hasFeedback || validateStatus === 'validating',\n                'has-success': validateStatus === 'success',\n                'has-warning': validateStatus === 'warning',\n                'has-error': validateStatus === 'error',\n                'is-validating': validateStatus === 'validating',\n            });\n        }\n        let iconType = '';\n        switch (validateStatus) {\n            case 'success':\n                iconType = 'check-circle';\n                break;\n            case 'warning':\n                iconType = 'exclamation-circle';\n                break;\n            case 'error':\n                iconType = 'close-circle';\n                break;\n            case 'validating':\n                iconType = 'loading';\n                break;\n            default:\n                iconType = '';\n                break;\n        }\n        const icon = props.hasFeedback && iconType ? (<span className={`${prefixCls}-item-children-icon`}>\n          <Icon type={iconType} theme={iconType === 'loading' ? 'outlined' : 'filled'}/>\n        </span>) : null;\n        return (<div className={classes}>\n        <span className={`${prefixCls}-item-children`}>\n          {c1}\n          {icon}\n        </span>\n        {c2}\n        {c3}\n      </div>);\n    }\n    renderWrapper(prefixCls, children) {\n        return (<FormContext.Consumer key=\"wrapper\">\n        {({ wrapperCol: contextWrapperCol, vertical }) => {\n            const { wrapperCol } = this.props;\n            const mergedWrapperCol = ('wrapperCol' in this.props ? wrapperCol : contextWrapperCol) || {};\n            const className = classNames(`${prefixCls}-item-control-wrapper`, mergedWrapperCol.className);\n            // No pass FormContext since it's useless\n            return (<FormContext.Provider value={{ vertical }}>\n              <Col {...mergedWrapperCol} className={className}>\n                {children}\n              </Col>\n            </FormContext.Provider>);\n        }}\n      </FormContext.Consumer>);\n    }\n    renderLabel(prefixCls) {\n        return (<FormContext.Consumer key=\"label\">\n        {({ vertical, labelAlign: contextLabelAlign, labelCol: contextLabelCol, colon: contextColon, }) => {\n            const { label, labelCol, labelAlign, colon, id, htmlFor } = this.props;\n            const required = this.isRequired();\n            const mergedLabelCol = ('labelCol' in this.props ? labelCol : contextLabelCol) || {};\n            const mergedLabelAlign = 'labelAlign' in this.props ? labelAlign : contextLabelAlign;\n            const labelClsBasic = `${prefixCls}-item-label`;\n            const labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.className);\n            let labelChildren = label;\n            // Keep label is original where there should have no colon\n            const computedColon = colon === true || (contextColon !== false && colon !== false);\n            const haveColon = computedColon && !vertical;\n            // Remove duplicated user input colon\n            if (haveColon && typeof label === 'string' && label.trim() !== '') {\n                labelChildren = label.replace(/[：:]\\s*$/, '');\n            }\n            const labelClassName = classNames({\n                [`${prefixCls}-item-required`]: required,\n                [`${prefixCls}-item-no-colon`]: !computedColon,\n            });\n            return label ? (<Col {...mergedLabelCol} className={labelColClassName}>\n              <label htmlFor={htmlFor || id || this.getId()} className={labelClassName} title={typeof label === 'string' ? label : ''} onClick={this.onLabelClick}>\n                {labelChildren}\n              </label>\n            </Col>) : null;\n        }}\n      </FormContext.Consumer>);\n    }\n    renderChildren(prefixCls) {\n        const { children } = this.props;\n        return [\n            this.renderLabel(prefixCls),\n            this.renderWrapper(prefixCls, this.renderValidateWrapper(prefixCls, children, this.renderHelp(prefixCls), this.renderExtra(prefixCls))),\n        ];\n    }\n    render() {\n        return <ConfigConsumer>{this.renderFormItem}</ConfigConsumer>;\n    }\n}\nFormItem.defaultProps = {\n    hasFeedback: false,\n};\nFormItem.propTypes = {\n    prefixCls: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    labelCol: PropTypes.object,\n    help: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    validateStatus: PropTypes.oneOf(ValidateStatuses),\n    hasFeedback: PropTypes.bool,\n    wrapperCol: PropTypes.object,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    children: PropTypes.node,\n    colon: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}