{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable camelcase */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as allIcons from '@ant-design/icons/lib/dist';\nimport ReactIcon from '@ant-design/icons-react';\nimport createFromIconfontCN from './IconFont';\nimport { svgBaseProps, withThemeSuffix, removeTypeTheme, getThemeFromTypeName, alias } from './utils';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor'; // Initial setting\n\nReactIcon.add.apply(ReactIcon, _toConsumableArray(Object.keys(allIcons).map(function (key) {\n  return allIcons[key];\n})));\nsetTwoToneColor('#1890ff');\nvar defaultTheme = 'outlined';\nvar dangerousTheme;\nfunction unstable_ChangeThemeOfIconsDangerously(theme) {\n  warning(false, 'Icon', \"You are using the unstable method 'Icon.unstable_ChangeThemeOfAllIconsDangerously', \" + \"make sure that all the icons with theme '\".concat(theme, \"' display correctly.\"));\n  dangerousTheme = theme;\n}\nfunction unstable_ChangeDefaultThemeOfIcons(theme) {\n  warning(false, 'Icon', \"You are using the unstable method 'Icon.unstable_ChangeDefaultThemeOfIcons', \" + \"make sure that all the icons with theme '\".concat(theme, \"' display correctly.\"));\n  defaultTheme = theme;\n}\nvar Icon = function Icon(props) {\n  var _classNames;\n  var className = props.className,\n    type = props.type,\n    Component = props.component,\n    viewBox = props.viewBox,\n    spin = props.spin,\n    rotate = props.rotate,\n    tabIndex = props.tabIndex,\n    onClick = props.onClick,\n    children = props.children,\n    theme = props.theme,\n    twoToneColor = props.twoToneColor,\n    restProps = __rest(props, [\"className\", \"type\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\", \"theme\", \"twoToneColor\"]);\n  warning(Boolean(type || Component || children), 'Icon', 'Should have `type` prop or `component` prop or `children`.');\n  var classString = classNames((_classNames = {}, _defineProperty(_classNames, \"anticon\", true), _defineProperty(_classNames, \"anticon-\".concat(type), Boolean(type)), _classNames), className);\n  var svgClassString = classNames(_defineProperty({}, \"anticon-spin\", !!spin || type === 'loading'));\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n  var innerSvgProps = _extends(_extends({}, svgBaseProps), {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox: viewBox\n  });\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n  var renderInnerNode = function renderInnerNode() {\n    // component > children > type\n    if (Component) {\n      return React.createElement(Component, innerSvgProps, children);\n    }\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && React.isValidElement(children) && React.Children.only(children).type === 'use', 'Icon', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n    if (typeof type === 'string') {\n      var computedType = type;\n      if (theme) {\n        var themeInName = getThemeFromTypeName(type);\n        warning(!themeInName || theme === themeInName, 'Icon', \"The icon name '\".concat(type, \"' already specify a theme '\").concat(themeInName, \"',\") + \" the 'theme' prop '\".concat(theme, \"' will be ignored.\"));\n      }\n      computedType = withThemeSuffix(removeTypeTheme(alias(computedType)), dangerousTheme || theme || defaultTheme);\n      return React.createElement(ReactIcon, {\n        className: svgClassString,\n        type: computedType,\n        primaryColor: twoToneColor,\n        style: svgStyle\n      });\n    }\n  };\n  var iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  return React.createElement(LocaleReceiver, {\n    componentName: \"Icon\"\n  }, function (locale) {\n    return React.createElement(\"i\", _extends({\n      \"aria-label\": type && \"\".concat(locale.icon, \": \").concat(type)\n    }, restProps, {\n      tabIndex: iconTabIndex,\n      onClick: onClick,\n      className: classString\n    }), renderInnerNode());\n  });\n};\nIcon.createFromIconfontCN = createFromIconfontCN;\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","allIcons","ReactIcon","createFromIconfontCN","svgBaseProps","withThemeSuffix","removeTypeTheme","getThemeFromTypeName","alias","warning","LocaleReceiver","getTwoToneColor","setTwoToneColor","add","keys","map","key","defaultTheme","dangerousTheme","unstable_ChangeThemeOfIconsDangerously","theme","unstable_ChangeDefaultThemeOfIcons","Icon","className","props","type","Component","component","viewBox","spin","rotate","tabIndex","onClick","children","twoToneColor","restProps","Boolean","classString","svgClassString","svgStyle","msTransform","transform","undefined","innerSvgProps","_extends","style","renderInnerNode","Children","count","isValidElement","only","computedType","themeInName","primaryColor","iconTabIndex","componentName","locale","icon"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\icon\\icon\\index.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable camelcase */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as allIcons from '@ant-design/icons/lib/dist';\nimport ReactIcon from '@ant-design/icons-react';\nimport createFromIconfontCN from './IconFont';\nimport { svgBaseProps, withThemeSuffix, removeTypeTheme, getThemeFromTypeName, alias, } from './utils';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor';\n// Initial setting\nReactIcon.add(...Object.keys(allIcons).map(key => allIcons[key]));\nsetTwoToneColor('#1890ff');\nlet defaultTheme = 'outlined';\nlet dangerousTheme;\nfunction unstable_ChangeThemeOfIconsDangerously(theme) {\n    warning(false, 'Icon', `You are using the unstable method 'Icon.unstable_ChangeThemeOfAllIconsDangerously', ` +\n        `make sure that all the icons with theme '${theme}' display correctly.`);\n    dangerousTheme = theme;\n}\nfunction unstable_ChangeDefaultThemeOfIcons(theme) {\n    warning(false, 'Icon', `You are using the unstable method 'Icon.unstable_ChangeDefaultThemeOfIcons', ` +\n        `make sure that all the icons with theme '${theme}' display correctly.`);\n    defaultTheme = theme;\n}\nconst Icon = props => {\n    const { \n    // affect outter <i>...</i>\n    className, \n    // affect inner <svg>...</svg>\n    type, component: Component, viewBox, spin, rotate, tabIndex, onClick, \n    // children\n    children, \n    // other\n    theme, // default to outlined\n    twoToneColor } = props, restProps = __rest(props, [\"className\", \"type\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\", \"theme\", \"twoToneColor\"]);\n    warning(Boolean(type || Component || children), 'Icon', 'Should have `type` prop or `component` prop or `children`.');\n    const classString = classNames({\n        [`anticon`]: true,\n        [`anticon-${type}`]: Boolean(type),\n    }, className);\n    const svgClassString = classNames({\n        [`anticon-spin`]: !!spin || type === 'loading',\n    });\n    const svgStyle = rotate\n        ? {\n            msTransform: `rotate(${rotate}deg)`,\n            transform: `rotate(${rotate}deg)`,\n        }\n        : undefined;\n    const innerSvgProps = Object.assign(Object.assign({}, svgBaseProps), { className: svgClassString, style: svgStyle, viewBox });\n    if (!viewBox) {\n        delete innerSvgProps.viewBox;\n    }\n    const renderInnerNode = () => {\n        // component > children > type\n        if (Component) {\n            return <Component {...innerSvgProps}>{children}</Component>;\n        }\n        if (children) {\n            warning(Boolean(viewBox) ||\n                (React.Children.count(children) === 1 &&\n                    React.isValidElement(children) &&\n                    React.Children.only(children).type === 'use'), 'Icon', 'Make sure that you provide correct `viewBox`' +\n                ' prop (default `0 0 1024 1024`) to the icon.');\n            return (<svg {...innerSvgProps} viewBox={viewBox}>\n          {children}\n        </svg>);\n        }\n        if (typeof type === 'string') {\n            let computedType = type;\n            if (theme) {\n                const themeInName = getThemeFromTypeName(type);\n                warning(!themeInName || theme === themeInName, 'Icon', `The icon name '${type}' already specify a theme '${themeInName}',` +\n                    ` the 'theme' prop '${theme}' will be ignored.`);\n            }\n            computedType = withThemeSuffix(removeTypeTheme(alias(computedType)), dangerousTheme || theme || defaultTheme);\n            return (<ReactIcon className={svgClassString} type={computedType} primaryColor={twoToneColor} style={svgStyle}/>);\n        }\n    };\n    let iconTabIndex = tabIndex;\n    if (iconTabIndex === undefined && onClick) {\n        iconTabIndex = -1;\n    }\n    return (<LocaleReceiver componentName=\"Icon\">\n      {(locale) => (<i aria-label={type && `${locale.icon}: ${type}`} {...restProps} tabIndex={iconTabIndex} onClick={onClick} className={classString}>\n          {renderInnerNode()}\n        </i>)}\n    </LocaleReceiver>);\n};\nIcon.createFromIconfontCN = createFromIconfontCN;\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}