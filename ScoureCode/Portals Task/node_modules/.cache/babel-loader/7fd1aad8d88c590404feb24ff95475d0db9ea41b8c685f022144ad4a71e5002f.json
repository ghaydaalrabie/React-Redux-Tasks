{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport raf from '../_util/raf';\nimport warning from '../_util/warning';\nvar ResizableTextArea = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResizableTextArea, _React$Component);\n  function ResizableTextArea(props) {\n    var _this;\n    _classCallCheck(this, ResizableTextArea);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResizableTextArea).call(this, props));\n    _this.saveTextArea = function (textArea) {\n      _this.textArea = textArea;\n    };\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.nextFrameActionId);\n      _this.nextFrameActionId = raf(_this.resizeTextarea);\n    };\n    _this.resizeTextarea = function () {\n      var autoSize = _this.props.autoSize || _this.props.autosize;\n      if (!autoSize || !_this.textArea) {\n        return;\n      }\n      var minRows = autoSize.minRows,\n        maxRows = autoSize.maxRows;\n      var textareaStyles = calculateNodeHeight(_this.textArea, false, minRows, maxRows);\n      _this.setState({\n        textareaStyles: textareaStyles,\n        resizing: true\n      }, function () {\n        raf.cancel(_this.resizeFrameId);\n        _this.resizeFrameId = raf(function () {\n          _this.setState({\n            resizing: false\n          });\n        });\n      });\n    };\n    _this.renderTextArea = function () {\n      var _this$props = _this.props,\n        prefixCls = _this$props.prefixCls,\n        autoSize = _this$props.autoSize,\n        autosize = _this$props.autosize,\n        className = _this$props.className,\n        disabled = _this$props.disabled;\n      var _this$state = _this.state,\n        textareaStyles = _this$state.textareaStyles,\n        resizing = _this$state.resizing;\n      warning(autosize === undefined, 'Input.TextArea', 'autosize is deprecated, please use autoSize instead.');\n      var otherProps = omit(_this.props, ['prefixCls', 'onPressEnter', 'autoSize', 'autosize', 'defaultValue', 'allowClear']);\n      var cls = classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)); // Fix https://github.com/ant-design/ant-design/issues/6776\n      // Make sure it could be reset when using form.getFieldDecorator\n\n      if ('value' in otherProps) {\n        otherProps.value = otherProps.value || '';\n      }\n      var style = _extends(_extends(_extends({}, _this.props.style), textareaStyles), resizing ? {\n        overflow: 'hidden'\n      } : null);\n      return React.createElement(ResizeObserver, {\n        onResize: _this.resizeOnNextFrame,\n        disabled: !(autoSize || autosize)\n      }, React.createElement(\"textarea\", _extends({}, otherProps, {\n        className: cls,\n        style: style,\n        ref: _this.saveTextArea\n      })));\n    };\n    _this.state = {\n      textareaStyles: {},\n      resizing: false\n    };\n    return _this;\n  }\n  _createClass(ResizableTextArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resizeTextarea();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Re-render with the new content then recalculate the height as required.\n      if (prevProps.value !== this.props.value) {\n        this.resizeTextarea();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      raf.cancel(this.nextFrameActionId);\n      raf.cancel(this.resizeFrameId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderTextArea();\n    }\n  }]);\n  return ResizableTextArea;\n}(React.Component);\npolyfill(ResizableTextArea);\nexport default ResizableTextArea;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,OAAP,MAAoB,kBAApB;IACMC,iB;;;EACF,2BAAYC,KAAZ,EAAmB;IAAA;IAAAC;IACfC,uFAAMF,KAAN;IACAE,MAAKC,YAAL,GAAoB,UAACC,QAAD,EAAc;MAC9BF,MAAKE,QAAL,GAAgBA,QAAhB;IACH,CAFD;IAGAF,MAAKG,iBAAL,GAAyB,YAAM;MAC3BR,GAAG,CAACS,MAAJ,CAAWJ,MAAKK,iBAAhB;MACAL,MAAKK,iBAAL,GAAyBV,GAAG,CAACK,MAAKM,cAAN,CAA5B;IACH,CAHD;IAIAN,MAAKM,cAAL,GAAsB,YAAM;MACxB,IAAMC,QAAQ,GAAGP,MAAKF,KAAL,CAAWS,QAAX,IAAuBP,MAAKF,KAAL,CAAWU,QAAnD;MACA,IAAI,CAACD,QAAD,IAAa,CAACP,MAAKE,QAAvB,EAAiC;QAC7B;MACH;MAJuB,IAKhBO,OALgB,GAKKF,QALL,CAKhBE,OALgB;QAKPC,OALO,GAKKH,QALL,CAKPG,OALO;MAMxB,IAAMC,cAAc,GAAGjB,mBAAmB,CAACM,MAAKE,QAAN,EAAgB,KAAhB,EAAuBO,OAAvB,EAAgCC,OAAhC,CAA1C;MACAV,MAAKY,QAAL,CAAc;QAAED,cAAc,EAAdA,cAAF;QAAkBE,QAAQ,EAAE;MAA5B,CAAd,EAAkD,YAAM;QACpDlB,GAAG,CAACS,MAAJ,CAAWJ,MAAKc,aAAhB;QACAd,MAAKc,aAAL,GAAqBnB,GAAG,CAAC,YAAM;UAC3BK,MAAKY,QAAL,CAAc;YAAEC,QAAQ,EAAE;UAAZ,CAAd;QACH,CAFuB,CAAxB;MAGH,CALD;IAMH,CAbD;IAcAb,MAAKe,cAAL,GAAsB,YAAM;MAAA,kBACuCf,MAAKF,KAD5C;QAChBkB,SADgB,eAChBA,SADgB;QACLT,QADK,eACLA,QADK;QACKC,QADL,eACKA,QADL;QACeS,SADf,eACeA,SADf;QAC0BC,QAD1B,eAC0BA,QAD1B;MAAA,kBAEalB,MAAKmB,KAFlB;QAEhBR,cAFgB,eAEhBA,cAFgB;QAEAE,QAFA,eAEAA,QAFA;MAGxBjB,OAAO,CAACY,QAAQ,KAAKY,SAAd,EAAyB,gBAAzB,EAA2C,sDAA3C,CAAP;MACA,IAAMC,UAAU,GAAG7B,IAAI,CAACQ,MAAKF,KAAN,EAAa,CAChC,WADgC,EAEhC,cAFgC,EAGhC,UAHgC,EAIhC,UAJgC,EAKhC,cALgC,EAMhC,YANgC,CAAb,CAAvB;MAQA,IAAMwB,GAAG,GAAG7B,UAAU,CAACuB,SAAD,EAAYC,SAAZ,gCACdD,SADc,gBACSE,QADT,EAAtB,CAZwB,CAexB;MACA;;MACA,IAAI,WAAWG,UAAf,EAA2B;QACvBA,UAAU,CAACE,KAAX,GAAmBF,UAAU,CAACE,KAAX,IAAoB,EAAvC;MACH;MACD,IAAMC,KAAK,GAAGC,SAAcA,SAAcA,SAAc,EAAd,EAAkBzB,MAAKF,KAAL,CAAW0B,KAA7B,CAAd,EAAmDb,cAAnD,CAAd,EAAmFE,QAAQ,GAAG;QAAEa,QAAQ,EAAE;MAAZ,CAAH,GAA4B,IAAvH,CAAd;MACA,OAAQrC,oBAACE,cAAD;QAAgBoC,QAAQ,EAAE3B,MAAKG,iBAA/B;QAAkDe,QAAQ,EAAE,EAAEX,QAAQ,IAAIC,QAAd;MAA5D,GACZnB,6CAAcgC,UAAd;QAA0BJ,SAAS,EAAEK,GAArC;QAA0CE,KAAK,EAAEA,KAAjD;QAAwDI,GAAG,EAAE5B,MAAKC;MAAlE,GADY,CAAR;IAGH,CAxBD;IAyBAD,MAAKmB,KAAL,GAAa;MACTR,cAAc,EAAE,EADP;MAETE,QAAQ,EAAE;IAFD,CAAb;IAhDe;EAoDlB;;;wCACmB;MAChB,KAAKP,cAAL;IACH;;;uCACkBuB,S,EAAW;MAC1B;MACA,IAAIA,SAAS,CAACN,KAAV,KAAoB,KAAKzB,KAAL,CAAWyB,KAAnC,EAA0C;QACtC,KAAKjB,cAAL;MACH;IACJ;;;2CACsB;MACnBX,GAAG,CAACS,MAAJ,CAAW,KAAKC,iBAAhB;MACAV,GAAG,CAACS,MAAJ,CAAW,KAAKU,aAAhB;IACH;;;6BACQ;MACL,OAAO,KAAKC,cAAL,EAAP;IACH;;;EArE2B1B,KAAK,CAACyC,S;AAuEtCxC,QAAQ,CAACO,iBAAD,CAAR;AACA,eAAeA,iBAAf","names":["React","polyfill","ResizeObserver","omit","classNames","calculateNodeHeight","raf","warning","ResizableTextArea","props","_classCallCheck","_this","saveTextArea","textArea","resizeOnNextFrame","cancel","nextFrameActionId","resizeTextarea","autoSize","autosize","minRows","maxRows","textareaStyles","setState","resizing","resizeFrameId","renderTextArea","prefixCls","className","disabled","state","undefined","otherProps","cls","value","style","_extends","overflow","onResize","ref","prevProps","Component"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\input\\input\\ResizableTextArea.jsx"],"sourcesContent":["import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport raf from '../_util/raf';\nimport warning from '../_util/warning';\nclass ResizableTextArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveTextArea = (textArea) => {\n            this.textArea = textArea;\n        };\n        this.resizeOnNextFrame = () => {\n            raf.cancel(this.nextFrameActionId);\n            this.nextFrameActionId = raf(this.resizeTextarea);\n        };\n        this.resizeTextarea = () => {\n            const autoSize = this.props.autoSize || this.props.autosize;\n            if (!autoSize || !this.textArea) {\n                return;\n            }\n            const { minRows, maxRows } = autoSize;\n            const textareaStyles = calculateNodeHeight(this.textArea, false, minRows, maxRows);\n            this.setState({ textareaStyles, resizing: true }, () => {\n                raf.cancel(this.resizeFrameId);\n                this.resizeFrameId = raf(() => {\n                    this.setState({ resizing: false });\n                });\n            });\n        };\n        this.renderTextArea = () => {\n            const { prefixCls, autoSize, autosize, className, disabled } = this.props;\n            const { textareaStyles, resizing } = this.state;\n            warning(autosize === undefined, 'Input.TextArea', 'autosize is deprecated, please use autoSize instead.');\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'autoSize',\n                'autosize',\n                'defaultValue',\n                'allowClear',\n            ]);\n            const cls = classNames(prefixCls, className, {\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            // Fix https://github.com/ant-design/ant-design/issues/6776\n            // Make sure it could be reset when using form.getFieldDecorator\n            if ('value' in otherProps) {\n                otherProps.value = otherProps.value || '';\n            }\n            const style = Object.assign(Object.assign(Object.assign({}, this.props.style), textareaStyles), (resizing ? { overflow: 'hidden' } : null));\n            return (<ResizeObserver onResize={this.resizeOnNextFrame} disabled={!(autoSize || autosize)}>\n        <textarea {...otherProps} className={cls} style={style} ref={this.saveTextArea}/>\n      </ResizeObserver>);\n        };\n        this.state = {\n            textareaStyles: {},\n            resizing: false,\n        };\n    }\n    componentDidMount() {\n        this.resizeTextarea();\n    }\n    componentDidUpdate(prevProps) {\n        // Re-render with the new content then recalculate the height as required.\n        if (prevProps.value !== this.props.value) {\n            this.resizeTextarea();\n        }\n    }\n    componentWillUnmount() {\n        raf.cancel(this.nextFrameActionId);\n        raf.cancel(this.resizeFrameId);\n    }\n    render() {\n        return this.renderTextArea();\n    }\n}\npolyfill(ResizableTextArea);\nexport default ResizableTextArea;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}