{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport Upload from './Upload'; // stick class comoponent to avoid React ref warning inside Form\n// https://github.com/ant-design/ant-design/issues/18707\n// eslint-disable-next-line react/prefer-stateless-function\n\nvar Dragger = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dragger, _React$Component);\n  function Dragger() {\n    _classCallCheck(this, Dragger);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dragger).apply(this, arguments));\n  }\n  _createClass(Dragger, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return React.createElement(Upload, _extends({}, props, {\n        type: \"drag\",\n        style: _extends(_extends({}, props.style), {\n          height: props.height\n        })\n      }));\n    }\n  }]);\n  return Dragger;\n}(React.Component);\nexport { Dragger as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;AACA;AACA;;IACqBC,O;;;;;;;;;6BACR;MAAA,IACGC,KADH,GACa,IADb,CACGA,KADH;MAEL,OAAOH,oBAACC,MAAD,eAAYE,KAAZ;QAAmBC,IAAI,EAAC,MAAxB;QAA+BC,KAAK,EAAEC,SAAcA,SAAc,EAAd,EAAkBH,KAAK,CAACE,KAAxB,CAAd,EAA8C;UAAEE,MAAM,EAAEJ,KAAK,CAACI;QAAhB,CAA9C;MAAtC,GAAP;IACH;;;EAJgCP,KAAK,CAACQ,S;SAAtBN,O","names":["React","Upload","Dragger","props","type","style","_extends","height","Component"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\upload\\upload\\Dragger.jsx"],"sourcesContent":["import * as React from 'react';\nimport Upload from './Upload';\n// stick class comoponent to avoid React ref warning inside Form\n// https://github.com/ant-design/ant-design/issues/18707\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Dragger extends React.Component {\n    render() {\n        const { props } = this;\n        return <Upload {...props} type=\"drag\" style={Object.assign(Object.assign({}, props.style), { height: props.height })}/>;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}