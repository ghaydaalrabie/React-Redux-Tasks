{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport TransitionEvents from \"css-animation/es/Event\";\nimport raf from './raf';\nimport { ConfigConsumer } from '../config-provider';\nvar styleForPesudo; // Where el is the DOM element you'd like to test for visibility\n\nfunction isHidden(element) {\n  if (process.env.NODE_ENV === 'test') {\n    return false;\n  }\n  return !element || element.offsetParent === null;\n}\nfunction isNotGrey(color) {\n  // eslint-disable-next-line no-useless-escape\n  var match = (color || '').match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n  if (match && match[1] && match[2] && match[3]) {\n    return !(match[1] === match[2] && match[2] === match[3]);\n  }\n  return true;\n}\nvar Wave = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Wave, _React$Component);\n  function Wave() {\n    var _this;\n    _classCallCheck(this, Wave);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wave).apply(this, arguments));\n    _this.animationStart = false;\n    _this.destroy = false;\n    _this.onClick = function (node, waveColor) {\n      if (!node || isHidden(node) || node.className.indexOf('-leave') >= 0) {\n        return;\n      }\n      var insertExtraNode = _this.props.insertExtraNode;\n      _this.extraNode = document.createElement('div');\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        extraNode = _assertThisInitialize.extraNode;\n      extraNode.className = 'ant-click-animating-node';\n      var attributeName = _this.getAttributeName();\n      node.setAttribute(attributeName, 'true'); // Not white or transparnt or grey\n\n      styleForPesudo = styleForPesudo || document.createElement('style');\n      if (waveColor && waveColor !== '#ffffff' && waveColor !== 'rgb(255, 255, 255)' && isNotGrey(waveColor) && !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(waveColor) &&\n      // any transparent rgba color\n      waveColor !== 'transparent') {\n        // Add nonce if CSP exist\n        if (_this.csp && _this.csp.nonce) {\n          styleForPesudo.nonce = _this.csp.nonce;\n        }\n        extraNode.style.borderColor = waveColor;\n        styleForPesudo.innerHTML = \"\\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\\n        --antd-wave-shadow-color: \".concat(waveColor, \";\\n      }\");\n        if (!document.body.contains(styleForPesudo)) {\n          document.body.appendChild(styleForPesudo);\n        }\n      }\n      if (insertExtraNode) {\n        node.appendChild(extraNode);\n      }\n      TransitionEvents.addStartEventListener(node, _this.onTransitionStart);\n      TransitionEvents.addEndEventListener(node, _this.onTransitionEnd);\n    };\n    _this.onTransitionStart = function (e) {\n      if (_this.destroy) return;\n      var node = findDOMNode(_assertThisInitialized(_this));\n      if (!e || e.target !== node) {\n        return;\n      }\n      if (!_this.animationStart) {\n        _this.resetEffect(node);\n      }\n    };\n    _this.onTransitionEnd = function (e) {\n      if (!e || e.animationName !== 'fadeEffect') {\n        return;\n      }\n      _this.resetEffect(e.target);\n    };\n    _this.bindAnimationEvent = function (node) {\n      if (!node || !node.getAttribute || node.getAttribute('disabled') || node.className.indexOf('disabled') >= 0) {\n        return;\n      }\n      var onClick = function onClick(e) {\n        // Fix radio button click twice\n        if (e.target.tagName === 'INPUT' || isHidden(e.target)) {\n          return;\n        }\n        _this.resetEffect(node); // Get wave color from target\n\n        var waveColor = getComputedStyle(node).getPropertyValue('border-top-color') ||\n        // Firefox Compatible\n        getComputedStyle(node).getPropertyValue('border-color') || getComputedStyle(node).getPropertyValue('background-color');\n        _this.clickWaveTimeoutId = window.setTimeout(function () {\n          return _this.onClick(node, waveColor);\n        }, 0);\n        raf.cancel(_this.animationStartId);\n        _this.animationStart = true; // Render to trigger transition event cost 3 frames. Let's delay 10 frames to reset this.\n\n        _this.animationStartId = raf(function () {\n          _this.animationStart = false;\n        }, 10);\n      };\n      node.addEventListener('click', onClick, true);\n      return {\n        cancel: function cancel() {\n          node.removeEventListener('click', onClick, true);\n        }\n      };\n    };\n    _this.renderWave = function (_ref) {\n      var csp = _ref.csp;\n      var children = _this.props.children;\n      _this.csp = csp;\n      return children;\n    };\n    return _this;\n  }\n  _createClass(Wave, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var node = findDOMNode(this);\n      if (!node || node.nodeType !== 1) {\n        return;\n      }\n      this.instance = this.bindAnimationEvent(node);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.instance) {\n        this.instance.cancel();\n      }\n      if (this.clickWaveTimeoutId) {\n        clearTimeout(this.clickWaveTimeoutId);\n      }\n      this.destroy = true;\n    }\n  }, {\n    key: \"getAttributeName\",\n    value: function getAttributeName() {\n      var insertExtraNode = this.props.insertExtraNode;\n      return insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n  }, {\n    key: \"resetEffect\",\n    value: function resetEffect(node) {\n      if (!node || node === this.extraNode || !(node instanceof Element)) {\n        return;\n      }\n      var insertExtraNode = this.props.insertExtraNode;\n      var attributeName = this.getAttributeName();\n      node.setAttribute(attributeName, 'false'); // edge has bug on `removeAttribute` #14466\n\n      if (styleForPesudo) {\n        styleForPesudo.innerHTML = '';\n      }\n      if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {\n        node.removeChild(this.extraNode);\n      }\n      TransitionEvents.removeStartEventListener(node, this.onTransitionStart);\n      TransitionEvents.removeEndEventListener(node, this.onTransitionEnd);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderWave);\n    }\n  }]);\n  return Wave;\n}(React.Component);\nexport { Wave as default };","map":{"version":3,"mappings":"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","names":["React","findDOMNode","TransitionEvents","raf","ConfigConsumer","styleForPesudo","isHidden","element","process","env","NODE_ENV","offsetParent","isNotGrey","color","match","Wave","_classCallCheck","_this","arguments","animationStart","destroy","onClick","node","waveColor","className","indexOf","insertExtraNode","props","extraNode","document","createElement","attributeName","getAttributeName","setAttribute","test","csp","nonce","style","borderColor","innerHTML","body","contains","appendChild","addStartEventListener","onTransitionStart","addEndEventListener","onTransitionEnd","e","target","resetEffect","animationName","bindAnimationEvent","getAttribute","tagName","getComputedStyle","getPropertyValue","clickWaveTimeoutId","window","setTimeout","cancel","animationStartId","addEventListener","removeEventListener","renderWave","children","nodeType","instance","clearTimeout","Element","removeChild","removeStartEventListener","removeEndEventListener","Component"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\_util\\_util\\wave.jsx"],"sourcesContent":["import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport TransitionEvents from 'css-animation/lib/Event';\nimport raf from './raf';\nimport { ConfigConsumer } from '../config-provider';\nlet styleForPesudo;\n// Where el is the DOM element you'd like to test for visibility\nfunction isHidden(element) {\n    if (process.env.NODE_ENV === 'test') {\n        return false;\n    }\n    return !element || element.offsetParent === null;\n}\nfunction isNotGrey(color) {\n    // eslint-disable-next-line no-useless-escape\n    const match = (color || '').match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n    if (match && match[1] && match[2] && match[3]) {\n        return !(match[1] === match[2] && match[2] === match[3]);\n    }\n    return true;\n}\nexport default class Wave extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.animationStart = false;\n        this.destroy = false;\n        this.onClick = (node, waveColor) => {\n            if (!node || isHidden(node) || node.className.indexOf('-leave') >= 0) {\n                return;\n            }\n            const { insertExtraNode } = this.props;\n            this.extraNode = document.createElement('div');\n            const { extraNode } = this;\n            extraNode.className = 'ant-click-animating-node';\n            const attributeName = this.getAttributeName();\n            node.setAttribute(attributeName, 'true');\n            // Not white or transparnt or grey\n            styleForPesudo = styleForPesudo || document.createElement('style');\n            if (waveColor &&\n                waveColor !== '#ffffff' &&\n                waveColor !== 'rgb(255, 255, 255)' &&\n                isNotGrey(waveColor) &&\n                !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(waveColor) && // any transparent rgba color\n                waveColor !== 'transparent') {\n                // Add nonce if CSP exist\n                if (this.csp && this.csp.nonce) {\n                    styleForPesudo.nonce = this.csp.nonce;\n                }\n                extraNode.style.borderColor = waveColor;\n                styleForPesudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n                if (!document.body.contains(styleForPesudo)) {\n                    document.body.appendChild(styleForPesudo);\n                }\n            }\n            if (insertExtraNode) {\n                node.appendChild(extraNode);\n            }\n            TransitionEvents.addStartEventListener(node, this.onTransitionStart);\n            TransitionEvents.addEndEventListener(node, this.onTransitionEnd);\n        };\n        this.onTransitionStart = (e) => {\n            if (this.destroy)\n                return;\n            const node = findDOMNode(this);\n            if (!e || e.target !== node) {\n                return;\n            }\n            if (!this.animationStart) {\n                this.resetEffect(node);\n            }\n        };\n        this.onTransitionEnd = (e) => {\n            if (!e || e.animationName !== 'fadeEffect') {\n                return;\n            }\n            this.resetEffect(e.target);\n        };\n        this.bindAnimationEvent = (node) => {\n            if (!node ||\n                !node.getAttribute ||\n                node.getAttribute('disabled') ||\n                node.className.indexOf('disabled') >= 0) {\n                return;\n            }\n            const onClick = (e) => {\n                // Fix radio button click twice\n                if (e.target.tagName === 'INPUT' || isHidden(e.target)) {\n                    return;\n                }\n                this.resetEffect(node);\n                // Get wave color from target\n                const waveColor = getComputedStyle(node).getPropertyValue('border-top-color') || // Firefox Compatible\n                    getComputedStyle(node).getPropertyValue('border-color') ||\n                    getComputedStyle(node).getPropertyValue('background-color');\n                this.clickWaveTimeoutId = window.setTimeout(() => this.onClick(node, waveColor), 0);\n                raf.cancel(this.animationStartId);\n                this.animationStart = true;\n                // Render to trigger transition event cost 3 frames. Let's delay 10 frames to reset this.\n                this.animationStartId = raf(() => {\n                    this.animationStart = false;\n                }, 10);\n            };\n            node.addEventListener('click', onClick, true);\n            return {\n                cancel: () => {\n                    node.removeEventListener('click', onClick, true);\n                },\n            };\n        };\n        this.renderWave = ({ csp }) => {\n            const { children } = this.props;\n            this.csp = csp;\n            return children;\n        };\n    }\n    componentDidMount() {\n        const node = findDOMNode(this);\n        if (!node || node.nodeType !== 1) {\n            return;\n        }\n        this.instance = this.bindAnimationEvent(node);\n    }\n    componentWillUnmount() {\n        if (this.instance) {\n            this.instance.cancel();\n        }\n        if (this.clickWaveTimeoutId) {\n            clearTimeout(this.clickWaveTimeoutId);\n        }\n        this.destroy = true;\n    }\n    getAttributeName() {\n        const { insertExtraNode } = this.props;\n        return insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n    resetEffect(node) {\n        if (!node || node === this.extraNode || !(node instanceof Element)) {\n            return;\n        }\n        const { insertExtraNode } = this.props;\n        const attributeName = this.getAttributeName();\n        node.setAttribute(attributeName, 'false'); // edge has bug on `removeAttribute` #14466\n        if (styleForPesudo) {\n            styleForPesudo.innerHTML = '';\n        }\n        if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {\n            node.removeChild(this.extraNode);\n        }\n        TransitionEvents.removeStartEventListener(node, this.onTransitionStart);\n        TransitionEvents.removeEndEventListener(node, this.onTransitionEnd);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderWave}</ConfigConsumer>;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}