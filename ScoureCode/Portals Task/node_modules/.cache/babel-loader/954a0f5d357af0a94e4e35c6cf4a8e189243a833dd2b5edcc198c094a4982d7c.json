{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { ConfigConsumer } from '../config-provider';\nimport { tuple } from '../_util/type';\nvar SpinSizes = tuple('small', 'default', 'large'); // Render indicator\n\nvar defaultIndicator = null;\nfunction renderIndicator(prefixCls, props) {\n  var indicator = props.indicator;\n  var dotClassName = \"\".concat(prefixCls, \"-dot\"); // should not be render default indicator when indicator value is null\n\n  if (indicator === null) {\n    return null;\n  }\n  if (React.isValidElement(indicator)) {\n    return React.cloneElement(indicator, {\n      className: classNames(indicator.props.className, dotClassName)\n    });\n  }\n  if (React.isValidElement(defaultIndicator)) {\n    return React.cloneElement(defaultIndicator, {\n      className: classNames(defaultIndicator.props.className, dotClassName)\n    });\n  }\n  return React.createElement(\"span\", {\n    className: classNames(dotClassName, \"\".concat(prefixCls, \"-dot-spin\"))\n  }, React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }));\n}\nfunction shouldDelay(spinning, delay) {\n  return !!spinning && !!delay && !isNaN(Number(delay));\n}\nvar Spin = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Spin, _React$Component);\n  function Spin(props) {\n    var _this;\n    _classCallCheck(this, Spin);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Spin).call(this, props));\n    _this.debouncifyUpdateSpinning = function (props) {\n      var _ref = props || _this.props,\n        delay = _ref.delay;\n      if (delay) {\n        _this.cancelExistingSpin();\n        _this.updateSpinning = debounce(_this.originalUpdateSpinning, delay);\n      }\n    };\n    _this.updateSpinning = function () {\n      var spinning = _this.props.spinning;\n      var currentSpinning = _this.state.spinning;\n      if (currentSpinning !== spinning) {\n        _this.setState({\n          spinning: spinning\n        });\n      }\n    };\n    _this.renderSpin = function (_ref2) {\n      var _classNames;\n      var getPrefixCls = _ref2.getPrefixCls;\n      var _a = _this.props,\n        customizePrefixCls = _a.prefixCls,\n        className = _a.className,\n        size = _a.size,\n        tip = _a.tip,\n        wrapperClassName = _a.wrapperClassName,\n        style = _a.style,\n        restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"tip\", \"wrapperClassName\", \"style\"]);\n      var spinning = _this.state.spinning;\n      var prefixCls = getPrefixCls('spin', customizePrefixCls);\n      var spinClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-spinning\"), spinning), _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-text\"), !!tip), _classNames), className); // fix https://fb.me/react-unknown-prop\n\n      var divProps = omit(restProps, ['spinning', 'delay', 'indicator']);\n      var spinElement = React.createElement(\"div\", _extends({}, divProps, {\n        style: style,\n        className: spinClassName\n      }), renderIndicator(prefixCls, _this.props), tip ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-text\")\n      }, tip) : null);\n      if (_this.isNestedPattern()) {\n        var containerClassName = classNames(\"\".concat(prefixCls, \"-container\"), _defineProperty({}, \"\".concat(prefixCls, \"-blur\"), spinning));\n        return React.createElement(\"div\", _extends({}, divProps, {\n          className: classNames(\"\".concat(prefixCls, \"-nested-loading\"), wrapperClassName)\n        }), spinning && React.createElement(\"div\", {\n          key: \"loading\"\n        }, spinElement), React.createElement(\"div\", {\n          className: containerClassName,\n          key: \"container\"\n        }, _this.props.children));\n      }\n      return spinElement;\n    };\n    var spinning = props.spinning,\n      delay = props.delay;\n    var shouldBeDelayed = shouldDelay(spinning, delay);\n    _this.state = {\n      spinning: spinning && !shouldBeDelayed\n    };\n    _this.originalUpdateSpinning = _this.updateSpinning;\n    _this.debouncifyUpdateSpinning(props);\n    return _this;\n  }\n  _createClass(Spin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSpinning();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.debouncifyUpdateSpinning();\n      this.updateSpinning();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelExistingSpin();\n    }\n  }, {\n    key: \"cancelExistingSpin\",\n    value: function cancelExistingSpin() {\n      var updateSpinning = this.updateSpinning;\n      if (updateSpinning && updateSpinning.cancel) {\n        updateSpinning.cancel();\n      }\n    }\n  }, {\n    key: \"isNestedPattern\",\n    value: function isNestedPattern() {\n      return !!(this.props && this.props.children);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderSpin);\n    }\n  }], [{\n    key: \"setDefaultIndicator\",\n    value: function setDefaultIndicator(indicator) {\n      defaultIndicator = indicator;\n    }\n  }]);\n  return Spin;\n}(React.Component);\nSpin.defaultProps = {\n  spinning: true,\n  size: 'default',\n  wrapperClassName: ''\n};\nSpin.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  spinning: PropTypes.bool,\n  size: PropTypes.oneOf(SpinSizes),\n  wrapperClassName: PropTypes.string,\n  indicator: PropTypes.element\n};\nexport default Spin;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PropTypes","classNames","omit","debounce","ConfigConsumer","tuple","SpinSizes","defaultIndicator","renderIndicator","prefixCls","props","indicator","dotClassName","isValidElement","cloneElement","className","shouldDelay","spinning","delay","isNaN","Number","Spin","_classCallCheck","_this","debouncifyUpdateSpinning","cancelExistingSpin","updateSpinning","originalUpdateSpinning","currentSpinning","state","setState","renderSpin","getPrefixCls","customizePrefixCls","_a","size","tip","wrapperClassName","style","restProps","spinClassName","divProps","spinElement","isNestedPattern","containerClassName","key","children","shouldBeDelayed","cancel","Component","defaultProps","propTypes","string","bool","oneOf","element"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\spin\\spin\\index.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { ConfigConsumer } from '../config-provider';\nimport { tuple } from '../_util/type';\nconst SpinSizes = tuple('small', 'default', 'large');\n// Render indicator\nlet defaultIndicator = null;\nfunction renderIndicator(prefixCls, props) {\n    const { indicator } = props;\n    const dotClassName = `${prefixCls}-dot`;\n    // should not be render default indicator when indicator value is null\n    if (indicator === null) {\n        return null;\n    }\n    if (React.isValidElement(indicator)) {\n        return React.cloneElement(indicator, {\n            className: classNames(indicator.props.className, dotClassName),\n        });\n    }\n    if (React.isValidElement(defaultIndicator)) {\n        return React.cloneElement(defaultIndicator, {\n            className: classNames(defaultIndicator.props.className, dotClassName),\n        });\n    }\n    return (<span className={classNames(dotClassName, `${prefixCls}-dot-spin`)}>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n    </span>);\n}\nfunction shouldDelay(spinning, delay) {\n    return !!spinning && !!delay && !isNaN(Number(delay));\n}\nclass Spin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.debouncifyUpdateSpinning = (props) => {\n            const { delay } = props || this.props;\n            if (delay) {\n                this.cancelExistingSpin();\n                this.updateSpinning = debounce(this.originalUpdateSpinning, delay);\n            }\n        };\n        this.updateSpinning = () => {\n            const { spinning } = this.props;\n            const { spinning: currentSpinning } = this.state;\n            if (currentSpinning !== spinning) {\n                this.setState({ spinning });\n            }\n        };\n        this.renderSpin = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className, size, tip, wrapperClassName, style } = _a, restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"tip\", \"wrapperClassName\", \"style\"]);\n            const { spinning } = this.state;\n            const prefixCls = getPrefixCls('spin', customizePrefixCls);\n            const spinClassName = classNames(prefixCls, {\n                [`${prefixCls}-sm`]: size === 'small',\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-spinning`]: spinning,\n                [`${prefixCls}-show-text`]: !!tip,\n            }, className);\n            // fix https://fb.me/react-unknown-prop\n            const divProps = omit(restProps, ['spinning', 'delay', 'indicator']);\n            const spinElement = (<div {...divProps} style={style} className={spinClassName}>\n        {renderIndicator(prefixCls, this.props)}\n        {tip ? <div className={`${prefixCls}-text`}>{tip}</div> : null}\n      </div>);\n            if (this.isNestedPattern()) {\n                const containerClassName = classNames(`${prefixCls}-container`, {\n                    [`${prefixCls}-blur`]: spinning,\n                });\n                return (<div {...divProps} className={classNames(`${prefixCls}-nested-loading`, wrapperClassName)}>\n          {spinning && <div key=\"loading\">{spinElement}</div>}\n          <div className={containerClassName} key=\"container\">\n            {this.props.children}\n          </div>\n        </div>);\n            }\n            return spinElement;\n        };\n        const { spinning, delay } = props;\n        const shouldBeDelayed = shouldDelay(spinning, delay);\n        this.state = {\n            spinning: spinning && !shouldBeDelayed,\n        };\n        this.originalUpdateSpinning = this.updateSpinning;\n        this.debouncifyUpdateSpinning(props);\n    }\n    static setDefaultIndicator(indicator) {\n        defaultIndicator = indicator;\n    }\n    componentDidMount() {\n        this.updateSpinning();\n    }\n    componentDidUpdate() {\n        this.debouncifyUpdateSpinning();\n        this.updateSpinning();\n    }\n    componentWillUnmount() {\n        this.cancelExistingSpin();\n    }\n    cancelExistingSpin() {\n        const { updateSpinning } = this;\n        if (updateSpinning && updateSpinning.cancel) {\n            updateSpinning.cancel();\n        }\n    }\n    isNestedPattern() {\n        return !!(this.props && this.props.children);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSpin}</ConfigConsumer>;\n    }\n}\nSpin.defaultProps = {\n    spinning: true,\n    size: 'default',\n    wrapperClassName: '',\n};\nSpin.propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    spinning: PropTypes.bool,\n    size: PropTypes.oneOf(SpinSizes),\n    wrapperClassName: PropTypes.string,\n    indicator: PropTypes.element,\n};\nexport default Spin;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}