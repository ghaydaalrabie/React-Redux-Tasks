{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport RcCheckbox from 'rc-checkbox';\nimport shallowEqual from 'shallowequal';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nvar Checkbox = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n  function Checkbox() {\n    var _this;\n    _classCallCheck(this, Checkbox);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).apply(this, arguments));\n    _this.saveCheckbox = function (node) {\n      _this.rcCheckbox = node;\n    };\n    _this.renderCheckbox = function (_ref) {\n      var _classNames;\n      var getPrefixCls = _ref.getPrefixCls;\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        props = _assertThisInitialize.props,\n        context = _assertThisInitialize.context;\n      var customizePrefixCls = props.prefixCls,\n        className = props.className,\n        children = props.children,\n        indeterminate = props.indeterminate,\n        style = props.style,\n        onMouseEnter = props.onMouseEnter,\n        onMouseLeave = props.onMouseLeave,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"children\", \"indeterminate\", \"style\", \"onMouseEnter\", \"onMouseLeave\"]);\n      var checkboxGroup = context.checkboxGroup;\n      var prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n      var checkboxProps = _extends({}, restProps);\n      if (checkboxGroup) {\n        checkboxProps.onChange = function () {\n          if (restProps.onChange) {\n            restProps.onChange.apply(restProps, arguments);\n          }\n          checkboxGroup.toggleOption({\n            label: children,\n            value: props.value\n          });\n        };\n        checkboxProps.name = checkboxGroup.name;\n        checkboxProps.checked = checkboxGroup.value.indexOf(props.value) !== -1;\n        checkboxProps.disabled = props.disabled || checkboxGroup.disabled;\n      }\n      var classString = classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-wrapper\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-wrapper-checked\"), checkboxProps.checked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-wrapper-disabled\"), checkboxProps.disabled), _classNames));\n      var checkboxClass = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-indeterminate\"), indeterminate));\n      return (\n        // eslint-disable-next-line jsx-a11y/label-has-associated-control\n        React.createElement(\"label\", {\n          className: classString,\n          style: style,\n          onMouseEnter: onMouseEnter,\n          onMouseLeave: onMouseLeave\n        }, React.createElement(RcCheckbox, _extends({}, checkboxProps, {\n          prefixCls: prefixCls,\n          className: checkboxClass,\n          ref: _this.saveCheckbox\n        })), children !== undefined && React.createElement(\"span\", null, children))\n      );\n    };\n    return _this;\n  }\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var value = this.props.value;\n      var _ref2 = this.context || {},\n        _ref2$checkboxGroup = _ref2.checkboxGroup,\n        checkboxGroup = _ref2$checkboxGroup === void 0 ? {} : _ref2$checkboxGroup;\n      if (checkboxGroup.registerValue) {\n        checkboxGroup.registerValue(value);\n      }\n      warning('checked' in this.props || (this.context || {}).checkboxGroup || !('value' in this.props), 'Checkbox', '`value` is not validate prop, do you mean `checked`?');\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState) || !shallowEqual(this.context.checkboxGroup, nextContext.checkboxGroup);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref3) {\n      var prevValue = _ref3.value;\n      var value = this.props.value;\n      var _ref4 = this.context || {},\n        _ref4$checkboxGroup = _ref4.checkboxGroup,\n        checkboxGroup = _ref4$checkboxGroup === void 0 ? {} : _ref4$checkboxGroup;\n      if (value !== prevValue && checkboxGroup.registerValue && checkboxGroup.cancelValue) {\n        checkboxGroup.cancelValue(prevValue);\n        checkboxGroup.registerValue(value);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var value = this.props.value;\n      var _ref5 = this.context || {},\n        _ref5$checkboxGroup = _ref5.checkboxGroup,\n        checkboxGroup = _ref5$checkboxGroup === void 0 ? {} : _ref5$checkboxGroup;\n      if (checkboxGroup.cancelValue) {\n        checkboxGroup.cancelValue(value);\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.rcCheckbox.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.rcCheckbox.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderCheckbox);\n    }\n  }]);\n  return Checkbox;\n}(React.Component);\nCheckbox.__ANT_CHECKBOX = true;\nCheckbox.defaultProps = {\n  indeterminate: false\n};\nCheckbox.contextTypes = {\n  checkboxGroup: PropTypes.any\n};\npolyfill(Checkbox);\nexport default Checkbox;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PropTypes","polyfill","classNames","RcCheckbox","shallowEqual","ConfigConsumer","warning","Checkbox","_classCallCheck","_this","arguments","saveCheckbox","node","rcCheckbox","renderCheckbox","getPrefixCls","props","context","customizePrefixCls","prefixCls","className","children","indeterminate","style","onMouseEnter","onMouseLeave","restProps","checkboxGroup","checkboxProps","_extends","onChange","toggleOption","label","value","name","checked","disabled","classString","checkboxClass","ref","undefined","_ref2$checkboxGroup","registerValue","nextProps","nextState","nextContext","state","prevValue","_ref4$checkboxGroup","cancelValue","_ref5$checkboxGroup","focus","blur","Component","__ANT_CHECKBOX","defaultProps","contextTypes","any"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\checkbox\\checkbox\\Checkbox.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport RcCheckbox from 'rc-checkbox';\nimport shallowEqual from 'shallowequal';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nclass Checkbox extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.saveCheckbox = (node) => {\n            this.rcCheckbox = node;\n        };\n        this.renderCheckbox = ({ getPrefixCls }) => {\n            const { props, context } = this;\n            const { prefixCls: customizePrefixCls, className, children, indeterminate, style, onMouseEnter, onMouseLeave } = props, restProps = __rest(props, [\"prefixCls\", \"className\", \"children\", \"indeterminate\", \"style\", \"onMouseEnter\", \"onMouseLeave\"]);\n            const { checkboxGroup } = context;\n            const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n            const checkboxProps = Object.assign({}, restProps);\n            if (checkboxGroup) {\n                checkboxProps.onChange = (...args) => {\n                    if (restProps.onChange) {\n                        restProps.onChange(...args);\n                    }\n                    checkboxGroup.toggleOption({ label: children, value: props.value });\n                };\n                checkboxProps.name = checkboxGroup.name;\n                checkboxProps.checked = checkboxGroup.value.indexOf(props.value) !== -1;\n                checkboxProps.disabled = props.disabled || checkboxGroup.disabled;\n            }\n            const classString = classNames(className, {\n                [`${prefixCls}-wrapper`]: true,\n                [`${prefixCls}-wrapper-checked`]: checkboxProps.checked,\n                [`${prefixCls}-wrapper-disabled`]: checkboxProps.disabled,\n            });\n            const checkboxClass = classNames({\n                [`${prefixCls}-indeterminate`]: indeterminate,\n            });\n            return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label className={classString} style={style} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n        <RcCheckbox {...checkboxProps} prefixCls={prefixCls} className={checkboxClass} ref={this.saveCheckbox}/>\n        {children !== undefined && <span>{children}</span>}\n      </label>);\n        };\n    }\n    componentDidMount() {\n        const { value } = this.props;\n        const { checkboxGroup = {} } = this.context || {};\n        if (checkboxGroup.registerValue) {\n            checkboxGroup.registerValue(value);\n        }\n        warning('checked' in this.props || (this.context || {}).checkboxGroup || !('value' in this.props), 'Checkbox', '`value` is not validate prop, do you mean `checked`?');\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return (!shallowEqual(this.props, nextProps) ||\n            !shallowEqual(this.state, nextState) ||\n            !shallowEqual(this.context.checkboxGroup, nextContext.checkboxGroup));\n    }\n    componentDidUpdate({ value: prevValue }) {\n        const { value } = this.props;\n        const { checkboxGroup = {} } = this.context || {};\n        if (value !== prevValue && checkboxGroup.registerValue && checkboxGroup.cancelValue) {\n            checkboxGroup.cancelValue(prevValue);\n            checkboxGroup.registerValue(value);\n        }\n    }\n    componentWillUnmount() {\n        const { value } = this.props;\n        const { checkboxGroup = {} } = this.context || {};\n        if (checkboxGroup.cancelValue) {\n            checkboxGroup.cancelValue(value);\n        }\n    }\n    focus() {\n        this.rcCheckbox.focus();\n    }\n    blur() {\n        this.rcCheckbox.blur();\n    }\n    render() {\n        return <ConfigConsumer>{this.renderCheckbox}</ConfigConsumer>;\n    }\n}\nCheckbox.__ANT_CHECKBOX = true;\nCheckbox.defaultProps = {\n    indeterminate: false,\n};\nCheckbox.contextTypes = {\n    checkboxGroup: PropTypes.any,\n};\npolyfill(Checkbox);\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}