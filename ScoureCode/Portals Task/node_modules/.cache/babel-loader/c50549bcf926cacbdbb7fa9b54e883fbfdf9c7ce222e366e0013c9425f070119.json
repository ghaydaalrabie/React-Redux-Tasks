{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { previewImage, isImageUrl } from './utils';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\nvar UploadList = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadList, _React$Component);\n  function UploadList() {\n    var _this;\n    _classCallCheck(this, UploadList);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadList).apply(this, arguments));\n    _this.handlePreview = function (file, e) {\n      var onPreview = _this.props.onPreview;\n      if (!onPreview) {\n        return;\n      }\n      e.preventDefault();\n      return onPreview(file);\n    };\n    _this.handleDownload = function (file) {\n      var onDownload = _this.props.onDownload;\n      if (typeof onDownload === 'function') {\n        onDownload(file);\n      } else if (file.url) {\n        window.open(file.url);\n      }\n    };\n    _this.handleClose = function (file) {\n      var onRemove = _this.props.onRemove;\n      if (onRemove) {\n        onRemove(file);\n      }\n    };\n    _this.renderUploadList = function (_ref) {\n      var _classNames4;\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n        customizePrefixCls = _this$props.prefixCls,\n        _this$props$items = _this$props.items,\n        items = _this$props$items === void 0 ? [] : _this$props$items,\n        listType = _this$props.listType,\n        showPreviewIcon = _this$props.showPreviewIcon,\n        showRemoveIcon = _this$props.showRemoveIcon,\n        showDownloadIcon = _this$props.showDownloadIcon,\n        locale = _this$props.locale,\n        progressAttr = _this$props.progressAttr;\n      var prefixCls = getPrefixCls('upload', customizePrefixCls);\n      var list = items.map(function (file) {\n        var _classNames, _classNames2;\n        var progress;\n        var icon = React.createElement(Icon, {\n          type: file.status === 'uploading' ? 'loading' : 'paper-clip'\n        });\n        if (listType === 'picture' || listType === 'picture-card') {\n          if (listType === 'picture-card' && file.status === 'uploading') {\n            icon = React.createElement(\"div\", {\n              className: \"\".concat(prefixCls, \"-list-item-uploading-text\")\n            }, locale.uploading);\n          } else if (!file.thumbUrl && !file.url) {\n            icon = React.createElement(Icon, {\n              className: \"\".concat(prefixCls, \"-list-item-thumbnail\"),\n              type: \"picture\",\n              theme: \"twoTone\"\n            });\n          } else {\n            var thumbnail = isImageUrl(file) ? React.createElement(\"img\", {\n              src: file.thumbUrl || file.url,\n              alt: file.name,\n              className: \"\".concat(prefixCls, \"-list-item-image\")\n            }) : React.createElement(Icon, {\n              type: \"file\",\n              className: \"\".concat(prefixCls, \"-list-item-icon\"),\n              theme: \"twoTone\"\n            });\n            icon = React.createElement(\"a\", {\n              className: \"\".concat(prefixCls, \"-list-item-thumbnail\"),\n              onClick: function onClick(e) {\n                return _this.handlePreview(file, e);\n              },\n              href: file.url || file.thumbUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }, thumbnail);\n          }\n        }\n        if (file.status === 'uploading') {\n          // show loading icon if upload progress listener is disabled\n          var loadingProgress = 'percent' in file ? React.createElement(Progress, _extends({\n            type: \"line\"\n          }, progressAttr, {\n            percent: file.percent\n          })) : null;\n          progress = React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-list-item-progress\"),\n            key: \"progress\"\n          }, loadingProgress);\n        }\n        var infoUploadingClass = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item-\").concat(file.status), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-list-item-list-type-\").concat(listType), true), _classNames));\n        var linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n        var removeIcon = showRemoveIcon ? React.createElement(Icon, {\n          type: \"delete\",\n          title: locale.removeFile,\n          onClick: function onClick() {\n            return _this.handleClose(file);\n          }\n        }) : null;\n        var downloadIcon = showDownloadIcon && file.status === 'done' ? React.createElement(Icon, {\n          type: \"download\",\n          title: locale.downloadFile,\n          onClick: function onClick() {\n            return _this.handleDownload(file);\n          }\n        }) : null;\n        var downloadOrDelete = listType !== 'picture-card' && React.createElement(\"span\", {\n          key: \"download-delete\",\n          className: \"\".concat(prefixCls, \"-list-item-card-actions \").concat(listType === 'picture' ? 'picture' : '')\n        }, downloadIcon && React.createElement(\"a\", {\n          title: locale.downloadFile\n        }, downloadIcon), removeIcon && React.createElement(\"a\", {\n          title: locale.removeFile\n        }, removeIcon));\n        var listItemNameClass = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-list-item-name\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-list-item-name-icon-count-\").concat([downloadIcon, removeIcon].filter(function (x) {\n          return x;\n        }).length), true), _classNames2));\n        var preview = file.url ? [React.createElement(\"a\", _extends({\n          key: \"view\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: listItemNameClass,\n          title: file.name\n        }, linkProps, {\n          href: file.url,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          }\n        }), file.name), downloadOrDelete] : [React.createElement(\"span\", {\n          key: \"view\",\n          className: listItemNameClass,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          },\n          title: file.name\n        }, file.name), downloadOrDelete];\n        var style = {\n          pointerEvents: 'none',\n          opacity: 0.5\n        };\n        var previewIcon = showPreviewIcon ? React.createElement(\"a\", {\n          href: file.url || file.thumbUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: file.url || file.thumbUrl ? undefined : style,\n          onClick: function onClick(e) {\n            return _this.handlePreview(file, e);\n          },\n          title: locale.previewFile\n        }, React.createElement(Icon, {\n          type: \"eye-o\"\n        })) : null;\n        var actions = listType === 'picture-card' && file.status !== 'uploading' && React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-list-item-actions\")\n        }, previewIcon, file.status === 'done' && downloadIcon, removeIcon);\n        var message;\n        if (file.response && typeof file.response === 'string') {\n          message = file.response;\n        } else {\n          message = file.error && file.error.statusText || locale.uploadError;\n        }\n        var iconAndPreview = React.createElement(\"span\", null, icon, preview);\n        var dom = React.createElement(\"div\", {\n          className: infoUploadingClass\n        }, React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-list-item-info\")\n        }, iconAndPreview), actions, React.createElement(Animate, {\n          transitionName: \"fade\",\n          component: \"\"\n        }, progress));\n        var listContainerNameClass = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-list-picture-card-container\"), listType === 'picture-card'));\n        return React.createElement(\"div\", {\n          key: file.uid,\n          className: listContainerNameClass\n        }, file.status === 'error' ? React.createElement(Tooltip, {\n          title: message\n        }, dom) : React.createElement(\"span\", null, dom));\n      });\n      var listClassNames = classNames((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefixCls, \"-list\"), true), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-list-\").concat(listType), true), _classNames4));\n      var animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n      return React.createElement(Animate, {\n        transitionName: \"\".concat(prefixCls, \"-\").concat(animationDirection),\n        component: \"div\",\n        className: listClassNames\n      }, list);\n    };\n    return _this;\n  }\n  _createClass(UploadList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        listType = _this$props2.listType,\n        items = _this$props2.items,\n        previewFile = _this$props2.previewFile;\n      if (listType !== 'picture' && listType !== 'picture-card') {\n        return;\n      }\n      (items || []).forEach(function (file) {\n        if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) || file.thumbUrl !== undefined) {\n          return;\n        }\n        file.thumbUrl = '';\n        if (previewFile) {\n          previewFile(file.originFileObj).then(function (previewDataUrl) {\n            // Need append '' to avoid dead loop\n            file.thumbUrl = previewDataUrl || '';\n            _this2.forceUpdate();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderUploadList);\n    }\n  }]);\n  return UploadList;\n}(React.Component);\nexport { UploadList as default };\nUploadList.defaultProps = {\n  listType: 'text',\n  progressAttr: {\n    strokeWidth: 2,\n    showInfo: false\n  },\n  showRemoveIcon: true,\n  showDownloadIcon: true,\n  showPreviewIcon: true,\n  previewFile: previewImage\n};","map":{"version":3,"mappings":"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","names":["React","Animate","classNames","previewImage","isImageUrl","Icon","Tooltip","Progress","ConfigConsumer","UploadList","_classCallCheck","_this","arguments","handlePreview","file","e","onPreview","props","preventDefault","handleDownload","onDownload","url","window","open","handleClose","onRemove","renderUploadList","getPrefixCls","customizePrefixCls","prefixCls","_this$props$items","items","listType","showPreviewIcon","showRemoveIcon","showDownloadIcon","locale","progressAttr","list","map","progress","icon","type","status","className","uploading","thumbUrl","theme","thumbnail","src","alt","name","onClick","href","target","rel","loadingProgress","percent","key","infoUploadingClass","linkProps","JSON","parse","removeIcon","title","removeFile","downloadIcon","downloadFile","downloadOrDelete","listItemNameClass","filter","x","length","preview","style","pointerEvents","opacity","previewIcon","undefined","previewFile","actions","message","response","error","statusText","uploadError","iconAndPreview","dom","transitionName","component","listContainerNameClass","uid","listClassNames","animationDirection","forEach","document","FileReader","File","originFileObj","Blob","then","previewDataUrl","_this2","forceUpdate","Component","defaultProps","strokeWidth","showInfo"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\upload\\upload\\UploadList.jsx"],"sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { previewImage, isImageUrl } from './utils';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\nexport default class UploadList extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handlePreview = (file, e) => {\n            const { onPreview } = this.props;\n            if (!onPreview) {\n                return;\n            }\n            e.preventDefault();\n            return onPreview(file);\n        };\n        this.handleDownload = (file) => {\n            const { onDownload } = this.props;\n            if (typeof onDownload === 'function') {\n                onDownload(file);\n            }\n            else if (file.url) {\n                window.open(file.url);\n            }\n        };\n        this.handleClose = (file) => {\n            const { onRemove } = this.props;\n            if (onRemove) {\n                onRemove(file);\n            }\n        };\n        this.renderUploadList = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, items = [], listType, showPreviewIcon, showRemoveIcon, showDownloadIcon, locale, progressAttr, } = this.props;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const list = items.map(file => {\n                let progress;\n                let icon = <Icon type={file.status === 'uploading' ? 'loading' : 'paper-clip'}/>;\n                if (listType === 'picture' || listType === 'picture-card') {\n                    if (listType === 'picture-card' && file.status === 'uploading') {\n                        icon = <div className={`${prefixCls}-list-item-uploading-text`}>{locale.uploading}</div>;\n                    }\n                    else if (!file.thumbUrl && !file.url) {\n                        icon = (<Icon className={`${prefixCls}-list-item-thumbnail`} type=\"picture\" theme=\"twoTone\"/>);\n                    }\n                    else {\n                        const thumbnail = isImageUrl(file) ? (<img src={file.thumbUrl || file.url} alt={file.name} className={`${prefixCls}-list-item-image`}/>) : (<Icon type=\"file\" className={`${prefixCls}-list-item-icon`} theme=\"twoTone\"/>);\n                        icon = (<a className={`${prefixCls}-list-item-thumbnail`} onClick={e => this.handlePreview(file, e)} href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {thumbnail}\n            </a>);\n                    }\n                }\n                if (file.status === 'uploading') {\n                    // show loading icon if upload progress listener is disabled\n                    const loadingProgress = 'percent' in file ? (<Progress type=\"line\" {...progressAttr} percent={file.percent}/>) : null;\n                    progress = (<div className={`${prefixCls}-list-item-progress`} key=\"progress\">\n            {loadingProgress}\n          </div>);\n                }\n                const infoUploadingClass = classNames({\n                    [`${prefixCls}-list-item`]: true,\n                    [`${prefixCls}-list-item-${file.status}`]: true,\n                    [`${prefixCls}-list-item-list-type-${listType}`]: true,\n                });\n                const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n                const removeIcon = showRemoveIcon ? (<Icon type=\"delete\" title={locale.removeFile} onClick={() => this.handleClose(file)}/>) : null;\n                const downloadIcon = showDownloadIcon && file.status === 'done' ? (<Icon type=\"download\" title={locale.downloadFile} onClick={() => this.handleDownload(file)}/>) : null;\n                const downloadOrDelete = listType !== 'picture-card' && (<span key=\"download-delete\" className={`${prefixCls}-list-item-card-actions ${listType === 'picture' ? 'picture' : ''}`}>\n          {downloadIcon && <a title={locale.downloadFile}>{downloadIcon}</a>}\n          {removeIcon && <a title={locale.removeFile}>{removeIcon}</a>}\n        </span>);\n                const listItemNameClass = classNames({\n                    [`${prefixCls}-list-item-name`]: true,\n                    [`${prefixCls}-list-item-name-icon-count-${[downloadIcon, removeIcon].filter(x => x).length}`]: true,\n                });\n                const preview = file.url\n                    ? [\n                        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\" className={listItemNameClass} title={file.name} {...linkProps} href={file.url} onClick={e => this.handlePreview(file, e)}>\n              {file.name}\n            </a>,\n                        downloadOrDelete,\n                    ]\n                    : [\n                        <span key=\"view\" className={listItemNameClass} onClick={e => this.handlePreview(file, e)} title={file.name}>\n              {file.name}\n            </span>,\n                        downloadOrDelete,\n                    ];\n                const style = {\n                    pointerEvents: 'none',\n                    opacity: 0.5,\n                };\n                const previewIcon = showPreviewIcon ? (<a href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={file.url || file.thumbUrl ? undefined : style} onClick={e => this.handlePreview(file, e)} title={locale.previewFile}>\n          <Icon type=\"eye-o\"/>\n        </a>) : null;\n                const actions = listType === 'picture-card' && file.status !== 'uploading' && (<span className={`${prefixCls}-list-item-actions`}>\n          {previewIcon}\n          {file.status === 'done' && downloadIcon}\n          {removeIcon}\n        </span>);\n                let message;\n                if (file.response && typeof file.response === 'string') {\n                    message = file.response;\n                }\n                else {\n                    message = (file.error && file.error.statusText) || locale.uploadError;\n                }\n                const iconAndPreview = (<span>\n          {icon}\n          {preview}\n        </span>);\n                const dom = (<div className={infoUploadingClass}>\n          <div className={`${prefixCls}-list-item-info`}>{iconAndPreview}</div>\n          {actions}\n          <Animate transitionName=\"fade\" component=\"\">\n            {progress}\n          </Animate>\n        </div>);\n                const listContainerNameClass = classNames({\n                    [`${prefixCls}-list-picture-card-container`]: listType === 'picture-card',\n                });\n                return (<div key={file.uid} className={listContainerNameClass}>\n          {file.status === 'error' ? <Tooltip title={message}>{dom}</Tooltip> : <span>{dom}</span>}\n        </div>);\n            });\n            const listClassNames = classNames({\n                [`${prefixCls}-list`]: true,\n                [`${prefixCls}-list-${listType}`]: true,\n            });\n            const animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n            return (<Animate transitionName={`${prefixCls}-${animationDirection}`} component=\"div\" className={listClassNames}>\n        {list}\n      </Animate>);\n        };\n    }\n    componentDidUpdate() {\n        const { listType, items, previewFile } = this.props;\n        if (listType !== 'picture' && listType !== 'picture-card') {\n            return;\n        }\n        (items || []).forEach(file => {\n            if (typeof document === 'undefined' ||\n                typeof window === 'undefined' ||\n                !window.FileReader ||\n                !window.File ||\n                !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) ||\n                file.thumbUrl !== undefined) {\n                return;\n            }\n            file.thumbUrl = '';\n            if (previewFile) {\n                previewFile(file.originFileObj).then((previewDataUrl) => {\n                    // Need append '' to avoid dead loop\n                    file.thumbUrl = previewDataUrl || '';\n                    this.forceUpdate();\n                });\n            }\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUploadList}</ConfigConsumer>;\n    }\n}\nUploadList.defaultProps = {\n    listType: 'text',\n    progressAttr: {\n        strokeWidth: 2,\n        showInfo: false,\n    },\n    showRemoveIcon: true,\n    showDownloadIcon: true,\n    showPreviewIcon: true,\n    previewFile: previewImage,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}