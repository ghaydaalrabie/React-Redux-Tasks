{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/button-has-type */\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport omit from 'omit.js';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport Wave from '../_util/wave';\nimport { tuple } from '../_util/type';\nvar rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nvar isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nfunction isString(str) {\n  return typeof str === 'string';\n} // Insert one space between two chinese characters automatically.\n\nfunction insertSpace(child, needInserted) {\n  // Check the child if is undefined or null.\n  if (child == null) {\n    return;\n  }\n  var SPACE = needInserted ? ' ' : ''; // strictNullChecks oops.\n\n  if (typeof child !== 'string' && typeof child !== 'number' && isString(child.type) && isTwoCNChar(child.props.children)) {\n    return React.cloneElement(child, {}, child.props.children.split('').join(SPACE));\n  }\n  if (typeof child === 'string') {\n    if (isTwoCNChar(child)) {\n      child = child.split('').join(SPACE);\n    }\n    return React.createElement(\"span\", null, child);\n  }\n  return child;\n}\nfunction spaceChildren(children, needInserted) {\n  var isPrevChildPure = false;\n  var childList = [];\n  React.Children.forEach(children, function (child) {\n    var type = _typeof(child);\n    var isCurrentChildPure = type === 'string' || type === 'number';\n    if (isPrevChildPure && isCurrentChildPure) {\n      var lastIndex = childList.length - 1;\n      var lastChild = childList[lastIndex];\n      childList[lastIndex] = \"\".concat(lastChild).concat(child);\n    } else {\n      childList.push(child);\n    }\n    isPrevChildPure = isCurrentChildPure;\n  }); // Pass to React.Children.map to auto fill key\n\n  return React.Children.map(childList, function (child) {\n    return insertSpace(child, needInserted);\n  });\n}\nvar ButtonTypes = tuple('default', 'primary', 'ghost', 'dashed', 'danger', 'link');\nvar ButtonShapes = tuple('circle', 'circle-outline', 'round');\nvar ButtonSizes = tuple('large', 'default', 'small');\nvar ButtonHTMLTypes = tuple('submit', 'button', 'reset');\nvar Button = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Button, _React$Component);\n  function Button(props) {\n    var _this;\n    _classCallCheck(this, Button);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Button).call(this, props));\n    _this.saveButtonRef = function (node) {\n      _this.buttonNode = node;\n    };\n    _this.handleClick = function (e) {\n      var loading = _this.state.loading;\n      var onClick = _this.props.onClick;\n      if (loading) {\n        return;\n      }\n      if (onClick) {\n        onClick(e);\n      }\n    };\n    _this.renderButton = function (_ref) {\n      var _classNames;\n      var getPrefixCls = _ref.getPrefixCls,\n        autoInsertSpaceInButton = _ref.autoInsertSpaceInButton;\n      var _a = _this.props,\n        customizePrefixCls = _a.prefixCls,\n        type = _a.type,\n        shape = _a.shape,\n        size = _a.size,\n        className = _a.className,\n        children = _a.children,\n        icon = _a.icon,\n        ghost = _a.ghost,\n        block = _a.block,\n        rest = __rest(_a, [\"prefixCls\", \"type\", \"shape\", \"size\", \"className\", \"children\", \"icon\", \"ghost\", \"block\"]);\n      var _this$state = _this.state,\n        loading = _this$state.loading,\n        hasTwoCNChar = _this$state.hasTwoCNChar;\n      var prefixCls = getPrefixCls('btn', customizePrefixCls);\n      var autoInsertSpace = autoInsertSpaceInButton !== false; // large => lg\n      // small => sm\n\n      var sizeCls = '';\n      switch (size) {\n        case 'large':\n          sizeCls = 'lg';\n          break;\n        case 'small':\n          sizeCls = 'sm';\n          break;\n        default:\n          break;\n      }\n      var iconType = loading ? 'loading' : icon;\n      var classes = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(shape), shape), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(sizeCls), sizeCls), _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-only\"), !children && children !== 0 && iconType), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), !!loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-background-ghost\"), ghost), _defineProperty(_classNames, \"\".concat(prefixCls, \"-two-chinese-chars\"), hasTwoCNChar && autoInsertSpace), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block\"), block), _classNames));\n      var iconNode = iconType ? React.createElement(Icon, {\n        type: iconType\n      }) : null;\n      var kids = children || children === 0 ? spaceChildren(children, _this.isNeedInserted() && autoInsertSpace) : null;\n      var linkButtonRestProps = omit(rest, ['htmlType', 'loading']);\n      if (linkButtonRestProps.href !== undefined) {\n        return React.createElement(\"a\", _extends({}, linkButtonRestProps, {\n          className: classes,\n          onClick: _this.handleClick,\n          ref: _this.saveButtonRef\n        }), iconNode, kids);\n      } // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.\n\n      var _b = rest,\n        htmlType = _b.htmlType,\n        otherProps = __rest(_b, [\"htmlType\"]);\n      var buttonNode = React.createElement(\"button\", _extends({}, omit(otherProps, ['loading']), {\n        type: htmlType,\n        className: classes,\n        onClick: _this.handleClick,\n        ref: _this.saveButtonRef\n      }), iconNode, kids);\n      if (type === 'link') {\n        return buttonNode;\n      }\n      return React.createElement(Wave, null, buttonNode);\n    };\n    _this.state = {\n      loading: props.loading,\n      hasTwoCNChar: false\n    };\n    return _this;\n  }\n  _createClass(Button, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fixTwoCNChar();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      this.fixTwoCNChar();\n      if (prevProps.loading && typeof prevProps.loading !== 'boolean') {\n        clearTimeout(this.delayTimeout);\n      }\n      var loading = this.props.loading;\n      if (loading && typeof loading !== 'boolean' && loading.delay) {\n        this.delayTimeout = window.setTimeout(function () {\n          _this2.setState({\n            loading: loading\n          });\n        }, loading.delay);\n      } else if (prevProps.loading !== loading) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          loading: loading\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.delayTimeout) {\n        clearTimeout(this.delayTimeout);\n      }\n    }\n  }, {\n    key: \"fixTwoCNChar\",\n    value: function fixTwoCNChar() {\n      // Fix for HOC usage like <FormatMessage />\n      if (!this.buttonNode) {\n        return;\n      }\n      var buttonText = this.buttonNode.textContent || this.buttonNode.innerText;\n      if (this.isNeedInserted() && isTwoCNChar(buttonText)) {\n        if (!this.state.hasTwoCNChar) {\n          this.setState({\n            hasTwoCNChar: true\n          });\n        }\n      } else if (this.state.hasTwoCNChar) {\n        this.setState({\n          hasTwoCNChar: false\n        });\n      }\n    }\n  }, {\n    key: \"isNeedInserted\",\n    value: function isNeedInserted() {\n      var _this$props = this.props,\n        icon = _this$props.icon,\n        children = _this$props.children,\n        type = _this$props.type;\n      return React.Children.count(children) === 1 && !icon && type !== 'link';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderButton);\n    }\n  }]);\n  return Button;\n}(React.Component);\nButton.__ANT_BUTTON = true;\nButton.defaultProps = {\n  loading: false,\n  ghost: false,\n  block: false,\n  htmlType: 'button'\n};\nButton.propTypes = {\n  type: PropTypes.string,\n  shape: PropTypes.oneOf(ButtonShapes),\n  size: PropTypes.oneOf(ButtonSizes),\n  htmlType: PropTypes.oneOf(ButtonHTMLTypes),\n  onClick: PropTypes.func,\n  loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  className: PropTypes.string,\n  icon: PropTypes.string,\n  block: PropTypes.bool,\n  title: PropTypes.string\n};\npolyfill(Button);\nexport default Button;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PropTypes","classNames","polyfill","omit","Icon","ConfigConsumer","Wave","tuple","rxTwoCNChar","isTwoCNChar","test","bind","isString","str","insertSpace","child","needInserted","SPACE","type","props","children","cloneElement","split","join","spaceChildren","isPrevChildPure","childList","Children","forEach","isCurrentChildPure","lastIndex","lastChild","push","map","ButtonTypes","ButtonShapes","ButtonSizes","ButtonHTMLTypes","Button","_classCallCheck","_this","saveButtonRef","node","buttonNode","handleClick","loading","state","onClick","renderButton","getPrefixCls","autoInsertSpaceInButton","customizePrefixCls","_a","prefixCls","shape","size","className","icon","ghost","block","rest","hasTwoCNChar","autoInsertSpace","sizeCls","iconType","classes","iconNode","kids","isNeedInserted","linkButtonRestProps","href","undefined","ref","htmlType","_b","otherProps","fixTwoCNChar","prevProps","clearTimeout","delayTimeout","delay","window","setTimeout","_this2","setState","buttonText","textContent","innerText","count","Component","__ANT_BUTTON","defaultProps","propTypes","string","oneOf","func","oneOfType","bool","object","title"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\button\\button\\button.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable react/button-has-type */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport omit from 'omit.js';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport Wave from '../_util/wave';\nimport { tuple } from '../_util/type';\nconst rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nconst isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nfunction isString(str) {\n    return typeof str === 'string';\n}\n// Insert one space between two chinese characters automatically.\nfunction insertSpace(child, needInserted) {\n    // Check the child if is undefined or null.\n    if (child == null) {\n        return;\n    }\n    const SPACE = needInserted ? ' ' : '';\n    // strictNullChecks oops.\n    if (typeof child !== 'string' &&\n        typeof child !== 'number' &&\n        isString(child.type) &&\n        isTwoCNChar(child.props.children)) {\n        return React.cloneElement(child, {}, child.props.children.split('').join(SPACE));\n    }\n    if (typeof child === 'string') {\n        if (isTwoCNChar(child)) {\n            child = child.split('').join(SPACE);\n        }\n        return <span>{child}</span>;\n    }\n    return child;\n}\nfunction spaceChildren(children, needInserted) {\n    let isPrevChildPure = false;\n    const childList = [];\n    React.Children.forEach(children, child => {\n        const type = typeof child;\n        const isCurrentChildPure = type === 'string' || type === 'number';\n        if (isPrevChildPure && isCurrentChildPure) {\n            const lastIndex = childList.length - 1;\n            const lastChild = childList[lastIndex];\n            childList[lastIndex] = `${lastChild}${child}`;\n        }\n        else {\n            childList.push(child);\n        }\n        isPrevChildPure = isCurrentChildPure;\n    });\n    // Pass to React.Children.map to auto fill key\n    return React.Children.map(childList, child => insertSpace(child, needInserted));\n}\nconst ButtonTypes = tuple('default', 'primary', 'ghost', 'dashed', 'danger', 'link');\nconst ButtonShapes = tuple('circle', 'circle-outline', 'round');\nconst ButtonSizes = tuple('large', 'default', 'small');\nconst ButtonHTMLTypes = tuple('submit', 'button', 'reset');\nclass Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveButtonRef = (node) => {\n            this.buttonNode = node;\n        };\n        this.handleClick = e => {\n            const { loading } = this.state;\n            const { onClick } = this.props;\n            if (loading) {\n                return;\n            }\n            if (onClick) {\n                onClick(e);\n            }\n        };\n        this.renderButton = ({ getPrefixCls, autoInsertSpaceInButton }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, type, shape, size, className, children, icon, ghost, block } = _a, rest = __rest(_a, [\"prefixCls\", \"type\", \"shape\", \"size\", \"className\", \"children\", \"icon\", \"ghost\", \"block\"]);\n            const { loading, hasTwoCNChar } = this.state;\n            const prefixCls = getPrefixCls('btn', customizePrefixCls);\n            const autoInsertSpace = autoInsertSpaceInButton !== false;\n            // large => lg\n            // small => sm\n            let sizeCls = '';\n            switch (size) {\n                case 'large':\n                    sizeCls = 'lg';\n                    break;\n                case 'small':\n                    sizeCls = 'sm';\n                    break;\n                default:\n                    break;\n            }\n            const iconType = loading ? 'loading' : icon;\n            const classes = classNames(prefixCls, className, {\n                [`${prefixCls}-${type}`]: type,\n                [`${prefixCls}-${shape}`]: shape,\n                [`${prefixCls}-${sizeCls}`]: sizeCls,\n                [`${prefixCls}-icon-only`]: !children && children !== 0 && iconType,\n                [`${prefixCls}-loading`]: !!loading,\n                [`${prefixCls}-background-ghost`]: ghost,\n                [`${prefixCls}-two-chinese-chars`]: hasTwoCNChar && autoInsertSpace,\n                [`${prefixCls}-block`]: block,\n            });\n            const iconNode = iconType ? <Icon type={iconType}/> : null;\n            const kids = children || children === 0\n                ? spaceChildren(children, this.isNeedInserted() && autoInsertSpace)\n                : null;\n            const linkButtonRestProps = omit(rest, ['htmlType', 'loading']);\n            if (linkButtonRestProps.href !== undefined) {\n                return (<a {...linkButtonRestProps} className={classes} onClick={this.handleClick} ref={this.saveButtonRef}>\n          {iconNode}\n          {kids}\n        </a>);\n            }\n            // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.\n            const _b = rest, { htmlType } = _b, otherProps = __rest(_b, [\"htmlType\"]);\n            const buttonNode = (<button {...omit(otherProps, ['loading'])} type={htmlType} className={classes} onClick={this.handleClick} ref={this.saveButtonRef}>\n        {iconNode}\n        {kids}\n      </button>);\n            if (type === 'link') {\n                return buttonNode;\n            }\n            return <Wave>{buttonNode}</Wave>;\n        };\n        this.state = {\n            loading: props.loading,\n            hasTwoCNChar: false,\n        };\n    }\n    componentDidMount() {\n        this.fixTwoCNChar();\n    }\n    componentDidUpdate(prevProps) {\n        this.fixTwoCNChar();\n        if (prevProps.loading && typeof prevProps.loading !== 'boolean') {\n            clearTimeout(this.delayTimeout);\n        }\n        const { loading } = this.props;\n        if (loading && typeof loading !== 'boolean' && loading.delay) {\n            this.delayTimeout = window.setTimeout(() => {\n                this.setState({ loading });\n            }, loading.delay);\n        }\n        else if (prevProps.loading !== loading) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ loading });\n        }\n    }\n    componentWillUnmount() {\n        if (this.delayTimeout) {\n            clearTimeout(this.delayTimeout);\n        }\n    }\n    fixTwoCNChar() {\n        // Fix for HOC usage like <FormatMessage />\n        if (!this.buttonNode) {\n            return;\n        }\n        const buttonText = this.buttonNode.textContent || this.buttonNode.innerText;\n        if (this.isNeedInserted() && isTwoCNChar(buttonText)) {\n            if (!this.state.hasTwoCNChar) {\n                this.setState({\n                    hasTwoCNChar: true,\n                });\n            }\n        }\n        else if (this.state.hasTwoCNChar) {\n            this.setState({\n                hasTwoCNChar: false,\n            });\n        }\n    }\n    isNeedInserted() {\n        const { icon, children, type } = this.props;\n        return React.Children.count(children) === 1 && !icon && type !== 'link';\n    }\n    render() {\n        return <ConfigConsumer>{this.renderButton}</ConfigConsumer>;\n    }\n}\nButton.__ANT_BUTTON = true;\nButton.defaultProps = {\n    loading: false,\n    ghost: false,\n    block: false,\n    htmlType: 'button',\n};\nButton.propTypes = {\n    type: PropTypes.string,\n    shape: PropTypes.oneOf(ButtonShapes),\n    size: PropTypes.oneOf(ButtonSizes),\n    htmlType: PropTypes.oneOf(ButtonHTMLTypes),\n    onClick: PropTypes.func,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    className: PropTypes.string,\n    icon: PropTypes.string,\n    block: PropTypes.bool,\n    title: PropTypes.string,\n};\npolyfill(Button);\nexport default Button;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}