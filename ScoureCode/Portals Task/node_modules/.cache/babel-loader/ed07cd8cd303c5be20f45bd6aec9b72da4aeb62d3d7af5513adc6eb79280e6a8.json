{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nvar Col = function Col(props) {\n  var _classNames;\n  var child = props.child,\n    bordered = props.bordered,\n    colon = props.colon,\n    type = props.type,\n    layout = props.layout;\n  var _child$props = child.props,\n    prefixCls = _child$props.prefixCls,\n    label = _child$props.label,\n    className = _child$props.className,\n    children = _child$props.children,\n    _child$props$span = _child$props.span,\n    span = _child$props$span === void 0 ? 1 : _child$props$span;\n  var labelProps = {\n    className: classNames(\"\".concat(prefixCls, \"-item-label\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-colon\"), colon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-no-label\"), !label), _classNames)),\n    key: 'label'\n  };\n  if (layout === 'vertical') {\n    labelProps.colSpan = span * 2 - 1;\n  }\n  if (bordered) {\n    if (type === 'label') {\n      return React.createElement(\"th\", labelProps, label);\n    }\n    return React.createElement(\"td\", {\n      className: classNames(\"\".concat(prefixCls, \"-item-content\"), className),\n      key: \"content\",\n      colSpan: span * 2 - 1\n    }, children);\n  }\n  if (layout === 'vertical') {\n    if (type === 'content') {\n      return React.createElement(\"td\", {\n        colSpan: span,\n        className: classNames(\"\".concat(prefixCls, \"-item\"), className)\n      }, React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-item-content\"),\n        key: \"content\"\n      }, children));\n    }\n    return React.createElement(\"td\", {\n      colSpan: span,\n      className: classNames(\"\".concat(prefixCls, \"-item\"), className)\n    }, React.createElement(\"span\", {\n      className: classNames(\"\".concat(prefixCls, \"-item-label\"), _defineProperty({}, \"\".concat(prefixCls, \"-item-colon\"), colon)),\n      key: \"label\"\n    }, label));\n  }\n  return React.createElement(\"td\", {\n    colSpan: span,\n    className: classNames(\"\".concat(prefixCls, \"-item\"), className)\n  }, React.createElement(\"span\", labelProps, label), React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-item-content\"),\n    key: \"content\"\n  }, children));\n};\nexport default Col;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,MAAK,EAAI;EAAA;EAAA,IACTC,KADS,GACgCC,KADhC,CACTD,KADS;IACFE,QADE,GACgCD,KADhC,CACFC,QADE;IACQC,KADR,GACgCF,KADhC,CACQE,KADR;IACeC,IADf,GACgCH,KADhC,CACeG,IADf;IACqBC,MADrB,GACgCJ,KADhC,CACqBI,MADrB;EAAA,mBAE2CL,KAAK,CAACC,KAFjD;IAETK,SAFS,gBAETA,SAFS;IAEEC,KAFF,gBAEEA,KAFF;IAESC,SAFT,gBAESA,SAFT;IAEoBC,QAFpB,gBAEoBA,QAFpB;IAAAC,iCAE8BC,IAF9B;IAE8BA,IAF9B,kCAEqC,CAFrC;EAGjB,IAAMC,UAAU,GAAG;IACfJ,SAAS,EAAEV,UAAU,WAAIQ,SAAJ,4EACbA,SADa,kBACYH,KADZ,0CAEbG,SAFa,qBAEe,CAACC,KAFhB,gBADN;IAKfM,GAAG,EAAE;EALU,CAAnB;EAOA,IAAIR,MAAM,KAAK,UAAf,EAA2B;IACvBO,UAAU,CAACE,OAAX,GAAqBH,IAAI,GAAG,CAAP,GAAW,CAAhC;EACH;EACD,IAAIT,QAAJ,EAAc;IACV,IAAIE,IAAI,KAAK,OAAb,EAAsB;MAClB,OAAOP,0BAAQe,UAAR,EAAqBL,KAArB,CAAP;IACH;IACD,OAAQV;MAAIW,SAAS,EAAEV,UAAU,WAAIQ,SAAJ,oBAA8BE,SAA9B,CAAzB;MAAmEK,GAAG,EAAC,SAAvE;MAAiFC,OAAO,EAAEH,IAAI,GAAG,CAAP,GAAW;IAArG,GACPF,QADO,CAAR;EAGH;EACD,IAAIJ,MAAM,KAAK,UAAf,EAA2B;IACvB,IAAID,IAAI,KAAK,SAAb,EAAwB;MACpB,OAAQP;QAAIiB,OAAO,EAAEH,IAAb;QAAmBH,SAAS,EAAEV,UAAU,WAAIQ,SAAJ,YAAsBE,SAAtB;MAAxC,GACVX;QAAMW,SAAS,YAAKF,SAAL,kBAAf;QAA8CO,GAAG,EAAC;MAAlD,GACGJ,QADH,CADU,CAAR;IAKH;IACD,OAAQZ;MAAIiB,OAAO,EAAEH,IAAb;MAAmBH,SAAS,EAAEV,UAAU,WAAIQ,SAAJ,YAAsBE,SAAtB;IAAxC,GACRX;MAAMW,SAAS,EAAEV,UAAU,WAAIQ,SAAJ,gDAAkCA,SAAlC,kBAA2DH,KAA3D,EAA3B;MAAgGU,GAAG,EAAC;IAApG,GACGN,KADH,CADQ,CAAR;EAKH;EACD,OAAQV;IAAIiB,OAAO,EAAEH,IAAb;IAAmBH,SAAS,EAAEV,UAAU,WAAIQ,SAAJ,YAAsBE,SAAtB;EAAxC,GACNX,4BAAUe,UAAV,EAAuBL,KAAvB,CADM,EAENV;IAAMW,SAAS,YAAKF,SAAL,kBAAf;IAA8CO,GAAG,EAAC;EAAlD,GACGJ,QADH,CAFM,CAAR;AAMH,CAzCD;AA0CA,eAAeV,GAAf","names":["React","classNames","Col","child","props","bordered","colon","type","layout","prefixCls","label","className","children","_child$props$span","span","labelProps","key","colSpan"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\descriptions\\descriptions\\Col.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nconst Col = props => {\n    const { child, bordered, colon, type, layout } = props;\n    const { prefixCls, label, className, children, span = 1 } = child.props;\n    const labelProps = {\n        className: classNames(`${prefixCls}-item-label`, {\n            [`${prefixCls}-item-colon`]: colon,\n            [`${prefixCls}-item-no-label`]: !label,\n        }),\n        key: 'label',\n    };\n    if (layout === 'vertical') {\n        labelProps.colSpan = span * 2 - 1;\n    }\n    if (bordered) {\n        if (type === 'label') {\n            return <th {...labelProps}>{label}</th>;\n        }\n        return (<td className={classNames(`${prefixCls}-item-content`, className)} key=\"content\" colSpan={span * 2 - 1}>\n        {children}\n      </td>);\n    }\n    if (layout === 'vertical') {\n        if (type === 'content') {\n            return (<td colSpan={span} className={classNames(`${prefixCls}-item`, className)}>\n          <span className={`${prefixCls}-item-content`} key=\"content\">\n            {children}\n          </span>\n        </td>);\n        }\n        return (<td colSpan={span} className={classNames(`${prefixCls}-item`, className)}>\n        <span className={classNames(`${prefixCls}-item-label`, { [`${prefixCls}-item-colon`]: colon })} key=\"label\">\n          {label}\n        </span>\n      </td>);\n    }\n    return (<td colSpan={span} className={classNames(`${prefixCls}-item`, className)}>\n      <span {...labelProps}>{label}</span>\n      <span className={`${prefixCls}-item-content`} key=\"content\">\n        {children}\n      </span>\n    </td>);\n};\nexport default Col;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}