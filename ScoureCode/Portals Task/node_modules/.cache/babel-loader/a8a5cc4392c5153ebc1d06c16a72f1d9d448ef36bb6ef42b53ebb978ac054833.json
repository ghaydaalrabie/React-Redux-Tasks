{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Animate from 'rc-animate';\nimport raf from '../_util/raf';\nimport { tuple } from '../_util/type';\nimport ListItem from './ListItem';\nexport var OmitProps = tuple('handleFilter', 'handleSelect', 'handleSelectAll', 'handleClear', 'body', 'checkedKeys');\nvar ListBody = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListBody, _React$Component);\n  function ListBody() {\n    var _this;\n    _classCallCheck(this, ListBody);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListBody).apply(this, arguments));\n    _this.state = {\n      mounted: false\n    };\n    _this.onItemSelect = function (item) {\n      var _this$props = _this.props,\n        onItemSelect = _this$props.onItemSelect,\n        selectedKeys = _this$props.selectedKeys;\n      var checked = selectedKeys.indexOf(item.key) >= 0;\n      onItemSelect(item.key, !checked);\n    };\n    return _this;\n  }\n  _createClass(ListBody, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.mountId = raf(function () {\n        _this2.setState({\n          mounted: true\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n        filteredRenderItems = _this$props2.filteredRenderItems,\n        lazy = _this$props2.lazy;\n      if (prevProps.filteredRenderItems.length !== filteredRenderItems.length && lazy !== false) {\n        // TODO: Replace this with ref when react 15 support removed.\n        var container = findDOMNode(this);\n        raf.cancel(this.lazyId);\n        this.lazyId = raf(function () {\n          if (container) {\n            var scrollEvent = new Event('scroll', {\n              bubbles: true\n            });\n            container.dispatchEvent(scrollEvent);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      raf.cancel(this.mountId);\n      raf.cancel(this.lazyId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var mounted = this.state.mounted;\n      var _this$props3 = this.props,\n        prefixCls = _this$props3.prefixCls,\n        onScroll = _this$props3.onScroll,\n        filteredRenderItems = _this$props3.filteredRenderItems,\n        lazy = _this$props3.lazy,\n        selectedKeys = _this$props3.selectedKeys,\n        globalDisabled = _this$props3.disabled;\n      return React.createElement(Animate, {\n        component: \"ul\",\n        componentProps: {\n          onScroll: onScroll\n        },\n        className: \"\".concat(prefixCls, \"-content\"),\n        transitionName: mounted ? \"\".concat(prefixCls, \"-content-item-highlight\") : '',\n        transitionLeave: false\n      }, filteredRenderItems.map(function (_ref) {\n        var renderedEl = _ref.renderedEl,\n          renderedText = _ref.renderedText,\n          item = _ref.item;\n        var disabled = item.disabled;\n        var checked = selectedKeys.indexOf(item.key) >= 0;\n        return React.createElement(ListItem, {\n          disabled: globalDisabled || disabled,\n          key: item.key,\n          item: item,\n          lazy: lazy,\n          renderedText: renderedText,\n          renderedEl: renderedEl,\n          checked: checked,\n          prefixCls: prefixCls,\n          onClick: _this3.onItemSelect\n        });\n      }));\n    }\n  }]);\n  return ListBody;\n}(React.Component);\nvar ListBodyWrapper = function ListBodyWrapper(props) {\n  return React.createElement(ListBody, props);\n};\nexport default ListBodyWrapper;","map":{"version":3,"mappings":"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","names":["React","findDOMNode","Animate","raf","tuple","ListItem","OmitProps","ListBody","_classCallCheck","_this","arguments","state","mounted","onItemSelect","item","props","selectedKeys","checked","indexOf","key","mountId","_this2","setState","prevProps","filteredRenderItems","lazy","length","container","cancel","lazyId","scrollEvent","Event","bubbles","dispatchEvent","prefixCls","onScroll","globalDisabled","disabled","component","componentProps","className","transitionName","transitionLeave","map","renderedEl","renderedText","onClick","_this3","Component","ListBodyWrapper"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\transfer\\transfer\\renderListBody.jsx"],"sourcesContent":["import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Animate from 'rc-animate';\nimport raf from '../_util/raf';\nimport { tuple } from '../_util/type';\nimport ListItem from './ListItem';\nexport const OmitProps = tuple('handleFilter', 'handleSelect', 'handleSelectAll', 'handleClear', 'body', 'checkedKeys');\nclass ListBody extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            mounted: false,\n        };\n        this.onItemSelect = (item) => {\n            const { onItemSelect, selectedKeys } = this.props;\n            const checked = selectedKeys.indexOf(item.key) >= 0;\n            onItemSelect(item.key, !checked);\n        };\n    }\n    componentDidMount() {\n        this.mountId = raf(() => {\n            this.setState({ mounted: true });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { filteredRenderItems, lazy } = this.props;\n        if (prevProps.filteredRenderItems.length !== filteredRenderItems.length && lazy !== false) {\n            // TODO: Replace this with ref when react 15 support removed.\n            const container = findDOMNode(this);\n            raf.cancel(this.lazyId);\n            this.lazyId = raf(() => {\n                if (container) {\n                    const scrollEvent = new Event('scroll', { bubbles: true });\n                    container.dispatchEvent(scrollEvent);\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        raf.cancel(this.mountId);\n        raf.cancel(this.lazyId);\n    }\n    render() {\n        const { mounted } = this.state;\n        const { prefixCls, onScroll, filteredRenderItems, lazy, selectedKeys, disabled: globalDisabled, } = this.props;\n        return (<Animate component=\"ul\" componentProps={{ onScroll }} className={`${prefixCls}-content`} transitionName={mounted ? `${prefixCls}-content-item-highlight` : ''} transitionLeave={false}>\n        {filteredRenderItems.map(({ renderedEl, renderedText, item }) => {\n            const { disabled } = item;\n            const checked = selectedKeys.indexOf(item.key) >= 0;\n            return (<ListItem disabled={globalDisabled || disabled} key={item.key} item={item} lazy={lazy} renderedText={renderedText} renderedEl={renderedEl} checked={checked} prefixCls={prefixCls} onClick={this.onItemSelect}/>);\n        })}\n      </Animate>);\n    }\n}\nconst ListBodyWrapper = (props) => <ListBody {...props}/>;\nexport default ListBodyWrapper;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}