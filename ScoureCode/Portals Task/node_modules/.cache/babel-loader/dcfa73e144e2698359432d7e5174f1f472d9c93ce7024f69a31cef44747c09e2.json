{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from '../_util/warning';\nimport ResponsiveObserve, { responsiveArray } from '../_util/responsiveObserve';\nimport { ConfigConsumer } from '../config-provider';\nimport Col from './Col'; // https://github.com/smooth-code/react-flatten-children/\n\nfunction flattenChildren(children) {\n  if (!children) {\n    return [];\n  }\n  return toArray(children).reduce(function (flatChildren, child) {\n    if (child && child.type === React.Fragment) {\n      return flatChildren.concat(flattenChildren(child.props.children));\n    }\n    flatChildren.push(child);\n    return flatChildren;\n  }, []);\n}\nvar DescriptionsItem = function DescriptionsItem(_ref) {\n  var children = _ref.children;\n  return children;\n};\n/**\n * Convert children into `column` groups.\n * @param children: DescriptionsItem\n * @param column: number\n */\n\nvar generateChildrenRows = function generateChildrenRows(children, column) {\n  var rows = [];\n  var columns = null;\n  var leftSpans;\n  var itemNodes = flattenChildren(children);\n  itemNodes.forEach(function (node, index) {\n    var itemNode = node;\n    if (!columns) {\n      leftSpans = column;\n      columns = [];\n      rows.push(columns);\n    } // Always set last span to align the end of Descriptions\n\n    var lastItem = index === itemNodes.length - 1;\n    var lastSpanSame = true;\n    if (lastItem) {\n      lastSpanSame = !itemNode.props.span || itemNode.props.span === leftSpans;\n      itemNode = React.cloneElement(itemNode, {\n        span: leftSpans\n      });\n    } // Calculate left fill span\n\n    var _itemNode$props$span = itemNode.props.span,\n      span = _itemNode$props$span === void 0 ? 1 : _itemNode$props$span;\n    columns.push(itemNode);\n    leftSpans -= span;\n    if (leftSpans <= 0) {\n      columns = null;\n      warning(leftSpans === 0 && lastSpanSame, 'Descriptions', 'Sum of column `span` in a line exceeds `column` of Descriptions.');\n    }\n  });\n  return rows;\n};\nvar renderRow = function renderRow(children, index, _ref2, bordered, layout, colon) {\n  var prefixCls = _ref2.prefixCls;\n  var renderCol = function renderCol(colItem, type, idx) {\n    return React.createElement(Col, {\n      child: colItem,\n      bordered: bordered,\n      colon: colon,\n      type: type,\n      key: \"\".concat(type, \"-\").concat(colItem.key || idx),\n      layout: layout\n    });\n  };\n  var cloneChildren = [];\n  var cloneContentChildren = [];\n  flattenChildren(children).forEach(function (childrenItem, idx) {\n    cloneChildren.push(renderCol(childrenItem, 'label', idx));\n    if (layout === 'vertical') {\n      cloneContentChildren.push(renderCol(childrenItem, 'content', idx));\n    } else if (bordered) {\n      cloneChildren.push(renderCol(childrenItem, 'content', idx));\n    }\n  });\n  if (layout === 'vertical') {\n    return [React.createElement(\"tr\", {\n      className: \"\".concat(prefixCls, \"-row\"),\n      key: \"label-\".concat(index)\n    }, cloneChildren), React.createElement(\"tr\", {\n      className: \"\".concat(prefixCls, \"-row\"),\n      key: \"content-\".concat(index)\n    }, cloneContentChildren)];\n  }\n  return React.createElement(\"tr\", {\n    className: \"\".concat(prefixCls, \"-row\"),\n    key: index\n  }, cloneChildren);\n};\nvar defaultColumnMap = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\nvar Descriptions = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Descriptions, _React$Component);\n  function Descriptions() {\n    var _this;\n    _classCallCheck(this, Descriptions);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Descriptions).apply(this, arguments));\n    _this.state = {\n      screens: {}\n    };\n    return _this;\n  }\n  _createClass(Descriptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      var column = this.props.column;\n      this.token = ResponsiveObserve.subscribe(function (screens) {\n        if (_typeof(column) !== 'object') {\n          return;\n        }\n        _this2.setState({\n          screens: screens\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ResponsiveObserve.unsubscribe(this.token);\n    }\n  }, {\n    key: \"getColumn\",\n    value: function getColumn() {\n      var column = this.props.column;\n      if (_typeof(column) === 'object') {\n        for (var i = 0; i < responsiveArray.length; i++) {\n          var breakpoint = responsiveArray[i];\n          if (this.state.screens[breakpoint] && column[breakpoint] !== undefined) {\n            return column[breakpoint] || defaultColumnMap[breakpoint];\n          }\n        }\n      } // If the configuration is not an object, it is a number, return number\n\n      if (typeof column === 'number') {\n        return column;\n      } // If it is an object, but no response is found, this happens only in the test.\n      // Maybe there are some strange environments\n\n      return 3;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return React.createElement(ConfigConsumer, null, function (_ref3) {\n        var _classNames;\n        var getPrefixCls = _ref3.getPrefixCls;\n        var _this3$props = _this3.props,\n          className = _this3$props.className,\n          customizePrefixCls = _this3$props.prefixCls,\n          title = _this3$props.title,\n          size = _this3$props.size,\n          children = _this3$props.children,\n          _this3$props$bordered = _this3$props.bordered,\n          bordered = _this3$props$bordered === void 0 ? false : _this3$props$bordered,\n          _this3$props$layout = _this3$props.layout,\n          layout = _this3$props$layout === void 0 ? 'horizontal' : _this3$props$layout,\n          _this3$props$colon = _this3$props.colon,\n          colon = _this3$props$colon === void 0 ? true : _this3$props$colon,\n          style = _this3$props.style;\n        var prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n        var column = _this3.getColumn();\n        var cloneChildren = flattenChildren(children).map(function (child) {\n          if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n              prefixCls: prefixCls\n            });\n          }\n          return null;\n        }).filter(function (node) {\n          return node;\n        });\n        var childrenArray = generateChildrenRows(cloneChildren, column);\n        return React.createElement(\"div\", {\n          className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size !== 'default'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-bordered\"), !!bordered), _classNames)),\n          style: style\n        }, title && React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-title\")\n        }, title), React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-view\")\n        }, React.createElement(\"table\", null, React.createElement(\"tbody\", null, childrenArray.map(function (child, index) {\n          return renderRow(child, index, {\n            prefixCls: prefixCls\n          }, bordered, layout, colon);\n        })))));\n      });\n    }\n  }]);\n  return Descriptions;\n}(React.Component);\nDescriptions.defaultProps = {\n  size: 'default',\n  column: defaultColumnMap\n};\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,iBAAP,IAA4BC,eAA5B,QAAoD,4BAApD;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;EAC/B,IAAI,CAACA,QAAL,EAAe;IACX,OAAO,EAAP;EACH;EACD,OAAOP,OAAO,CAACO,QAAD,CAAP,CAAkBC,MAAlB,CAAyB,UAACC,YAAD,EAAeC,KAAf,EAAyB;IACrD,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeb,KAAK,CAACc,QAAlC,EAA4C;MACxC,OAAOH,YAAY,CAACI,MAAb,CAAoBP,eAAe,CAACI,KAAK,CAACI,KAAN,CAAYP,QAAb,CAAnC,CAAP;IACH;IACDE,YAAY,CAACM,IAAb,CAAkBL,KAAlB;IACA,OAAOD,YAAP;EACH,CANM,EAMJ,EANI,CAAP;AAOH;AACD,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB;EAAA,IAAGT,QAAH,QAAGA,QAAH;EAAA,OAAkBA,QAAlB;AAAA,CAAzB;AACA;;;;;;AAKA,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACV,QAAD,EAAWW,MAAX,EAAsB;EAC/C,IAAMC,IAAI,GAAG,EAAb;EACA,IAAIC,OAAO,GAAG,IAAd;EACA,IAAIC,SAAJ;EACA,IAAMC,SAAS,GAAGhB,eAAe,CAACC,QAAD,CAAjC;EACAe,SAAS,CAACC,OAAV,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;IAC/B,IAAIC,QAAQ,GAAGF,IAAf;IACA,IAAI,CAACJ,OAAL,EAAc;MACVC,SAAS,GAAGH,MAAZ;MACAE,OAAO,GAAG,EAAV;MACAD,IAAI,CAACJ,IAAL,CAAUK,OAAV;IACH,CAN8B,CAO/B;;IACA,IAAMO,QAAQ,GAAGF,KAAK,KAAKH,SAAS,CAACM,MAAV,GAAmB,CAA9C;IACA,IAAIC,YAAY,GAAG,IAAnB;IACA,IAAIF,QAAJ,EAAc;MACVE,YAAY,GAAG,CAACH,QAAQ,CAACZ,KAAT,CAAegB,IAAhB,IAAwBJ,QAAQ,CAACZ,KAAT,CAAegB,IAAf,KAAwBT,SAA/D;MACAK,QAAQ,GAAG5B,KAAK,CAACiC,YAAN,CAAmBL,QAAnB,EAA6B;QACpCI,IAAI,EAAET;MAD8B,CAA7B,CAAX;IAGH,CAf8B,CAgB/B;;IAhB+B,2BAiBVK,QAAQ,CAACZ,KAjBC,CAiBvBgB,IAjBuB;MAiBvBA,IAjBuB,qCAiBhB,CAjBgB;IAkB/BV,OAAO,CAACL,IAAR,CAAaW,QAAb;IACAL,SAAS,IAAIS,IAAb;IACA,IAAIT,SAAS,IAAI,CAAjB,EAAoB;MAChBD,OAAO,GAAG,IAAV;MACAnB,OAAO,CAACoB,SAAS,KAAK,CAAd,IAAmBQ,YAApB,EAAkC,cAAlC,EAAkD,kEAAlD,CAAP;IACH;EACJ,CAxBD;EAyBA,OAAOV,IAAP;AACH,CA/BD;AAgCA,IAAMa,SAAS,GAAG,SAAZA,SAAY,CAACzB,QAAD,EAAWkB,KAAX,SAAiCQ,QAAjC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA6D;EAAA,IAAzCC,SAAyC,SAAzCA,SAAyC;EAC3E,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAU3B,IAAV,EAAgB4B,GAAhB,EAAwB;IACtC,OAAQzC,oBAACO,GAAD;MAAKK,KAAK,EAAE4B,OAAZ;MAAqBL,QAAQ,EAAEA,QAA/B;MAAyCE,KAAK,EAAEA,KAAhD;MAAuDxB,IAAI,EAAEA,IAA7D;MAAmE6B,GAAG,YAAK7B,IAAL,cAAa2B,OAAO,CAACE,GAAR,IAAeD,GAA5B,CAAtE;MAAyGL,MAAM,EAAEA;IAAjH,EAAR;EACH,CAFD;EAGA,IAAMO,aAAa,GAAG,EAAtB;EACA,IAAMC,oBAAoB,GAAG,EAA7B;EACApC,eAAe,CAACC,QAAD,CAAf,CAA0BgB,OAA1B,CAAkC,UAACoB,YAAD,EAAeJ,GAAf,EAAuB;IACrDE,aAAa,CAAC1B,IAAd,CAAmBsB,SAAS,CAACM,YAAD,EAAe,OAAf,EAAwBJ,GAAxB,CAA5B;IACA,IAAIL,MAAM,KAAK,UAAf,EAA2B;MACvBQ,oBAAoB,CAAC3B,IAArB,CAA0BsB,SAAS,CAACM,YAAD,EAAe,SAAf,EAA0BJ,GAA1B,CAAnC;IACH,CAFD,MAGK,IAAIN,QAAJ,EAAc;MACfQ,aAAa,CAAC1B,IAAd,CAAmBsB,SAAS,CAACM,YAAD,EAAe,SAAf,EAA0BJ,GAA1B,CAA5B;IACH;EACJ,CARD;EASA,IAAIL,MAAM,KAAK,UAAf,EAA2B;IACvB,OAAO,CACHpC;MAAI8C,SAAS,YAAKR,SAAL,SAAb;MAAmCI,GAAG,kBAAWf,KAAX;IAAtC,GACHgB,aADG,CADG,EAIH3C;MAAI8C,SAAS,YAAKR,SAAL,SAAb;MAAmCI,GAAG,oBAAaf,KAAb;IAAtC,GACHiB,oBADG,CAJG,CAAP;EAQH;EACD,OAAQ5C;IAAI8C,SAAS,YAAKR,SAAL,SAAb;IAAmCI,GAAG,EAAEf;EAAxC,GACLgB,aADK,CAAR;AAGH,CA5BD;AA6BA,IAAMI,gBAAgB,GAAG;EACrBC,GAAG,EAAE,CADgB;EAErBC,EAAE,EAAE,CAFiB;EAGrBC,EAAE,EAAE,CAHiB;EAIrBC,EAAE,EAAE,CAJiB;EAKrBC,EAAE,EAAE,CALiB;EAMrBC,EAAE,EAAE;AANiB,CAAzB;IAQMC,Y;;;EACF,wBAAc;IAAA;IAAAC;IACVC,mFAASC,SAAT;IACAD,MAAKE,KAAL,GAAa;MACTC,OAAO,EAAE;IADA,CAAb;IAFU;EAKb;;;wCACmB;MAAA;MAAA,IACRvC,MADQ,GACG,KAAKJ,KADR,CACRI,MADQ;MAEhB,KAAKwC,KAAL,GAAaxD,iBAAiB,CAACyD,SAAlB,CAA4B,iBAAO,EAAI;QAChD,IAAIC,QAAO1C,MAAP,MAAkB,QAAtB,EAAgC;UAC5B;QACH;QACD2C,MAAI,CAACC,QAAL,CAAc;UACVL,OAAO,EAAPA;QADU,CAAd;MAGH,CAPY,CAAb;IAQH;;;2CACsB;MACnBvD,iBAAiB,CAAC6D,WAAlB,CAA8B,KAAKL,KAAnC;IACH;;;gCACW;MAAA,IACAxC,MADA,GACW,KAAKJ,KADhB,CACAI,MADA;MAER,IAAI0C,QAAO1C,MAAP,MAAkB,QAAtB,EAAgC;QAC5B,KAAK,IAAI8C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7D,eAAe,CAACyB,MAApC,EAA4CoC,CAAC,EAA7C,EAAiD;UAC7C,IAAMC,UAAU,GAAG9D,eAAe,CAAC6D,CAAD,CAAlC;UACA,IAAI,KAAKR,KAAL,CAAWC,OAAX,CAAmBQ,UAAnB,KAAkC/C,MAAM,CAAC+C,UAAD,CAAN,KAAuBC,SAA7D,EAAwE;YACpE,OAAOhD,MAAM,CAAC+C,UAAD,CAAN,IAAsBpB,gBAAgB,CAACoB,UAAD,CAA7C;UACH;QACJ;MACJ,CATO,CAUR;;MACA,IAAI,OAAO/C,MAAP,KAAkB,QAAtB,EAAgC;QAC5B,OAAOA,MAAP;MACH,CAbO,CAcR;MACA;;MACA,OAAO,CAAP;IACH;;;6BACQ;MAAA;MACL,OAAQpB,oBAACM,cAAD,QACP,iBAAsB;QAAA;QAAA,IAAnB+D,YAAmB,SAAnBA,YAAmB;QAAA,mBACwHC,MAAI,CAACtD,KAD7H;UACX8B,SADW,gBACXA,SADW;UACWyB,kBADX,gBACAjC,SADA;UAC+BkC,KAD/B,gBAC+BA,KAD/B;UACsCC,IADtC,gBACsCA,IADtC;UAC4ChE,QAD5C,gBAC4CA,QAD5C;UAAAiE,qCACsDvC,QADtD;UACsDA,QADtD,sCACiE,KADjE;UAAAwC,mCACwEvC,MADxE;UACwEA,MADxE,oCACiF,YADjF;UAAAwC,kCAC+FvC,KAD/F;UAC+FA,KAD/F,mCACuG,IADvG;UAC6GwC,KAD7G,gBAC6GA,KAD7G;QAEnB,IAAMvC,SAAS,GAAG+B,YAAY,CAAC,cAAD,EAAiBE,kBAAjB,CAA9B;QACA,IAAMnD,MAAM,GAAGkD,MAAI,CAACQ,SAAL,EAAf;QACA,IAAMnC,aAAa,GAAGnC,eAAe,CAACC,QAAD,CAAf,CACjBsE,GADiB,CACb,UAACnE,KAAD,EAAW;UAChB,IAAIZ,KAAK,CAACgF,cAAN,CAAqBpE,KAArB,CAAJ,EAAiC;YAC7B,OAAOZ,KAAK,CAACiC,YAAN,CAAmBrB,KAAnB,EAA0B;cAC7B0B,SAAS,EAATA;YAD6B,CAA1B,CAAP;UAGH;UACD,OAAO,IAAP;QACH,CARqB,EASjB2C,MATiB,CASV,UAACvD,IAAD;UAAA,OAAUA,IAAV;QAAA,CATU,CAAtB;QAUA,IAAMwD,aAAa,GAAG/D,oBAAoB,CAACwB,aAAD,EAAgBvB,MAAhB,CAA1C;QACA,OAAQpB;UAAK8C,SAAS,EAAE7C,UAAU,CAACqC,SAAD,EAAYQ,SAAZ,4DAC1BR,SAD0B,cACbmC,IADa,GACJA,IAAI,KAAK,SADL,0CAE1BnC,SAF0B,gBAEH,CAAC,CAACH,QAFC,gBAA1B;UAGJ0C,KAAK,EAAEA;QAHH,GAILL,KAAK,IAAIxE;UAAK8C,SAAS,YAAKR,SAAL;QAAd,GAAuCkC,KAAvC,CAJJ,EAKNxE;UAAK8C,SAAS,YAAKR,SAAL;QAAd,GACEtC,mCACEA,mCACGkF,aAAa,CAACH,GAAd,CAAkB,UAACnE,KAAD,EAAQe,KAAR;UAAA,OAAkBO,SAAS,CAACtB,KAAD,EAAQe,KAAR,EAAe;YACjEW,SAAS,EAATA;UADiE,CAAf,EAEnDH,QAFmD,EAEzCC,MAFyC,EAEjCC,KAFiC,CAA3B;QAAA,CAAlB,CADH,CADF,CADF,CALM,CAAR;MAeH,CA/BO,CAAR;IAiCH;;;EAzEsBrC,KAAK,CAACmF,S;AA2EjC7B,YAAY,CAAC8B,YAAb,GAA4B;EACxBX,IAAI,EAAE,SADkB;EAExBrD,MAAM,EAAE2B;AAFgB,CAA5B;AAIAO,YAAY,CAAC+B,IAAb,GAAoBnE,gBAApB;AACA,eAAeoC,YAAf","names":["React","classNames","toArray","warning","ResponsiveObserve","responsiveArray","ConfigConsumer","Col","flattenChildren","children","reduce","flatChildren","child","type","Fragment","concat","props","push","DescriptionsItem","generateChildrenRows","column","rows","columns","leftSpans","itemNodes","forEach","node","index","itemNode","lastItem","length","lastSpanSame","span","cloneElement","renderRow","bordered","layout","colon","prefixCls","renderCol","colItem","idx","key","cloneChildren","cloneContentChildren","childrenItem","className","defaultColumnMap","xxl","xl","lg","md","sm","xs","Descriptions","_classCallCheck","_this","arguments","state","screens","token","subscribe","_typeof","_this2","setState","unsubscribe","i","breakpoint","undefined","getPrefixCls","_this3","customizePrefixCls","title","size","_this3$props$bordered","_this3$props$layout","_this3$props$colon","style","getColumn","map","isValidElement","filter","childrenArray","Component","defaultProps","Item"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\descriptions\\descriptions\\index.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport warning from '../_util/warning';\nimport ResponsiveObserve, { responsiveArray, } from '../_util/responsiveObserve';\nimport { ConfigConsumer } from '../config-provider';\nimport Col from './Col';\n// https://github.com/smooth-code/react-flatten-children/\nfunction flattenChildren(children) {\n    if (!children) {\n        return [];\n    }\n    return toArray(children).reduce((flatChildren, child) => {\n        if (child && child.type === React.Fragment) {\n            return flatChildren.concat(flattenChildren(child.props.children));\n        }\n        flatChildren.push(child);\n        return flatChildren;\n    }, []);\n}\nconst DescriptionsItem = ({ children }) => children;\n/**\n * Convert children into `column` groups.\n * @param children: DescriptionsItem\n * @param column: number\n */\nconst generateChildrenRows = (children, column) => {\n    const rows = [];\n    let columns = null;\n    let leftSpans;\n    const itemNodes = flattenChildren(children);\n    itemNodes.forEach((node, index) => {\n        let itemNode = node;\n        if (!columns) {\n            leftSpans = column;\n            columns = [];\n            rows.push(columns);\n        }\n        // Always set last span to align the end of Descriptions\n        const lastItem = index === itemNodes.length - 1;\n        let lastSpanSame = true;\n        if (lastItem) {\n            lastSpanSame = !itemNode.props.span || itemNode.props.span === leftSpans;\n            itemNode = React.cloneElement(itemNode, {\n                span: leftSpans,\n            });\n        }\n        // Calculate left fill span\n        const { span = 1 } = itemNode.props;\n        columns.push(itemNode);\n        leftSpans -= span;\n        if (leftSpans <= 0) {\n            columns = null;\n            warning(leftSpans === 0 && lastSpanSame, 'Descriptions', 'Sum of column `span` in a line exceeds `column` of Descriptions.');\n        }\n    });\n    return rows;\n};\nconst renderRow = (children, index, { prefixCls }, bordered, layout, colon) => {\n    const renderCol = (colItem, type, idx) => {\n        return (<Col child={colItem} bordered={bordered} colon={colon} type={type} key={`${type}-${colItem.key || idx}`} layout={layout}/>);\n    };\n    const cloneChildren = [];\n    const cloneContentChildren = [];\n    flattenChildren(children).forEach((childrenItem, idx) => {\n        cloneChildren.push(renderCol(childrenItem, 'label', idx));\n        if (layout === 'vertical') {\n            cloneContentChildren.push(renderCol(childrenItem, 'content', idx));\n        }\n        else if (bordered) {\n            cloneChildren.push(renderCol(childrenItem, 'content', idx));\n        }\n    });\n    if (layout === 'vertical') {\n        return [\n            <tr className={`${prefixCls}-row`} key={`label-${index}`}>\n        {cloneChildren}\n      </tr>,\n            <tr className={`${prefixCls}-row`} key={`content-${index}`}>\n        {cloneContentChildren}\n      </tr>,\n        ];\n    }\n    return (<tr className={`${prefixCls}-row`} key={index}>\n      {cloneChildren}\n    </tr>);\n};\nconst defaultColumnMap = {\n    xxl: 3,\n    xl: 3,\n    lg: 3,\n    md: 3,\n    sm: 2,\n    xs: 1,\n};\nclass Descriptions extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            screens: {},\n        };\n    }\n    componentDidMount() {\n        const { column } = this.props;\n        this.token = ResponsiveObserve.subscribe(screens => {\n            if (typeof column !== 'object') {\n                return;\n            }\n            this.setState({\n                screens,\n            });\n        });\n    }\n    componentWillUnmount() {\n        ResponsiveObserve.unsubscribe(this.token);\n    }\n    getColumn() {\n        const { column } = this.props;\n        if (typeof column === 'object') {\n            for (let i = 0; i < responsiveArray.length; i++) {\n                const breakpoint = responsiveArray[i];\n                if (this.state.screens[breakpoint] && column[breakpoint] !== undefined) {\n                    return column[breakpoint] || defaultColumnMap[breakpoint];\n                }\n            }\n        }\n        // If the configuration is not an object, it is a number, return number\n        if (typeof column === 'number') {\n            return column;\n        }\n        // If it is an object, but no response is found, this happens only in the test.\n        // Maybe there are some strange environments\n        return 3;\n    }\n    render() {\n        return (<ConfigConsumer>\n        {({ getPrefixCls }) => {\n            const { className, prefixCls: customizePrefixCls, title, size, children, bordered = false, layout = 'horizontal', colon = true, style, } = this.props;\n            const prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n            const column = this.getColumn();\n            const cloneChildren = flattenChildren(children)\n                .map((child) => {\n                if (React.isValidElement(child)) {\n                    return React.cloneElement(child, {\n                        prefixCls,\n                    });\n                }\n                return null;\n            })\n                .filter((node) => node);\n            const childrenArray = generateChildrenRows(cloneChildren, column);\n            return (<div className={classNames(prefixCls, className, {\n                [`${prefixCls}-${size}`]: size !== 'default',\n                [`${prefixCls}-bordered`]: !!bordered,\n            })} style={style}>\n              {title && <div className={`${prefixCls}-title`}>{title}</div>}\n              <div className={`${prefixCls}-view`}>\n                <table>\n                  <tbody>\n                    {childrenArray.map((child, index) => renderRow(child, index, {\n                prefixCls,\n            }, bordered, layout, colon))}\n                  </tbody>\n                </table>\n              </div>\n            </div>);\n        }}\n      </ConfigConsumer>);\n    }\n}\nDescriptions.defaultProps = {\n    size: 'default',\n    column: defaultColumnMap,\n};\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}