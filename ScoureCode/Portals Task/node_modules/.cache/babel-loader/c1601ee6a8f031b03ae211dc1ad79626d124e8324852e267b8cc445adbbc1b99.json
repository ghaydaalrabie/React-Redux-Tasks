{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent, convertTreeToEntities } from \"rc-tree/es/util\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ConfigConsumer } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, getFullKeyList, convertDirectoryKeysToNodes, getFullKeyListByTreeData } from './util';\nimport Icon from '../icon';\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n    expanded = props.expanded;\n  if (isLeaf) {\n    return React.createElement(Icon, {\n      type: \"file\"\n    });\n  }\n  return React.createElement(Icon, {\n    type: expanded ? 'folder-open' : 'folder'\n  });\n}\nvar DirectoryTree = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DirectoryTree, _React$Component);\n  function DirectoryTree(props) {\n    var _this;\n    _classCallCheck(this, DirectoryTree);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DirectoryTree).call(this, props));\n    _this.onExpand = function (expandedKeys, info) {\n      var onExpand = _this.props.onExpand;\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys\n      }); // Call origin function\n\n      if (onExpand) {\n        return onExpand(expandedKeys, info);\n      }\n      return undefined;\n    };\n    _this.onClick = function (event, node) {\n      var _this$props = _this.props,\n        onClick = _this$props.onClick,\n        expandAction = _this$props.expandAction; // Expand the tree\n\n      if (expandAction === 'click') {\n        _this.onDebounceExpand(event, node);\n      }\n      if (onClick) {\n        onClick(event, node);\n      }\n    };\n    _this.onDoubleClick = function (event, node) {\n      var _this$props2 = _this.props,\n        onDoubleClick = _this$props2.onDoubleClick,\n        expandAction = _this$props2.expandAction; // Expand the tree\n\n      if (expandAction === 'doubleClick') {\n        _this.onDebounceExpand(event, node);\n      }\n      if (onDoubleClick) {\n        onDoubleClick(event, node);\n      }\n    };\n    _this.onSelect = function (keys, event) {\n      var _this$props3 = _this.props,\n        onSelect = _this$props3.onSelect,\n        multiple = _this$props3.multiple,\n        children = _this$props3.children;\n      var _this$state$expandedK = _this.state.expandedKeys,\n        expandedKeys = _this$state$expandedK === void 0 ? [] : _this$state$expandedK;\n      var node = event.node,\n        nativeEvent = event.nativeEvent;\n      var _node$props$eventKey = node.props.eventKey,\n        eventKey = _node$props$eventKey === void 0 ? '' : _node$props$eventKey;\n      var newState = {}; // We need wrap this event since some value is not same\n\n      var newEvent = _extends(_extends({}, event), {\n        selected: true\n      }); // Windows / Mac single pick\n\n      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n      var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n      var newSelectedKeys;\n      if (multiple && ctrlPick) {\n        // Control click\n        newSelectedKeys = keys;\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else if (multiple && shiftPick) {\n        // Shift click\n        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(_this.cachedSelectedKeys || []), _toConsumableArray(calcRangeKeys(children, expandedKeys, eventKey, _this.lastSelectedKey)))));\n        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n      } else {\n        // Single click\n        newSelectedKeys = [eventKey];\n        _this.lastSelectedKey = eventKey;\n        _this.cachedSelectedKeys = newSelectedKeys;\n        newEvent.selectedNodes = [event.node];\n      }\n      newState.selectedKeys = newSelectedKeys;\n      if (onSelect) {\n        onSelect(newSelectedKeys, newEvent);\n      }\n      _this.setUncontrolledState(newState);\n    };\n    _this.setTreeRef = function (node) {\n      _this.tree = node;\n    };\n    _this.expandFolderNode = function (event, node) {\n      var isLeaf = node.props.isLeaf;\n      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n        return;\n      } // Get internal rc-tree\n\n      var internalTree = _this.tree.tree; // Call internal rc-tree expand function\n      // https://github.com/ant-design/ant-design/issues/12567\n\n      internalTree.onNodeExpand(event, node);\n    };\n    _this.setUncontrolledState = function (state) {\n      var newState = omit(state, Object.keys(_this.props));\n      if (Object.keys(newState).length) {\n        _this.setState(newState);\n      }\n    };\n    _this.renderDirectoryTree = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _a = _this.props,\n        customizePrefixCls = _a.prefixCls,\n        className = _a.className,\n        props = __rest(_a, [\"prefixCls\", \"className\"]);\n      var _this$state = _this.state,\n        expandedKeys = _this$state.expandedKeys,\n        selectedKeys = _this$state.selectedKeys;\n      var prefixCls = getPrefixCls('tree', customizePrefixCls);\n      var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), className);\n      return React.createElement(Tree, _extends({\n        icon: getIcon,\n        ref: _this.setTreeRef\n      }, props, {\n        prefixCls: prefixCls,\n        className: connectClassName,\n        expandedKeys: expandedKeys,\n        selectedKeys: selectedKeys,\n        onSelect: _this.onSelect,\n        onClick: _this.onClick,\n        onDoubleClick: _this.onDoubleClick,\n        onExpand: _this.onExpand\n      }));\n    };\n    var defaultExpandAll = props.defaultExpandAll,\n      defaultExpandParent = props.defaultExpandParent,\n      expandedKeys = props.expandedKeys,\n      defaultExpandedKeys = props.defaultExpandedKeys,\n      children = props.children;\n    var _convertTreeToEntitie = convertTreeToEntities(children),\n      keyEntities = _convertTreeToEntitie.keyEntities; // Selected keys\n\n    _this.state = {\n      selectedKeys: props.selectedKeys || props.defaultSelectedKeys || []\n    }; // Expanded keys\n\n    if (defaultExpandAll) {\n      if (props.treeData) {\n        _this.state.expandedKeys = getFullKeyListByTreeData(props.treeData);\n      } else {\n        _this.state.expandedKeys = getFullKeyList(props.children);\n      }\n    } else if (defaultExpandParent) {\n      _this.state.expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      _this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n    }\n    _this.onDebounceExpand = debounce(_this.expandFolderNode, 200, {\n      leading: true\n    });\n    return _this;\n  }\n  _createClass(DirectoryTree, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderDirectoryTree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var newState = {};\n      if ('expandedKeys' in nextProps) {\n        newState.expandedKeys = nextProps.expandedKeys;\n      }\n      if ('selectedKeys' in nextProps) {\n        newState.selectedKeys = nextProps.selectedKeys;\n      }\n      return newState;\n    }\n  }]);\n  return DirectoryTree;\n}(React.Component);\nDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\npolyfill(DirectoryTree);\nexport default DirectoryTree;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","omit","debounce","conductExpandParent","convertTreeToEntities","polyfill","ConfigConsumer","Tree","calcRangeKeys","getFullKeyList","convertDirectoryKeysToNodes","getFullKeyListByTreeData","Icon","getIcon","props","isLeaf","expanded","type","DirectoryTree","_classCallCheck","_this","onExpand","expandedKeys","info","setUncontrolledState","undefined","onClick","event","node","expandAction","onDebounceExpand","onDoubleClick","onSelect","keys","multiple","children","state","nativeEvent","eventKey","newState","newEvent","_extends","selected","ctrlPick","ctrlKey","metaKey","shiftPick","shiftKey","newSelectedKeys","lastSelectedKey","cachedSelectedKeys","selectedNodes","Array","from","Set","selectedKeys","setTreeRef","tree","expandFolderNode","internalTree","onNodeExpand","setState","renderDirectoryTree","getPrefixCls","customizePrefixCls","_a","prefixCls","className","connectClassName","icon","ref","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","keyEntities","defaultSelectedKeys","treeData","leading","nextProps","Component","defaultProps","showIcon"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\tree\\tree\\DirectoryTree.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent, convertTreeToEntities } from 'rc-tree/lib/util';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ConfigConsumer } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, getFullKeyList, convertDirectoryKeysToNodes, getFullKeyListByTreeData, } from './util';\nimport Icon from '../icon';\nfunction getIcon(props) {\n    const { isLeaf, expanded } = props;\n    if (isLeaf) {\n        return <Icon type=\"file\"/>;\n    }\n    return <Icon type={expanded ? 'folder-open' : 'folder'}/>;\n}\nclass DirectoryTree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onExpand = (expandedKeys, info) => {\n            const { onExpand } = this.props;\n            this.setUncontrolledState({ expandedKeys });\n            // Call origin function\n            if (onExpand) {\n                return onExpand(expandedKeys, info);\n            }\n            return undefined;\n        };\n        this.onClick = (event, node) => {\n            const { onClick, expandAction } = this.props;\n            // Expand the tree\n            if (expandAction === 'click') {\n                this.onDebounceExpand(event, node);\n            }\n            if (onClick) {\n                onClick(event, node);\n            }\n        };\n        this.onDoubleClick = (event, node) => {\n            const { onDoubleClick, expandAction } = this.props;\n            // Expand the tree\n            if (expandAction === 'doubleClick') {\n                this.onDebounceExpand(event, node);\n            }\n            if (onDoubleClick) {\n                onDoubleClick(event, node);\n            }\n        };\n        this.onSelect = (keys, event) => {\n            const { onSelect, multiple, children } = this.props;\n            const { expandedKeys = [] } = this.state;\n            const { node, nativeEvent } = event;\n            const { eventKey = '' } = node.props;\n            const newState = {};\n            // We need wrap this event since some value is not same\n            const newEvent = Object.assign(Object.assign({}, event), { selected: true });\n            // Windows / Mac single pick\n            const ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n            const shiftPick = nativeEvent.shiftKey;\n            // Generate new selected keys\n            let newSelectedKeys;\n            if (multiple && ctrlPick) {\n                // Control click\n                newSelectedKeys = keys;\n                this.lastSelectedKey = eventKey;\n                this.cachedSelectedKeys = newSelectedKeys;\n                newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n            }\n            else if (multiple && shiftPick) {\n                // Shift click\n                newSelectedKeys = Array.from(new Set([\n                    ...(this.cachedSelectedKeys || []),\n                    ...calcRangeKeys(children, expandedKeys, eventKey, this.lastSelectedKey),\n                ]));\n                newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n            }\n            else {\n                // Single click\n                newSelectedKeys = [eventKey];\n                this.lastSelectedKey = eventKey;\n                this.cachedSelectedKeys = newSelectedKeys;\n                newEvent.selectedNodes = [event.node];\n            }\n            newState.selectedKeys = newSelectedKeys;\n            if (onSelect) {\n                onSelect(newSelectedKeys, newEvent);\n            }\n            this.setUncontrolledState(newState);\n        };\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.expandFolderNode = (event, node) => {\n            const { isLeaf } = node.props;\n            if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n                return;\n            }\n            // Get internal rc-tree\n            const internalTree = this.tree.tree;\n            // Call internal rc-tree expand function\n            // https://github.com/ant-design/ant-design/issues/12567\n            internalTree.onNodeExpand(event, node);\n        };\n        this.setUncontrolledState = (state) => {\n            const newState = omit(state, Object.keys(this.props));\n            if (Object.keys(newState).length) {\n                this.setState(newState);\n            }\n        };\n        this.renderDirectoryTree = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className } = _a, props = __rest(_a, [\"prefixCls\", \"className\"]);\n            const { expandedKeys, selectedKeys } = this.state;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            const connectClassName = classNames(`${prefixCls}-directory`, className);\n            return (<Tree icon={getIcon} ref={this.setTreeRef} {...props} prefixCls={prefixCls} className={connectClassName} expandedKeys={expandedKeys} selectedKeys={selectedKeys} onSelect={this.onSelect} onClick={this.onClick} onDoubleClick={this.onDoubleClick} onExpand={this.onExpand}/>);\n        };\n        const { defaultExpandAll, defaultExpandParent, expandedKeys, defaultExpandedKeys, children, } = props;\n        const { keyEntities } = convertTreeToEntities(children);\n        // Selected keys\n        this.state = {\n            selectedKeys: props.selectedKeys || props.defaultSelectedKeys || [],\n        };\n        // Expanded keys\n        if (defaultExpandAll) {\n            if (props.treeData) {\n                this.state.expandedKeys = getFullKeyListByTreeData(props.treeData);\n            }\n            else {\n                this.state.expandedKeys = getFullKeyList(props.children);\n            }\n        }\n        else if (defaultExpandParent) {\n            this.state.expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n        }\n        else {\n            this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n        }\n        this.onDebounceExpand = debounce(this.expandFolderNode, 200, {\n            leading: true,\n        });\n    }\n    static getDerivedStateFromProps(nextProps) {\n        const newState = {};\n        if ('expandedKeys' in nextProps) {\n            newState.expandedKeys = nextProps.expandedKeys;\n        }\n        if ('selectedKeys' in nextProps) {\n            newState.selectedKeys = nextProps.selectedKeys;\n        }\n        return newState;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderDirectoryTree}</ConfigConsumer>;\n    }\n}\nDirectoryTree.defaultProps = {\n    showIcon: true,\n    expandAction: 'click',\n};\npolyfill(DirectoryTree);\nexport default DirectoryTree;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}