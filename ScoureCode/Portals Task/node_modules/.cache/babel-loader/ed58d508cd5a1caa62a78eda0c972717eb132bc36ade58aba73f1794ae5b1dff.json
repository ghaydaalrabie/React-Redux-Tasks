{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PureRenderMixin from \"rc-util/es/PureRenderMixin\";\nimport Lazyload from 'react-lazy-load';\nimport Checkbox from '../checkbox';\nvar ListItem = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListItem, _React$Component);\n  function ListItem() {\n    _classCallCheck(this, ListItem);\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListItem).apply(this, arguments));\n  }\n  _createClass(ListItem, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n      var _this$props = this.props,\n        renderedText = _this$props.renderedText,\n        renderedEl = _this$props.renderedEl,\n        item = _this$props.item,\n        lazy = _this$props.lazy,\n        checked = _this$props.checked,\n        disabled = _this$props.disabled,\n        prefixCls = _this$props.prefixCls,\n        onClick = _this$props.onClick;\n      var className = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-disabled\"), disabled || item.disabled), _classNames));\n      var title;\n      if (typeof renderedText === 'string' || typeof renderedText === 'number') {\n        title = String(renderedText);\n      }\n      var listItem = React.createElement(\"li\", {\n        className: className,\n        title: title,\n        onClick: disabled || item.disabled ? undefined : function () {\n          return onClick(item);\n        }\n      }, React.createElement(Checkbox, {\n        checked: checked,\n        disabled: disabled || item.disabled\n      }), React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-content-item-text\")\n      }, renderedEl));\n      var children = null;\n      if (lazy) {\n        var lazyProps = _extends({\n          height: 32,\n          offset: 500,\n          throttle: 0,\n          debounce: false\n        }, lazy);\n        children = React.createElement(Lazyload, lazyProps, listItem);\n      } else {\n        children = listItem;\n      }\n      return children;\n    }\n  }]);\n  return ListItem;\n}(React.Component);\nexport { ListItem as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;IACqBC,Q;;;;;;;;;4CACc;MAAA,kCAANC,IAAM;QAANA,IAAM;MAAA;MAC3B,OAAOJ,eAAe,CAACK,qBAAhB,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkDF,IAAlD,CAAP;IACH;;;6BACQ;MAAA;MAAA,kBACoF,KAAKG,KADzF;QACGC,YADH,eACGA,YADH;QACiBC,UADjB,eACiBA,UADjB;QAC6BC,IAD7B,eAC6BA,IAD7B;QACmCC,IADnC,eACmCA,IADnC;QACyCC,OADzC,eACyCA,OADzC;QACkDC,QADlD,eACkDA,QADlD;QAC4DC,SAD5D,eAC4DA,SAD5D;QACuEC,OADvE,eACuEA,OADvE;MAEL,IAAMC,SAAS,GAAGjB,UAAU,2DACpBe,SADoB,oBACO,IADP,0CAEpBA,SAFoB,6BAEgBD,QAAQ,IAAIH,IAAI,CAACG,QAFjC,gBAA5B;MAIA,IAAII,KAAJ;MACA,IAAI,OAAOT,YAAP,KAAwB,QAAxB,IAAoC,OAAOA,YAAP,KAAwB,QAAhE,EAA0E;QACtES,KAAK,GAAGC,MAAM,CAACV,YAAD,CAAd;MACH;MACD,IAAMW,QAAQ,GAAIrB;QAAIkB,SAAS,EAAEA,SAAf;QAA0BC,KAAK,EAAEA,KAAjC;QAAwCF,OAAO,EAAEF,QAAQ,IAAIH,IAAI,CAACG,QAAjB,GAA4BO,SAA5B,GAAwC;UAAA,OAAML,OAAO,CAACL,IAAD,CAAb;QAAA;MAAzF,GAClBZ,oBAACI,QAAD;QAAUU,OAAO,EAAEA,OAAnB;QAA4BC,QAAQ,EAAEA,QAAQ,IAAIH,IAAI,CAACG;MAAvD,EADkB,EAElBf;QAAMkB,SAAS,YAAKF,SAAL;MAAf,GAAoDL,UAApD,CAFkB,CAAlB;MAIA,IAAIY,QAAQ,GAAG,IAAf;MACA,IAAIV,IAAJ,EAAU;QACN,IAAMW,SAAS,GAAGC,SAAc;UAAEC,MAAM,EAAE,EAAV;UAAcC,MAAM,EAAE,GAAtB;UAA2BC,QAAQ,EAAE,CAArC;UAAwCC,QAAQ,EAAE;QAAlD,CAAd,EAAyEhB,IAAzE,CAAlB;QACAU,QAAQ,GAAGvB,oBAACG,QAAD,EAAcqB,SAAd,EAA0BH,QAA1B,CAAX;MACH,CAHD,MAIK;QACDE,QAAQ,GAAGF,QAAX;MACH;MACD,OAAOE,QAAP;IACH;;;EA3BiCvB,KAAK,CAAC8B,S;SAAvBzB,Q","names":["React","classNames","PureRenderMixin","Lazyload","Checkbox","ListItem","args","shouldComponentUpdate","apply","props","renderedText","renderedEl","item","lazy","checked","disabled","prefixCls","onClick","className","title","String","listItem","undefined","children","lazyProps","_extends","height","offset","throttle","debounce","Component"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\transfer\\transfer\\ListItem.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport PureRenderMixin from 'rc-util/lib/PureRenderMixin';\nimport Lazyload from 'react-lazy-load';\nimport Checkbox from '../checkbox';\nexport default class ListItem extends React.Component {\n    shouldComponentUpdate(...args) {\n        return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n    render() {\n        const { renderedText, renderedEl, item, lazy, checked, disabled, prefixCls, onClick, } = this.props;\n        const className = classNames({\n            [`${prefixCls}-content-item`]: true,\n            [`${prefixCls}-content-item-disabled`]: disabled || item.disabled,\n        });\n        let title;\n        if (typeof renderedText === 'string' || typeof renderedText === 'number') {\n            title = String(renderedText);\n        }\n        const listItem = (<li className={className} title={title} onClick={disabled || item.disabled ? undefined : () => onClick(item)}>\n        <Checkbox checked={checked} disabled={disabled || item.disabled}/>\n        <span className={`${prefixCls}-content-item-text`}>{renderedEl}</span>\n      </li>);\n        let children = null;\n        if (lazy) {\n            const lazyProps = Object.assign({ height: 32, offset: 500, throttle: 0, debounce: false }, lazy);\n            children = <Lazyload {...lazyProps}>{listItem}</Lazyload>;\n        }\n        else {\n            children = listItem;\n        }\n        return children;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}