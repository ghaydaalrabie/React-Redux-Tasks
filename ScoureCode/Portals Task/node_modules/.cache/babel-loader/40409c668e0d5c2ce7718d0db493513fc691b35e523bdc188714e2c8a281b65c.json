{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar notificationInstance = {};\nvar defaultDuration = 4.5;\nvar defaultTop = 24;\nvar defaultBottom = 24;\nvar defaultPlacement = 'topRight';\nvar defaultGetContainer;\nvar defaultCloseIcon;\nfunction setNotificationConfig(options) {\n  var duration = options.duration,\n    placement = options.placement,\n    bottom = options.bottom,\n    top = options.top,\n    getContainer = options.getContainer,\n    closeIcon = options.closeIcon;\n  if (duration !== undefined) {\n    defaultDuration = duration;\n  }\n  if (placement !== undefined) {\n    defaultPlacement = placement;\n  }\n  if (bottom !== undefined) {\n    defaultBottom = bottom;\n  }\n  if (top !== undefined) {\n    defaultTop = top;\n  }\n  if (getContainer !== undefined) {\n    defaultGetContainer = getContainer;\n  }\n  if (closeIcon !== undefined) {\n    defaultCloseIcon = closeIcon;\n  }\n}\nfunction getPlacementStyle(placement) {\n  var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTop;\n  var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBottom;\n  var style;\n  switch (placement) {\n    case 'topLeft':\n      style = {\n        left: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n    case 'topRight':\n      style = {\n        right: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n  }\n  return style;\n}\nfunction getNotificationInstance(_ref, callback) {\n  var prefixCls = _ref.prefixCls,\n    _ref$placement = _ref.placement,\n    placement = _ref$placement === void 0 ? defaultPlacement : _ref$placement,\n    _ref$getContainer = _ref.getContainer,\n    getContainer = _ref$getContainer === void 0 ? defaultGetContainer : _ref$getContainer,\n    top = _ref.top,\n    bottom = _ref.bottom,\n    _ref$closeIcon = _ref.closeIcon,\n    closeIcon = _ref$closeIcon === void 0 ? defaultCloseIcon : _ref$closeIcon;\n  var cacheKey = \"\".concat(prefixCls, \"-\").concat(placement);\n  if (notificationInstance[cacheKey]) {\n    callback(notificationInstance[cacheKey]);\n    return;\n  }\n  var closeIconToRender = React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-close-x\")\n  }, closeIcon || React.createElement(Icon, {\n    className: \"\".concat(prefixCls, \"-close-icon\"),\n    type: \"close\"\n  }));\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    className: \"\".concat(prefixCls, \"-\").concat(placement),\n    style: getPlacementStyle(placement, top, bottom),\n    getContainer: getContainer,\n    closeIcon: closeIconToRender\n  }, function (notification) {\n    notificationInstance[cacheKey] = notification;\n    callback(notification);\n  });\n}\nvar typeToIcon = {\n  success: 'check-circle-o',\n  info: 'info-circle-o',\n  error: 'close-circle-o',\n  warning: 'exclamation-circle-o'\n};\nfunction notice(args) {\n  var outerPrefixCls = args.prefixCls || 'ant-notification';\n  var prefixCls = \"\".concat(outerPrefixCls, \"-notice\");\n  var duration = args.duration === undefined ? defaultDuration : args.duration;\n  var iconNode = null;\n  if (args.icon) {\n    iconNode = React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, args.icon);\n  } else if (args.type) {\n    var iconType = typeToIcon[args.type];\n    iconNode = React.createElement(Icon, {\n      className: \"\".concat(prefixCls, \"-icon \").concat(prefixCls, \"-icon-\").concat(args.type),\n      type: iconType\n    });\n  }\n  var autoMarginTag = !args.description && iconNode ? React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-message-single-line-auto-margin\")\n  }) : null;\n  var placement = args.placement,\n    top = args.top,\n    bottom = args.bottom,\n    getContainer = args.getContainer,\n    closeIcon = args.closeIcon;\n  getNotificationInstance({\n    prefixCls: outerPrefixCls,\n    placement: placement,\n    top: top,\n    bottom: bottom,\n    getContainer: getContainer,\n    closeIcon: closeIcon\n  }, function (notification) {\n    notification.notice({\n      content: React.createElement(\"div\", {\n        className: iconNode ? \"\".concat(prefixCls, \"-with-icon\") : ''\n      }, iconNode, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-message\")\n      }, autoMarginTag, args.message), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-description\")\n      }, args.description), args.btn ? React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-btn\")\n      }, args.btn) : null),\n      duration: duration,\n      closable: true,\n      onClose: args.onClose,\n      onClick: args.onClick,\n      key: args.key,\n      style: args.style || {},\n      className: args.className\n    });\n  });\n}\nvar api = {\n  open: notice,\n  close: function close(key) {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      return notificationInstance[cacheKey].removeNotice(key);\n    });\n  },\n  config: setNotificationConfig,\n  destroy: function destroy() {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      notificationInstance[cacheKey].destroy();\n      delete notificationInstance[cacheKey];\n    });\n  }\n};\n['success', 'info', 'warning', 'error'].forEach(function (type) {\n  api[type] = function (args) {\n    return api.open(_extends(_extends({}, args), {\n      type: type\n    }));\n  };\n});\napi.warn = api.warning;\nexport default api;","map":{"version":3,"mappings":"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","names":["React","Notification","Icon","notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","defaultGetContainer","defaultCloseIcon","setNotificationConfig","options","duration","placement","bottom","top","getContainer","closeIcon","undefined","getPlacementStyle","style","left","right","getNotificationInstance","callback","prefixCls","_ref$placement","_ref$getContainer","_ref$closeIcon","cacheKey","closeIconToRender","className","type","newInstance","notification","typeToIcon","success","info","error","warning","notice","args","outerPrefixCls","iconNode","icon","iconType","autoMarginTag","description","content","message","btn","closable","onClose","onClick","key","api","open","close","Object","keys","forEach","removeNotice","config","destroy","_extends","warn"],"sources":["C:\\xampp\\htdocs\\teambuilding-photo\\node_modules\\antd\\es\\notification\\notification\\index.jsx"],"sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nconst notificationInstance = {};\nlet defaultDuration = 4.5;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet defaultPlacement = 'topRight';\nlet defaultGetContainer;\nlet defaultCloseIcon;\nfunction setNotificationConfig(options) {\n    const { duration, placement, bottom, top, getContainer, closeIcon } = options;\n    if (duration !== undefined) {\n        defaultDuration = duration;\n    }\n    if (placement !== undefined) {\n        defaultPlacement = placement;\n    }\n    if (bottom !== undefined) {\n        defaultBottom = bottom;\n    }\n    if (top !== undefined) {\n        defaultTop = top;\n    }\n    if (getContainer !== undefined) {\n        defaultGetContainer = getContainer;\n    }\n    if (closeIcon !== undefined) {\n        defaultCloseIcon = closeIcon;\n    }\n}\nfunction getPlacementStyle(placement, top = defaultTop, bottom = defaultBottom) {\n    let style;\n    switch (placement) {\n        case 'topLeft':\n            style = {\n                left: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'topRight':\n            style = {\n                right: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'bottomLeft':\n            style = {\n                left: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n        default:\n            style = {\n                right: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n    }\n    return style;\n}\nfunction getNotificationInstance({ prefixCls, placement = defaultPlacement, getContainer = defaultGetContainer, top, bottom, closeIcon = defaultCloseIcon, }, callback) {\n    const cacheKey = `${prefixCls}-${placement}`;\n    if (notificationInstance[cacheKey]) {\n        callback(notificationInstance[cacheKey]);\n        return;\n    }\n    const closeIconToRender = (<span className={`${prefixCls}-close-x`}>\n      {closeIcon || <Icon className={`${prefixCls}-close-icon`} type=\"close\"/>}\n    </span>);\n    Notification.newInstance({\n        prefixCls,\n        className: `${prefixCls}-${placement}`,\n        style: getPlacementStyle(placement, top, bottom),\n        getContainer,\n        closeIcon: closeIconToRender,\n    }, (notification) => {\n        notificationInstance[cacheKey] = notification;\n        callback(notification);\n    });\n}\nconst typeToIcon = {\n    success: 'check-circle-o',\n    info: 'info-circle-o',\n    error: 'close-circle-o',\n    warning: 'exclamation-circle-o',\n};\nfunction notice(args) {\n    const outerPrefixCls = args.prefixCls || 'ant-notification';\n    const prefixCls = `${outerPrefixCls}-notice`;\n    const duration = args.duration === undefined ? defaultDuration : args.duration;\n    let iconNode = null;\n    if (args.icon) {\n        iconNode = <span className={`${prefixCls}-icon`}>{args.icon}</span>;\n    }\n    else if (args.type) {\n        const iconType = typeToIcon[args.type];\n        iconNode = (<Icon className={`${prefixCls}-icon ${prefixCls}-icon-${args.type}`} type={iconType}/>);\n    }\n    const autoMarginTag = !args.description && iconNode ? (<span className={`${prefixCls}-message-single-line-auto-margin`}/>) : null;\n    const { placement, top, bottom, getContainer, closeIcon } = args;\n    getNotificationInstance({\n        prefixCls: outerPrefixCls,\n        placement,\n        top,\n        bottom,\n        getContainer,\n        closeIcon,\n    }, (notification) => {\n        notification.notice({\n            content: (<div className={iconNode ? `${prefixCls}-with-icon` : ''}>\n            {iconNode}\n            <div className={`${prefixCls}-message`}>\n              {autoMarginTag}\n              {args.message}\n            </div>\n            <div className={`${prefixCls}-description`}>{args.description}</div>\n            {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\n          </div>),\n            duration,\n            closable: true,\n            onClose: args.onClose,\n            onClick: args.onClick,\n            key: args.key,\n            style: args.style || {},\n            className: args.className,\n        });\n    });\n}\nconst api = {\n    open: notice,\n    close(key) {\n        Object.keys(notificationInstance).forEach(cacheKey => notificationInstance[cacheKey].removeNotice(key));\n    },\n    config: setNotificationConfig,\n    destroy() {\n        Object.keys(notificationInstance).forEach(cacheKey => {\n            notificationInstance[cacheKey].destroy();\n            delete notificationInstance[cacheKey];\n        });\n    },\n};\n['success', 'info', 'warning', 'error'].forEach(type => {\n    api[type] = (args) => api.open(Object.assign(Object.assign({}, args), { type }));\n});\napi.warn = api.warning;\nexport default api;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}